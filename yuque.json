[
  {
    "id": 97668742,
    "slug": "hgpg7a",
    "title": "浅谈 husky 原理",
    "book_id": 32484128,
    "book": {
      "id": 32484128,
      "type": "Book",
      "slug": "blog",
      "name": "Blog",
      "user_id": 246478,
      "description": null,
      "creator_id": 246478,
      "public": 1,
      "items_count": 2,
      "likes_count": 0,
      "watches_count": 0,
      "content_updated_at": "2022-10-23T16:13:12.975Z",
      "updated_at": "2022-10-23T16:13:13.000Z",
      "created_at": "2022-09-09T16:25:33.000Z",
      "namespace": "soonwang/blog",
      "user": {
        "id": 246478,
        "type": "User",
        "login": "soonwang",
        "name": "soonwang",
        "description": "时间比钱更宝贵，钱你不用它还在那里，而时间你不用它就浪费掉了",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/246478/1571978069703-avatar/5d8b5538-cf1c-4577-9e21-83f424991d94.png",
        "books_count": 13,
        "public_books_count": 1,
        "followers_count": 0,
        "following_count": 2,
        "created_at": "2019-01-16T02:38:54.000Z",
        "updated_at": "2022-10-23T16:12:16.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 246478,
    "creator": {
      "id": 246478,
      "type": "User",
      "login": "soonwang",
      "name": "soonwang",
      "description": "时间比钱更宝贵，钱你不用它还在那里，而时间你不用它就浪费掉了",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/246478/1571978069703-avatar/5d8b5538-cf1c-4577-9e21-83f424991d94.png",
      "books_count": 13,
      "public_books_count": 1,
      "followers_count": 0,
      "following_count": 2,
      "created_at": "2019-01-16T02:38:54.000Z",
      "updated_at": "2022-10-23T16:12:16.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "---\n\ntags:\n\n- husky\n\n---\n\n\n最近在搭建新工程时，想给工程配置 eslint 约定一下代码规范，配置完 eslint 之后，有想着可以更进一步配置一个强校验，即不符合 eslint 配置的代码，希望在代码提交时就拦截并给出提示。面对这个场景自然而然就想到了 `husky + lint-staged`的配置，说干就干。\n\n- 首先是安装依赖，在工程根目录下执行以下命令：\n```bash\nnpm i husky lint-staged -g\n```\n\n- 接着安装以往经验就是在 `package.json` 里配置相关配置：\n```json\n{\n  \"lint-staged\": {\n    \"*.{ts,tsx}\": [\n      \"eslint --fix --cache --quiet\",\n      \"git add\"\n    ]\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"lint-staged\"\n    }\n  }\n}\n```\n<!-- more --><br />执行完上面操作后，自信满满地修改了某个 tsx 文件，并故意违反某条 eslint 配置，一顿 git 命令执行完，发现居然 commit 成功了，这就意味着 husky 配置没生效，:(。<br />心里想着这不科学啊，然后在 github 上找到了 [husky 源码](https://github.com/typicode/husky)，原来 husky 升级了，break change ，surprise !<br />原来上面这套 husky 的配置是 v4 版本，而当前工程默认安装了最新版本的 husky ，已经是 v8 了。然后跟着文档，重新配置了一遍 \n```bash\n#!/usr/bin/env sh\n. \"$(dirname -- \"$0\")/_/husky.sh\"\nnpx --no eslint --fix --cache --quiet\ngit add\n```\n配置完成之后，再次测试，发现果然成功了。<br />事情本来到这里本来就该结束了，完结，撒花……\n\n但是隐隐感觉到有哪里不对，按照我之前对 git hooks 以及 husky v4 的了解，git hooks 的作用是在于 工程里 hooks 的配置文件，这些 hook 文件会在 git 的特定时期执行，比如常见的 `pre-commit`、`commit-msg`等。<br />更多的可以查看[这里](https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks)。<br />而根据我之前的了解，以前版本的 husky 正是利用 git hooks 的机制，在安装依赖的时候执行 husky 里的脚本，修改了 git hooks 里的文件，具体目录为工程根目录下的 `.git/hooks/pre-commit`等。<br />那 husky v8 版本又是做了些什么呢，是什么原理呢，为什么在 `.husky/pre-commit`里配置就可以生效呢，是复制了一份到 `.git/hooks/`目录下吗？<br />好奇心的驱使下，进到 `.git/hooks/`目录下，一探究竟。结果惊了个呆，hooks 下面只有默认的一些 sample 文件，并没有期待中的 `pre-commit`文件复制版。\n```bash\n# cd .git/hooks\n# ls\napplypatch-msg.sample     pre-applypatch.sample     pre-rebase.sample\ncommit-msg.sample         pre-commit.sample         prepare-commit-msg.sample\npost-update.sample        pre-push.sample           update.sample\n```\n那究竟是怎么回事呢，带着这样的疑问，去阅读了源码。还好，新版的 husky 代码少了许多，很容易就发现了其中的关键：\n```javascript\n// Configure repo\nconst { error } = git(['config', 'core.hooksPath', dir])\n```\n原来在执行 `husky install`的命令时，husky 会执行以下步骤：\n\n1. 先执行一系列检查，确保是在 git 工程里，并存在 `.git`目录\n2. 然后复制 `.husky`目录到工程根目录\n3. 最后执行 `git config core.hooksPath .husky`，将 `.husky`目录配置为新的 git hooks 目录\n\n这里 `git config core.hooksPath .husky`看字面意思就是重新设置 git hooks 的目录，默认的 git hooks 目录就像上面叙述的，是 `.git/hooks`，所以这个命令很明显就是替换这个目录，这样一切就解释的通了，豁然开朗的感觉！\n\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/246478/1666539378266-059f5e66-d9d9-46b8-85a6-dd24ab16812a.png#clientId=u42cededb-a03f-4&crop=0&crop=0&crop=1&crop=1&errorMessage=unknown%20error&from=paste&height=315&id=u0be7c326&margin=%5Bobject%20Object%5D&name=image.png&originHeight=315&originWidth=688&originalType=binary&ratio=1&rotation=0&showTitle=false&size=53878&status=error&style=none&taskId=u7d02a5f0-1147-48d0-a39e-863d34814e3&title=&width=688)<br />到现在可以说基本解答了疑惑，但是八卦的我还有一个疑问，既然有这么好用的一个 git 配置，为啥 husky 是另外的机制呢（直接修改 .git/hooks/ 目录下的 hook 文件）？<br />这个疑问最终在 StackOverflow 找到了答案：<br />[https://stackoverflow.com/questions/39332407/git-hooks-applying-git-config-core-hookspath](https://stackoverflow.com/questions/39332407/git-hooks-applying-git-config-core-hookspath)<br />![image.png](https://cdn.nlark.com/yuque/0/2022/png/246478/1666539617634-8cb588a7-2842-45f6-85ee-3d0495164dd6.png#clientId=u42cededb-a03f-4&crop=0&crop=0&crop=1&crop=1&errorMessage=unknown%20error&from=paste&height=208&id=ubea0b88f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=208&originWidth=723&originalType=binary&ratio=1&rotation=0&showTitle=false&size=40313&status=error&style=none&taskId=u7bead65a-c49f-4546-ab69-397fc9e4a8d&title=&width=723)<br />原因就是`git config core.hooksPath`这个命令是在 Git v2.9.0 版本才支持的。<br />在2016.05.05 提交的 commit 中支持了该命令[https://github.com/git/git/commit/867ad08a2610526edb5723804723d371136fc643](https://github.com/git/git/commit/867ad08a2610526edb5723804723d371136fc643)<br />那 husky 大概是什么时候创建的呢，通过查看 issues，我们可以发现第一个 issue 是在 2014 年，远比这个 commit 时期早！<br />[https://github.com/typicode/husky/issues/1](https://github.com/typicode/husky/issues/1)<br />![image.png](https://cdn.nlark.com/yuque/0/2022/png/246478/1666540094587-3a7d32e2-2f20-4a49-aaab-29ab388a0785.png#clientId=u42cededb-a03f-4&crop=0&crop=0&crop=1&crop=1&errorMessage=unknown%20error&from=paste&height=134&id=u5d699d73&margin=%5Bobject%20Object%5D&name=image.png&originHeight=134&originWidth=807&originalType=binary&ratio=1&rotation=0&showTitle=false&size=27178&status=error&style=none&taskId=u0ee0b2a5-3a6c-4921-8b74-bcb7aef81af&title=&width=807)<br />真·完结·撒花！\n",
    "body_draft": "---\n\ntags:\n\n- husky\n\n---\n\n\n最近在搭建新工程时，想给工程配置 eslint 约定一下代码规范，配置完 eslint 之后，有想着可以更进一步配置一个强校验，即不符合 eslint 配置的代码，希望在代码提交时就拦截并给出提示。面对这个场景自然而然就想到了 `husky + lint-staged`的配置，说干就干。\n\n- 首先是安装依赖，在工程根目录下执行以下命令：\n```bash\nnpm i husky lint-staged -g\n```\n\n- 接着安装以往经验就是在 `package.json` 里配置相关配置：\n```json\n{\n  \"lint-staged\": {\n    \"*.{ts,tsx}\": [\n      \"eslint --fix --cache --quiet\",\n      \"git add\"\n    ]\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"lint-staged\"\n    }\n  }\n}\n```\n<!-- more --><br />执行完上面操作后，自信满满地修改了某个 tsx 文件，并故意违反某条 eslint 配置，一顿 git 命令执行完，发现居然 commit 成功了，这就意味着 husky 配置没生效，:(。<br />心里想着这不科学啊，然后在 github 上找到了 [husky 源码](https://github.com/typicode/husky)，原来 husky 升级了，break change ，surprise !<br />原来上面这套 husky 的配置是 v4 版本，而当前工程默认安装了最新版本的 husky ，已经是 v8 了。然后跟着文档，重新配置了一遍 \n```bash\n#!/usr/bin/env sh\n. \"$(dirname -- \"$0\")/_/husky.sh\"\nnpx --no eslint --fix --cache --quiet\ngit add\n```\n配置完成之后，再次测试，发现果然成功了。<br />事情本来到这里本来就该结束了，完结，撒花……\n\n但是隐隐感觉到有哪里不对，按照我之前对 git hooks 以及 husky v4 的了解，git hooks 的作用是在于 工程里 hooks 的配置文件，这些 hook 文件会在 git 的特定时期执行，比如常见的 `pre-commit`、`commit-msg`等。<br />更多的可以查看[这里](https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks)。<br />而根据我之前的了解，以前版本的 husky 正是利用 git hooks 的机制，在安装依赖的时候执行 husky 里的脚本，修改了 git hooks 里的文件，具体目录为工程根目录下的 `.git/hooks/pre-commit`等。<br />那 husky v8 版本又是做了些什么呢，是什么原理呢，为什么在 `.husky/pre-commit`里配置就可以生效呢，是复制了一份到 `.git/hooks/`目录下吗？<br />好奇心的驱使下，进到 `.git/hooks/`目录下，一探究竟。结果惊了个呆，hooks 下面只有默认的一些 sample 文件，并没有期待中的 `pre-commit`文件复制版。\n```bash\n# cd .git/hooks\n# ls\napplypatch-msg.sample     pre-applypatch.sample     pre-rebase.sample\ncommit-msg.sample         pre-commit.sample         prepare-commit-msg.sample\npost-update.sample        pre-push.sample           update.sample\n```\n那究竟是怎么回事呢，带着这样的疑问，去阅读了源码。还好，新版的 husky 代码少了许多，很容易就发现了其中的关键：\n```javascript\n// Configure repo\nconst { error } = git(['config', 'core.hooksPath', dir])\n```\n原来在执行 `husky install`的命令时，husky 会执行以下步骤：\n\n1. 先执行一系列检查，确保是在 git 工程里，并存在 `.git`目录\n2. 然后复制 `.husky`目录到工程根目录\n3. 最后执行 `git config core.hooksPath .husky`，将 `.husky`目录配置为新的 git hooks 目录\n\n这里 `git config core.hooksPath .husky`看字面意思就是重新设置 git hooks 的目录，默认的 git hooks 目录就像上面叙述的，是 `.git/hooks`，所以这个命令很明显就是替换这个目录，这样一切就解释的通了，豁然开朗的感觉！\n\n![image.png](https://cdn.nlark.com/yuque/0/2022/png/246478/1666539378266-059f5e66-d9d9-46b8-85a6-dd24ab16812a.png#clientId=u42cededb-a03f-4&crop=0&crop=0&crop=1&crop=1&errorMessage=unknown%20error&from=paste&height=315&id=u0be7c326&margin=%5Bobject%20Object%5D&name=image.png&originHeight=315&originWidth=688&originalType=binary&ratio=1&rotation=0&showTitle=false&size=53878&status=error&style=none&taskId=u7d02a5f0-1147-48d0-a39e-863d34814e3&title=&width=688)<br />到现在可以说基本解答了疑惑，但是八卦的我还有一个疑问，既然有这么好用的一个 git 配置，为啥 husky 是另外的机制呢（直接修改 .git/hooks/ 目录下的 hook 文件）？<br />这个疑问最终在 StackOverflow 找到了答案：<br />[https://stackoverflow.com/questions/39332407/git-hooks-applying-git-config-core-hookspath](https://stackoverflow.com/questions/39332407/git-hooks-applying-git-config-core-hookspath)<br />![image.png](https://cdn.nlark.com/yuque/0/2022/png/246478/1666539617634-8cb588a7-2842-45f6-85ee-3d0495164dd6.png#clientId=u42cededb-a03f-4&crop=0&crop=0&crop=1&crop=1&errorMessage=unknown%20error&from=paste&height=208&id=ubea0b88f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=208&originWidth=723&originalType=binary&ratio=1&rotation=0&showTitle=false&size=40313&status=error&style=none&taskId=u7bead65a-c49f-4546-ab69-397fc9e4a8d&title=&width=723)<br />原因就是`git config core.hooksPath`这个命令是在 Git v2.9.0 版本才支持的。<br />在2016.05.05 提交的 commit 中支持了该命令[https://github.com/git/git/commit/867ad08a2610526edb5723804723d371136fc643](https://github.com/git/git/commit/867ad08a2610526edb5723804723d371136fc643)<br />那 husky 大概是什么时候创建的呢，通过查看 issues，我们可以发现第一个 issue 是在 2014 年，远比这个 commit 时期早！<br />[https://github.com/typicode/husky/issues/1](https://github.com/typicode/husky/issues/1)<br />![image.png](https://cdn.nlark.com/yuque/0/2022/png/246478/1666540094587-3a7d32e2-2f20-4a49-aaab-29ab388a0785.png#clientId=u42cededb-a03f-4&crop=0&crop=0&crop=1&crop=1&errorMessage=unknown%20error&from=paste&height=134&id=u5d699d73&margin=%5Bobject%20Object%5D&name=image.png&originHeight=134&originWidth=807&originalType=binary&ratio=1&rotation=0&showTitle=false&size=27178&status=error&style=none&taskId=u0ee0b2a5-3a6c-4921-8b74-bcb7aef81af&title=&width=807)<br />真·完结·撒花！\n",
    "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><hr id=\"rRUFq\" class=\"ne-hr\"><p id=\"u9df2b98f\" class=\"ne-p\"><span class=\"ne-text\">tags:</span></p><ul class=\"ne-ul\"><li id=\"ueadc8077\"><span class=\"ne-text\">husky</span></li></ul><hr id=\"vIOHD\" class=\"ne-hr\"><p id=\"u3a4e2c03\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"ud8e4aac8\" class=\"ne-p\"><span class=\"ne-text\">最近在搭建新工程时，想给工程配置 eslint 约定一下代码规范，配置完 eslint 之后，有想着可以更进一步配置一个强校验，即不符合 eslint 配置的代码，希望在代码提交时就拦截并给出提示。面对这个场景自然而然就想到了 </span><code class=\"ne-code\"><span class=\"ne-text\">husky + lint-staged</span></code><span class=\"ne-text\">的配置，说干就干。</span></p><ul class=\"ne-ul\"><li id=\"u42bd18fa\"><span class=\"ne-text\">首先是安装依赖，在工程根目录下执行以下命令：</span></li></ul><pre data-language=\"bash\" id=\"dHGcR\" class=\"ne-codeblock language-bash\">npm i husky lint-staged -g</pre><ul class=\"ne-ul\"><li id=\"u05366f76\"><span class=\"ne-text\">接着安装以往经验就是在 </span><code class=\"ne-code\"><span class=\"ne-text\">package.json</span></code><span class=\"ne-text\"> 里配置相关配置：</span></li></ul><pre data-language=\"json\" id=\"OKf5X\" class=\"ne-codeblock language-json\">{\n  &quot;lint-staged&quot;: {\n    &quot;*.{ts,tsx}&quot;: [\n      &quot;eslint --fix --cache --quiet&quot;,\n      &quot;git add&quot;\n    ]\n  },\n  &quot;husky&quot;: {\n    &quot;hooks&quot;: {\n      &quot;pre-commit&quot;: &quot;lint-staged&quot;\n    }\n  }\n}</pre><p id=\"ua47a85ad\" class=\"ne-p\"><span class=\"ne-text\">&lt;!-- more --&gt;</span></p><p id=\"u0eb88fcb\" class=\"ne-p\"><span class=\"ne-text\">执行完上面操作后，自信满满地修改了某个 tsx 文件，并故意违反某条 eslint 配置，一顿 git 命令执行完，发现居然 commit 成功了，这就意味着 husky 配置没生效，:(。</span></p><p id=\"u3a33c578\" class=\"ne-p\"><span class=\"ne-text\">心里想着这不科学啊，然后在 github 上找到了 </span><a href=\"https://github.com/typicode/husky\" data-href=\"https://github.com/typicode/husky\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">husky 源码</span></a><span class=\"ne-text\">，原来 husky 升级了，break change ，surprise !</span></p><p id=\"ub74700f0\" class=\"ne-p\"><span class=\"ne-text\">原来上面这套 husky 的配置是 v4 版本，而当前工程默认安装了最新版本的 husky ，已经是 v8 了。然后跟着文档，重新配置了一遍 </span></p><pre data-language=\"bash\" id=\"yuuJf\" class=\"ne-codeblock language-bash\">#!/usr/bin/env sh\n. &quot;$(dirname -- &quot;$0&quot;)/_/husky.sh&quot;\nnpx --no eslint --fix --cache --quiet\ngit add</pre><p id=\"u98a4d1e9\" class=\"ne-p\"><span class=\"ne-text\">配置完成之后，再次测试，发现果然成功了。</span></p><p id=\"u01793a47\" class=\"ne-p\"><span class=\"ne-text\">事情本来到这里本来就该结束了，完结，撒花……</span></p><p id=\"ua05304ce\" class=\"ne-p\"><span class=\"ne-text\"></span></p><p id=\"u2e860309\" class=\"ne-p\"><span class=\"ne-text\">但是隐隐感觉到有哪里不对，按照我之前对 git hooks 以及 husky v4 的了解，git hooks 的作用是在于 工程里 hooks 的配置文件，这些 hook 文件会在 git 的特定时期执行，比如常见的 </span><code class=\"ne-code\"><span class=\"ne-text\">pre-commit</span></code><span class=\"ne-text\">、</span><code class=\"ne-code\"><span class=\"ne-text\">commit-msg</span></code><span class=\"ne-text\">等。</span></p><p id=\"uf36c4e2d\" class=\"ne-p\"><span class=\"ne-text\">更多的可以查看</span><a href=\"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks\" data-href=\"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">这里</span></a><span class=\"ne-text\">。</span></p><p id=\"ub99a3319\" class=\"ne-p\"><span class=\"ne-text\">而根据我之前的了解，以前版本的 husky 正是利用 git hooks 的机制，在安装依赖的时候执行 husky 里的脚本，修改了 git hooks 里的文件，具体目录为工程根目录下的 </span><code class=\"ne-code\"><span class=\"ne-text\">.git/hooks/pre-commit</span></code><span class=\"ne-text\">等。</span></p><p id=\"u20555bc3\" class=\"ne-p\"><span class=\"ne-text\">那 husky v8 版本又是做了些什么呢，是什么原理呢，为什么在 </span><code class=\"ne-code\"><span class=\"ne-text\">.husky/pre-commit</span></code><span class=\"ne-text\">里配置就可以生效呢，是复制了一份到 </span><code class=\"ne-code\"><span class=\"ne-text\">.git/hooks/</span></code><span class=\"ne-text\">目录下吗？</span></p><p id=\"u4d3a827c\" class=\"ne-p\"><span class=\"ne-text\">好奇心的驱使下，进到 </span><code class=\"ne-code\"><span class=\"ne-text\">.git/hooks/</span></code><span class=\"ne-text\">目录下，一探究竟。结果惊了个呆，hooks 下面只有默认的一些 sample 文件，并没有期待中的 </span><code class=\"ne-code\"><span class=\"ne-text\">pre-commit</span></code><span class=\"ne-text\">文件复制版。</span></p><pre data-language=\"bash\" id=\"ydUeZ\" class=\"ne-codeblock language-bash\"># cd .git/hooks\n# ls\napplypatch-msg.sample     pre-applypatch.sample     pre-rebase.sample\ncommit-msg.sample         pre-commit.sample         prepare-commit-msg.sample\npost-update.sample        pre-push.sample           update.sample</pre><p id=\"uc20608bd\" class=\"ne-p\"><span class=\"ne-text\">那究竟是怎么回事呢，带着这样的疑问，去阅读了源码。还好，新版的 husky 代码少了许多，很容易就发现了其中的关键：</span></p><pre data-language=\"javascript\" id=\"dTyAG\" class=\"ne-codeblock language-javascript\">// Configure repo\nconst { error } = git(['config', 'core.hooksPath', dir])</pre><p id=\"uc5470b13\" class=\"ne-p\"><span class=\"ne-text\">原来在执行 </span><code class=\"ne-code\"><span class=\"ne-text\">husky install</span></code><span class=\"ne-text\">的命令时，husky 会执行以下步骤：</span></p><ol class=\"ne-ol\"><li id=\"u1a94d3a3\"><span class=\"ne-text\">先执行一系列检查，确保是在 git 工程里，并存在 </span><code class=\"ne-code\"><span class=\"ne-text\">.git</span></code><span class=\"ne-text\">目录</span></li><li id=\"u3bdfdd53\"><span class=\"ne-text\">然后复制 </span><code class=\"ne-code\"><span class=\"ne-text\">.husky</span></code><span class=\"ne-text\">目录到工程根目录</span></li><li id=\"uf71daf3f\"><span class=\"ne-text\">最后执行 </span><code class=\"ne-code\"><span class=\"ne-text\">git config core.hooksPath .husky</span></code><span class=\"ne-text\">，将 </span><code class=\"ne-code\"><span class=\"ne-text\">.husky</span></code><span class=\"ne-text\">目录配置为新的 git hooks 目录</span></li></ol><p id=\"uf06a6bca\" class=\"ne-p\"><span class=\"ne-text\">这里 </span><code class=\"ne-code\"><span class=\"ne-text\">git config core.hooksPath .husky</span></code><span class=\"ne-text\">看字面意思就是重新设置 git hooks 的目录，默认的 git hooks 目录就像上面叙述的，是 </span><code class=\"ne-code\"><span class=\"ne-text\">.git/hooks</span></code><span class=\"ne-text\">，所以这个命令很明显就是替换这个目录，这样一切就解释的通了，豁然开朗的感觉！</span></p><p id=\"ub1b3c3c9\" class=\"ne-p\"><span id=\"SAfMI\" class=\"ne-bookmark-inline\"><a href=\"https://git-scm.com/docs/githooks\" target=\"_blank\">https://git-scm.com/docs/githooks</a></span></p><p id=\"u3a9b6253\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2022/png/246478/1666539378266-059f5e66-d9d9-46b8-85a6-dd24ab16812a.png\" width=\"688\" id=\"u0be7c326\" class=\"ne-image\"></p><p id=\"u59a66d19\" class=\"ne-p\"><span class=\"ne-text\">到现在可以说基本解答了疑惑，但是八卦的我还有一个疑问，既然有这么好用的一个 git 配置，为啥 husky 是另外的机制呢（直接修改 .git/hooks/ 目录下的 hook 文件）？</span></p><p id=\"u394af93e\" class=\"ne-p\"><span class=\"ne-text\">这个疑问最终在 StackOverflow 找到了答案：</span></p><p id=\"u875cab48\" class=\"ne-p\"><a href=\"https://stackoverflow.com/questions/39332407/git-hooks-applying-git-config-core-hookspath\" data-href=\"https://stackoverflow.com/questions/39332407/git-hooks-applying-git-config-core-hookspath\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://stackoverflow.com/questions/39332407/git-hooks-applying-git-config-core-hookspath</span></a></p><p id=\"u96abf02e\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2022/png/246478/1666539617634-8cb588a7-2842-45f6-85ee-3d0495164dd6.png\" width=\"723\" id=\"ubea0b88f\" class=\"ne-image\"></p><p id=\"ub3f2730d\" class=\"ne-p\"><span class=\"ne-text\">原因就是</span><code class=\"ne-code\"><span class=\"ne-text\">git config core.hooksPath</span></code><span class=\"ne-text\">这个命令是在 Git v2.9.0 版本才支持的。</span></p><p id=\"u29faf8ab\" class=\"ne-p\"><span class=\"ne-text\">在2016.05.05 提交的 commit 中支持了该命令</span><a href=\"https://github.com/git/git/commit/867ad08a2610526edb5723804723d371136fc643\" data-href=\"https://github.com/git/git/commit/867ad08a2610526edb5723804723d371136fc643\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://github.com/git/git/commit/867ad08a2610526edb5723804723d371136fc643</span></a></p><p id=\"u74dea983\" class=\"ne-p\"><span class=\"ne-text\">那 husky 大概是什么时候创建的呢，通过查看 issues，我们可以发现第一个 issue 是在 2014 年，远比这个 commit 时期早！</span></p><p id=\"u1e485834\" class=\"ne-p\"><a href=\"https://github.com/typicode/husky/issues/1\" data-href=\"https://github.com/typicode/husky/issues/1\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">https://github.com/typicode/husky/issues/1</span></a></p><p id=\"ub725ff2a\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2022/png/246478/1666540094587-3a7d32e2-2f20-4a49-aaab-29ab388a0785.png\" width=\"807\" id=\"u5d699d73\" class=\"ne-image\"></p><p id=\"ua04fa7cd\" class=\"ne-p\"><span class=\"ne-text\">真·完结·撒花！</span></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"paragraphSpacing\" content=\"relax\" /><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22rRUFq%22%7D\"></card><p data-lake-id=\"u9df2b98f\" id=\"u9df2b98f\"><span data-lake-id=\"u4938d29e\" id=\"u4938d29e\">tags:</span></p><ul list=\"u3e1a1ff4\"><li fid=\"uddd46c2b\" data-lake-id=\"ueadc8077\" id=\"ueadc8077\"><span data-lake-id=\"ua1200a22\" id=\"ua1200a22\">husky</span></li></ul><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22vIOHD%22%7D\"></card><p data-lake-id=\"u3a4e2c03\" id=\"u3a4e2c03\"><span data-lake-id=\"u3325855f\" id=\"u3325855f\">​</span><br></p><p data-lake-id=\"ud8e4aac8\" id=\"ud8e4aac8\"><span data-lake-id=\"uc08161dc\" id=\"uc08161dc\">最近在搭建新工程时，想给工程配置 eslint 约定一下代码规范，配置完 eslint 之后，有想着可以更进一步配置一个强校验，即不符合 eslint 配置的代码，希望在代码提交时就拦截并给出提示。面对这个场景自然而然就想到了 </span><code data-lake-id=\"u0820bed8\" id=\"u0820bed8\"><span data-lake-id=\"u87459233\" id=\"u87459233\">husky + lint-staged</span></code><span data-lake-id=\"u4bb44db5\" id=\"u4bb44db5\">的配置，说干就干。</span></p><ul list=\"u4e6ba0c7\"><li fid=\"uf604aba1\" data-lake-id=\"u42bd18fa\" id=\"u42bd18fa\"><span data-lake-id=\"uae732a9a\" id=\"uae732a9a\">首先是安装依赖，在工程根目录下执行以下命令：</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22npm%20i%20husky%20lint-staged%20-g%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22dHGcR%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><ul list=\"u44af3d95\"><li fid=\"ucd2b3608\" data-lake-id=\"u05366f76\" id=\"u05366f76\"><span data-lake-id=\"ua3aee279\" id=\"ua3aee279\">接着安装以往经验就是在 </span><code data-lake-id=\"udd56515f\" id=\"udd56515f\"><span data-lake-id=\"u1782eea9\" id=\"u1782eea9\">package.json</span></code><span data-lake-id=\"ua0a0c90b\" id=\"ua0a0c90b\"> 里配置相关配置：</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%7B%5Cn%20%20%5C%22lint-staged%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22*.%7Bts%2Ctsx%7D%5C%22%3A%20%5B%5Cn%20%20%20%20%20%20%5C%22eslint%20--fix%20--cache%20--quiet%5C%22%2C%5Cn%20%20%20%20%20%20%5C%22git%20add%5C%22%5Cn%20%20%20%20%5D%5Cn%20%20%7D%2C%5Cn%20%20%5C%22husky%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22hooks%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%5C%22pre-commit%5C%22%3A%20%5C%22lint-staged%5C%22%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22package.json%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22OKf5X%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"ua47a85ad\" id=\"ua47a85ad\"><span data-lake-id=\"u1d9529c3\" id=\"u1d9529c3\">&lt;!-- more --&gt;</span></p><p data-lake-id=\"u0eb88fcb\" id=\"u0eb88fcb\"><span data-lake-id=\"u48b8bcba\" id=\"u48b8bcba\">执行完上面操作后，自信满满地修改了某个 tsx 文件，并故意违反某条 eslint 配置，一顿 git 命令执行完，发现居然 commit 成功了，这就意味着 husky 配置没生效，:(。</span></p><p data-lake-id=\"u3a33c578\" id=\"u3a33c578\"><span data-lake-id=\"u33352278\" id=\"u33352278\">心里想着这不科学啊，然后在 github 上找到了 </span><a href=\"https://github.com/typicode/husky\" target=\"_blank\" data-lake-id=\"u92e91386\" id=\"u92e91386\"><span data-lake-id=\"u0b106698\" id=\"u0b106698\">husky 源码</span></a><span data-lake-id=\"ucd186106\" id=\"ucd186106\">，原来 husky 升级了，break change ，surprise !</span></p><p data-lake-id=\"ub74700f0\" id=\"ub74700f0\"><span data-lake-id=\"ue75d423b\" id=\"ue75d423b\">原来上面这套 husky 的配置是 v4 版本，而当前工程默认安装了最新版本的 husky ，已经是 v8 了。然后跟着文档，重新配置了一遍 </span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%23!%2Fusr%2Fbin%2Fenv%20sh%5Cn.%20%5C%22%24(dirname%20--%20%5C%22%240%5C%22)%2F_%2Fhusky.sh%5C%22%5Cnnpx%20--no%20eslint%20--fix%20--cache%20--quiet%5Cngit%20add%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22.husky%2Fpre-commit%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22yuuJf%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u98a4d1e9\" id=\"u98a4d1e9\"><span data-lake-id=\"ufbe2581a\" id=\"ufbe2581a\">配置完成之后，再次测试，发现果然成功了。</span></p><p data-lake-id=\"u01793a47\" id=\"u01793a47\"><span data-lake-id=\"u9ff7cde1\" id=\"u9ff7cde1\">事情本来到这里本来就该结束了，完结，撒花……</span></p><p data-lake-id=\"ua05304ce\" id=\"ua05304ce\"><span data-lake-id=\"ubbb25129\" id=\"ubbb25129\">​</span><br></p><p data-lake-id=\"u2e860309\" id=\"u2e860309\"><span data-lake-id=\"u10c27af8\" id=\"u10c27af8\">但是隐隐感觉到有哪里不对，按照我之前对 git hooks 以及 husky v4 的了解，git hooks 的作用是在于 工程里 hooks 的配置文件，这些 hook 文件会在 git 的特定时期执行，比如常见的 </span><code data-lake-id=\"ua31530bb\" id=\"ua31530bb\"><span data-lake-id=\"ua5be2b18\" id=\"ua5be2b18\">pre-commit</span></code><span data-lake-id=\"u57cb915e\" id=\"u57cb915e\">、</span><code data-lake-id=\"u1ac45642\" id=\"u1ac45642\"><span data-lake-id=\"u72fa49bf\" id=\"u72fa49bf\">commit-msg</span></code><span data-lake-id=\"ue0cb190b\" id=\"ue0cb190b\">等。</span></p><p data-lake-id=\"uf36c4e2d\" id=\"uf36c4e2d\"><span data-lake-id=\"u60c74379\" id=\"u60c74379\">更多的可以查看</span><a href=\"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks\" target=\"_blank\" data-lake-id=\"u7b447557\" id=\"u7b447557\"><span data-lake-id=\"u1be2c97f\" id=\"u1be2c97f\">这里</span></a><span data-lake-id=\"u06621d65\" id=\"u06621d65\">。</span></p><p data-lake-id=\"ub99a3319\" id=\"ub99a3319\"><span data-lake-id=\"ua6605fe4\" id=\"ua6605fe4\">而根据我之前的了解，以前版本的 husky 正是利用 git hooks 的机制，在安装依赖的时候执行 husky 里的脚本，修改了 git hooks 里的文件，具体目录为工程根目录下的 </span><code data-lake-id=\"u6cea2a0f\" id=\"u6cea2a0f\"><span data-lake-id=\"ue5220d64\" id=\"ue5220d64\">.git/hooks/pre-commit</span></code><span data-lake-id=\"u0de86d68\" id=\"u0de86d68\">等。</span></p><p data-lake-id=\"u20555bc3\" id=\"u20555bc3\"><span data-lake-id=\"ua44e056f\" id=\"ua44e056f\">那 husky v8 版本又是做了些什么呢，是什么原理呢，为什么在 </span><code data-lake-id=\"ud46f775f\" id=\"ud46f775f\"><span data-lake-id=\"u4f0a72fd\" id=\"u4f0a72fd\">.husky/pre-commit</span></code><span data-lake-id=\"u0bb73fb6\" id=\"u0bb73fb6\">里配置就可以生效呢，是复制了一份到 </span><code data-lake-id=\"uf6f27720\" id=\"uf6f27720\"><span data-lake-id=\"u3828823a\" id=\"u3828823a\">.git/hooks/</span></code><span data-lake-id=\"uba799ddf\" id=\"uba799ddf\">目录下吗？</span></p><p data-lake-id=\"u4d3a827c\" id=\"u4d3a827c\"><span data-lake-id=\"ue7ece908\" id=\"ue7ece908\">好奇心的驱使下，进到 </span><code data-lake-id=\"u2b07ed3a\" id=\"u2b07ed3a\"><span data-lake-id=\"uea8f80af\" id=\"uea8f80af\">.git/hooks/</span></code><span data-lake-id=\"u96e87158\" id=\"u96e87158\">目录下，一探究竟。结果惊了个呆，hooks 下面只有默认的一些 sample 文件，并没有期待中的 </span><code data-lake-id=\"uede27b00\" id=\"uede27b00\"><span data-lake-id=\"u590eebb5\" id=\"u590eebb5\">pre-commit</span></code><span data-lake-id=\"u2ae6f62c\" id=\"u2ae6f62c\">文件复制版。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%23%20cd%20.git%2Fhooks%5Cn%23%20ls%5Cnapplypatch-msg.sample%20%20%20%20%20pre-applypatch.sample%20%20%20%20%20pre-rebase.sample%5Cncommit-msg.sample%20%20%20%20%20%20%20%20%20pre-commit.sample%20%20%20%20%20%20%20%20%20prepare-commit-msg.sample%5Cnpost-update.sample%20%20%20%20%20%20%20%20pre-push.sample%20%20%20%20%20%20%20%20%20%20%20update.sample%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22ydUeZ%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"uc20608bd\" id=\"uc20608bd\"><span data-lake-id=\"ue946453e\" id=\"ue946453e\">那究竟是怎么回事呢，带着这样的疑问，去阅读了源码。还好，新版的 husky 代码少了许多，很容易就发现了其中的关键：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20Configure%20repo%5Cnconst%20%7B%20error%20%7D%20%3D%20git(%5B'config'%2C%20'core.hooksPath'%2C%20dir%5D)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22src%2Findex.ts%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22dTyAG%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"uc5470b13\" id=\"uc5470b13\"><span data-lake-id=\"u2da4b6f5\" id=\"u2da4b6f5\">原来在执行 </span><code data-lake-id=\"uc8dbc48b\" id=\"uc8dbc48b\"><span data-lake-id=\"u31e0c760\" id=\"u31e0c760\">husky install</span></code><span data-lake-id=\"u3e2133a9\" id=\"u3e2133a9\">的命令时，husky 会执行以下步骤：</span></p><ol list=\"uec3ba829\"><li fid=\"ub6004d1b\" data-lake-id=\"u1a94d3a3\" id=\"u1a94d3a3\"><span data-lake-id=\"u87c01e0c\" id=\"u87c01e0c\">先执行一系列检查，确保是在 git 工程里，并存在 </span><code data-lake-id=\"u19112de3\" id=\"u19112de3\"><span data-lake-id=\"u6a331148\" id=\"u6a331148\">.git</span></code><span data-lake-id=\"ua6e2f7b4\" id=\"ua6e2f7b4\">目录</span></li><li fid=\"ub6004d1b\" data-lake-id=\"u3bdfdd53\" id=\"u3bdfdd53\"><span data-lake-id=\"u6d6fdaa9\" id=\"u6d6fdaa9\">然后复制 </span><code data-lake-id=\"u3f542679\" id=\"u3f542679\"><span data-lake-id=\"ufa2ee407\" id=\"ufa2ee407\">.husky</span></code><span data-lake-id=\"u61e9926b\" id=\"u61e9926b\">目录到工程根目录</span></li><li fid=\"ub6004d1b\" data-lake-id=\"uf71daf3f\" id=\"uf71daf3f\"><span data-lake-id=\"u87b73eb9\" id=\"u87b73eb9\">最后执行 </span><code data-lake-id=\"ue8cd31cb\" id=\"ue8cd31cb\"><span data-lake-id=\"u47cc0f8d\" id=\"u47cc0f8d\">git config core.hooksPath .husky</span></code><span data-lake-id=\"ufb065260\" id=\"ufb065260\">，将 </span><code data-lake-id=\"ude126c3e\" id=\"ude126c3e\"><span data-lake-id=\"u21feda9f\" id=\"u21feda9f\">.husky</span></code><span data-lake-id=\"u1b3a0275\" id=\"u1b3a0275\">目录配置为新的 git hooks 目录</span></li></ol><p data-lake-id=\"uf06a6bca\" id=\"uf06a6bca\"><span data-lake-id=\"u2b76319d\" id=\"u2b76319d\">这里 </span><code data-lake-id=\"u1cfea826\" id=\"u1cfea826\"><span data-lake-id=\"u5a61f6c7\" id=\"u5a61f6c7\">git config core.hooksPath .husky</span></code><span data-lake-id=\"u406487e4\" id=\"u406487e4\">看字面意思就是重新设置 git hooks 的目录，默认的 git hooks 目录就像上面叙述的，是 </span><code data-lake-id=\"u6156a349\" id=\"u6156a349\"><span data-lake-id=\"u9ecc5120\" id=\"u9ecc5120\">.git/hooks</span></code><span data-lake-id=\"u977567f6\" id=\"u977567f6\">，所以这个命令很明显就是替换这个目录，这样一切就解释的通了，豁然开朗的感觉！</span></p><p data-lake-id=\"ub1b3c3c9\" id=\"ub1b3c3c9\"><card type=\"inline\" name=\"bookmarkInline\" value=\"data:%7B%22mode%22%3A%22title%22%2C%22src%22%3A%22https%3A%2F%2Fgit-scm.com%2Fdocs%2Fgithooks%22%2C%22text%22%3A%22https%3A%2F%2Fgit-scm.com%2Fdocs%2Fgithooks%22%2C%22detail%22%3A%7B%22icon%22%3A%22https%3A%2F%2Fgit-scm.com%2Ffavicon.ico%22%2C%22image%22%3A%22https%3A%2F%2Fgit-scm.com%2Fimages%2Ficons%2Fgreen-dot.png%22%2C%22title%22%3A%22Git%20-%20githooks%20Documentation%22%2C%22belong%22%3A%22githooks%20Documentation%22%2C%22belong_url%22%3Anull%2C%22desc%22%3Anull%2C%22url%22%3A%22https%3A%2F%2Fgit-scm.com%2Fdocs%2Fgithooks%22%2C%22_serializer%22%3A%22web.editor_link_detail%22%7D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22SAfMI%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><p data-lake-id=\"u3a9b6253\" id=\"u3a9b6253\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F246478%2F1666539378266-059f5e66-d9d9-46b8-85a6-dd24ab16812a.png%22%2C%22taskId%22%3A%22u7d02a5f0-1147-48d0-a39e-863d34814e3%22%2C%22clientId%22%3A%22u42cededb-a03f-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A688%2C%22height%22%3A315%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A53878%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A688%2C%22originHeight%22%3A315%2C%22ratio%22%3A1%2C%22status%22%3A%22error%22%2C%22style%22%3A%22none%22%2C%22errorMessage%22%3A%22unknown%20error%22%2C%22search%22%3A%22NAME%20GITHOOKS%20-%20HOOKS%20USED%20BY%20GIT%20SYNOPSIS%20%24GIT_DIR%2FHOOKS%2F*(OR%20'GIT%20CONFIG%20CORE.HOOKSPATH'%2F*)%20DESCRIPTION%20HOOKS%20ARE%20PROGRAMS%20YOU%20CAN%20PLACE%20IN%20A%20HOOKS%20DIRECTORY%20TO%20TRIGGER%20ACTIONS%20AT%20CERTAIN%20POINTS%20IN%20GIT'S%20EXECUTION.HOOKS%20THAT%20DON'T%20HAVE%20THE%20EXECUTABLE%20BIT%20SET%20ARE%20IGNORED.%20BY%20DEFAULT%20THE%20HOOKS%20DIRECTORY%20IS%20SGIT%20DIR%2FHOOKS%20%2CBUT%20THAT%20CAN%20BE%20CHANGED%20VIA%20THE%20CONFIGURATION%20VARIABLE(SEE%20GIT-CONFIG%5B1%5D).%20CORE.HOOKSPATH%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A17.032137%2C%22y%22%3A9.211403%2C%22width%22%3A62.999663000000005%2C%22height%22%3A16.233587%2C%22text%22%3A%22NAME%22%7D%2C%7B%22x%22%3A17.48173%2C%22y%22%3A42.69823%2C%22width%22%3A181.16367%2C%22height%22%3A16.752026%2C%22text%22%3A%22GITHOOKS%20-%20HOOKS%20USED%20BY%20GIT%22%7D%2C%7B%22x%22%3A17.931448%2C%22y%22%3A96.082825%2C%22width%22%3A100.055666%2C%22height%22%3A15.048034999999999%2C%22text%22%3A%22SYNOPSIS%22%7D%2C%7B%22x%22%3A17.741682%2C%22y%22%3A125.73591%2C%22width%22%3A340.804718%2C%22height%22%3A20.842020000000005%2C%22text%22%3A%22%24GIT_DIR%2FHOOKS%2F*(OR%20'GIT%20CONFIG%20CORE.HOOKSPATH'%2F*)%22%7D%2C%7B%22x%22%3A17.897821%2C%22y%22%3A181.90825%2C%22width%22%3A139.05153900000002%2C%22height%22%3A15.078759999999988%2C%22text%22%3A%22DESCRIPTION%22%7D%2C%7B%22x%22%3A18.136278%2C%22y%22%3A215.2439%2C%22width%22%3A595.033892%2C%22height%22%3A14.97908000000001%2C%22text%22%3A%22HOOKS%20ARE%20PROGRAMS%20YOU%20CAN%20PLACE%20IN%20A%20HOOKS%20DIRECTORY%20TO%20TRIGGER%20ACTIONS%20AT%20CERTAIN%20POINTS%20IN%20GIT'S%22%7D%2C%7B%22x%22%3A17.243876%2C%22y%22%3A238.20036%2C%22width%22%3A416.081474%2C%22height%22%3A15.688360000000017%2C%22text%22%3A%22EXECUTION.HOOKS%20THAT%20DON'T%20HAVE%20THE%20EXECUTABLE%20BIT%20SET%20ARE%20IGNORED.%22%7D%2C%7B%22x%22%3A17.20636%2C%22y%22%3A270.2626%2C%22width%22%3A533.44864%2C%22height%22%3A15.052300000000002%2C%22text%22%3A%22BY%20DEFAULT%20THE%20HOOKS%20DIRECTORY%20IS%20SGIT%20DIR%2FHOOKS%20%2CBUT%20THAT%20CAN%20BE%20CHANGED%20VIA%20THE%22%7D%2C%7B%22x%22%3A149.7791%2C%22y%22%3A293.2451%2C%22width%22%3A254.75680000000003%2C%22height%22%3A15.173050000000046%2C%22text%22%3A%22CONFIGURATION%20VARIABLE(SEE%20GIT-CONFIG%5B1%5D).%22%7D%2C%7B%22x%22%3A23.859283%2C%22y%22%3A294.63525%2C%22width%22%3A119.342547%2C%22height%22%3A13.363800000000026%2C%22text%22%3A%22CORE.HOOKSPATH%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22u0be7c326%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><p data-lake-id=\"u59a66d19\" id=\"u59a66d19\"><span data-lake-id=\"ua7d50e66\" id=\"ua7d50e66\">到现在可以说基本解答了疑惑，但是八卦的我还有一个疑问，既然有这么好用的一个 git 配置，为啥 husky 是另外的机制呢（直接修改 .git/hooks/ 目录下的 hook 文件）？</span></p><p data-lake-id=\"u394af93e\" id=\"u394af93e\"><span data-lake-id=\"u63b6fcba\" id=\"u63b6fcba\">这个疑问最终在 StackOverflow 找到了答案：</span></p><p data-lake-id=\"u875cab48\" id=\"u875cab48\"><a href=\"https://stackoverflow.com/questions/39332407/git-hooks-applying-git-config-core-hookspath\" target=\"_blank\" data-lake-id=\"u571a4ed5\" id=\"u571a4ed5\"><span data-lake-id=\"u008a29fa\" id=\"u008a29fa\">https://stackoverflow.com/questions/39332407/git-hooks-applying-git-config-core-hookspath</span></a></p><p data-lake-id=\"u96abf02e\" id=\"u96abf02e\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F246478%2F1666539617634-8cb588a7-2842-45f6-85ee-3d0495164dd6.png%22%2C%22taskId%22%3A%22u7bead65a-c49f-4546-ab69-397fc9e4a8d%22%2C%22clientId%22%3A%22u42cededb-a03f-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A723%2C%22height%22%3A208%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A40313%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A723%2C%22originHeight%22%3A208%2C%22ratio%22%3A1%2C%22status%22%3A%22error%22%2C%22style%22%3A%22none%22%2C%22errorMessage%22%3A%22unknown%20error%22%2C%22search%22%3A%22THE%20CORE.HOOKSPATH%20SUPPORTIS%20NEW%20IN%20GIT%20VERSION%202.9%2C%20HAVING%20BEEN%20PUT%20IN%20WITH%20COMMIT%20867ADE8A2610526EDB5723804723D371136FC643.IF%20YOUR%20GIT%20VERSION%20IS%20NOT%20AT%20LEAST%202.9.0%2C%20SETTING%20A%2039%20HOOKS-PATH%20VARIABLE%20WILL%20HAVE%20NO%20EFFECT%20AT%20ALL.%20SHARE%20FOLLOW%20ANSWERED%20SEP%206%2C2016%20AT%200%3A08%20TOREK%20412K51566706%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A59.52193%2C%22y%22%3A28.763687%2C%22width%22%3A593.12107%2C%22height%22%3A21.180435%2C%22text%22%3A%22THE%20CORE.HOOKSPATH%20SUPPORTIS%20NEW%20IN%20GIT%20VERSION%202.9%2C%20HAVING%20BEEN%20PUT%20IN%20WITH%20COMMIT%22%7D%2C%7B%22x%22%3A61.474033%2C%22y%22%3A52.154438%2C%22width%22%3A648.1113670000001%2C%22height%22%3A19.796692000000007%2C%22text%22%3A%22867ADE8A2610526EDB5723804723D371136FC643.IF%20YOUR%20GIT%20VERSION%20IS%20NOT%20AT%20LEAST%202.9.0%2C%20SETTING%20A%22%7D%2C%7B%22x%22%3A9.850581%2C%22y%22%3A70.93884%2C%22width%22%3A26.602327000000002%2C%22height%22%3A18.174525000000003%2C%22text%22%3A%2239%22%7D%2C%7B%22x%22%3A56.068645%2C%22y%22%3A75.04296%2C%22width%22%3A305.531305%2C%22height%22%3A15.954940000000008%2C%22text%22%3A%22HOOKS-PATH%20VARIABLE%20WILL%20HAVE%20NO%20EFFECT%20AT%20ALL.%22%7D%2C%7B%22x%22%3A56.830948%2C%22y%22%3A122.618416%2C%22width%22%3A84.240962%2C%22height%22%3A13.027683999999994%2C%22text%22%3A%22SHARE%20FOLLOW%22%7D%2C%7B%22x%22%3A522.2864%2C%22y%22%3A124.339165%2C%22width%22%3A170.85990000000004%2C%22height%22%3A14.796565000000001%2C%22text%22%3A%22ANSWERED%20SEP%206%2C2016%20AT%200%3A08%22%7D%2C%7B%22x%22%3A563.2912%2C%22y%22%3A146.03938%2C%22width%22%3A33.06646999999998%2C%22height%22%3A11.819860000000006%2C%22text%22%3A%22TOREK%22%7D%2C%7B%22x%22%3A562.52954%2C%22y%22%3A163.44112%2C%22width%22%3A135.52426000000003%2C%22height%22%3A11.893479999999983%2C%22text%22%3A%22412K51566706%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22ubea0b88f%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><p data-lake-id=\"ub3f2730d\" id=\"ub3f2730d\"><span data-lake-id=\"u760c7b1b\" id=\"u760c7b1b\">原因就是</span><code data-lake-id=\"ue8a2f9d0\" id=\"ue8a2f9d0\"><span data-lake-id=\"uab077330\" id=\"uab077330\">git config core.hooksPath</span></code><span data-lake-id=\"u18ec0485\" id=\"u18ec0485\">这个命令是在 Git v2.9.0 版本才支持的。</span></p><p data-lake-id=\"u29faf8ab\" id=\"u29faf8ab\"><span data-lake-id=\"ub7a76410\" id=\"ub7a76410\">在2016.05.05 提交的 commit 中支持了该命令</span><a href=\"https://github.com/git/git/commit/867ad08a2610526edb5723804723d371136fc643\" target=\"_blank\" data-lake-id=\"u3c67b301\" id=\"u3c67b301\"><span data-lake-id=\"u2bfd2f93\" id=\"u2bfd2f93\">https://github.com/git/git/commit/867ad08a2610526edb5723804723d371136fc643</span></a></p><p data-lake-id=\"u74dea983\" id=\"u74dea983\"><span data-lake-id=\"u19cee6a3\" id=\"u19cee6a3\">那 husky 大概是什么时候创建的呢，通过查看 issues，我们可以发现第一个 issue 是在 2014 年，远比这个 commit 时期早！</span></p><p data-lake-id=\"u1e485834\" id=\"u1e485834\"><a href=\"https://github.com/typicode/husky/issues/1\" target=\"_blank\" data-lake-id=\"u9abc9e04\" id=\"u9abc9e04\"><span data-lake-id=\"u642b7c36\" id=\"u642b7c36\">https://github.com/typicode/husky/issues/1</span></a></p><p data-lake-id=\"ub725ff2a\" id=\"ub725ff2a\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F246478%2F1666540094587-3a7d32e2-2f20-4a49-aaab-29ab388a0785.png%22%2C%22taskId%22%3A%22u0ee0b2a5-3a6c-4921-8b74-bcb7aef81af%22%2C%22clientId%22%3A%22u42cededb-a03f-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A807%2C%22height%22%3A134%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A27178%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A807%2C%22originHeight%22%3A134%2C%22ratio%22%3A1%2C%22status%22%3A%22error%22%2C%22style%22%3A%22none%22%2C%22errorMessage%22%3A%22unknown%20error%22%2C%22search%22%3A%22NPM%20INSTALLATION%20FAILS%20USING%20GIT%20BASH%20ON%20WINDOWS%208%20%231%20CLOSED%20M90%20OPENED%20THIS%20ISSUE%200%20COMMENTS%20%20FIXED%20BY%20%235%20JUN%202014%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A44.570637%2C%22y%22%3A27.115921%2C%22width%22%3A726.112263%2C%22height%22%3A36.368824%2C%22text%22%3A%22NPM%20INSTALLATION%20FAILS%20USING%20GIT%20BASH%20ON%20WINDOWS%208%20%231%22%7D%2C%7B%22x%22%3A73.05053%2C%22y%22%3A78.717476%2C%22width%22%3A50.133705000000006%2C%22height%22%3A14.188643999999996%2C%22text%22%3A%22CLOSED%22%7D%2C%7B%22x%22%3A141.58167%2C%22y%22%3A78.08319%2C%22width%22%3A153.00487999999999%2C%22height%22%3A18.42255%2C%22text%22%3A%22M90%20OPENED%20THIS%20ISSUE%22%7D%2C%7B%22x%22%3A407.66162%2C%22y%22%3A79.75379%2C%22width%22%3A166.22394000000003%2C%22height%22%3A16.38015%2C%22text%22%3A%220%20COMMENTS%20%20FIXED%20BY%20%235%22%7D%2C%7B%22x%22%3A335.57706%2C%22y%22%3A82.46894%2C%22width%22%3A59.37144000000001%2C%22height%22%3A11.894395000000003%2C%22text%22%3A%22JUN%202014%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22u5d699d73%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><p data-lake-id=\"ua04fa7cd\" id=\"ua04fa7cd\"><span data-lake-id=\"u2ed07966\" id=\"u2ed07966\">真·完结·撒花！</span></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"paragraphSpacing\" content=\"relax\" /><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22rRUFq%22%7D\"></card><p data-lake-id=\"u9df2b98f\" id=\"u9df2b98f\"><span data-lake-id=\"u4938d29e\" id=\"u4938d29e\">tags:</span></p><ul list=\"u3e1a1ff4\"><li fid=\"uddd46c2b\" data-lake-id=\"ueadc8077\" id=\"ueadc8077\"><span data-lake-id=\"ua1200a22\" id=\"ua1200a22\">husky</span></li></ul><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22vIOHD%22%7D\"></card><p data-lake-id=\"u3a4e2c03\" id=\"u3a4e2c03\"><span data-lake-id=\"u3325855f\" id=\"u3325855f\">​</span><br></p><p data-lake-id=\"ud8e4aac8\" id=\"ud8e4aac8\"><span data-lake-id=\"uc08161dc\" id=\"uc08161dc\">最近在搭建新工程时，想给工程配置 eslint 约定一下代码规范，配置完 eslint 之后，有想着可以更进一步配置一个强校验，即不符合 eslint 配置的代码，希望在代码提交时就拦截并给出提示。面对这个场景自然而然就想到了 </span><code data-lake-id=\"u0820bed8\" id=\"u0820bed8\"><span data-lake-id=\"u87459233\" id=\"u87459233\">husky + lint-staged</span></code><span data-lake-id=\"u4bb44db5\" id=\"u4bb44db5\">的配置，说干就干。</span></p><ul list=\"u4e6ba0c7\"><li fid=\"uf604aba1\" data-lake-id=\"u42bd18fa\" id=\"u42bd18fa\"><span data-lake-id=\"uae732a9a\" id=\"uae732a9a\">首先是安装依赖，在工程根目录下执行以下命令：</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22npm%20i%20husky%20lint-staged%20-g%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22dHGcR%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><ul list=\"u44af3d95\"><li fid=\"ucd2b3608\" data-lake-id=\"u05366f76\" id=\"u05366f76\"><span data-lake-id=\"ua3aee279\" id=\"ua3aee279\">接着安装以往经验就是在 </span><code data-lake-id=\"udd56515f\" id=\"udd56515f\"><span data-lake-id=\"u1782eea9\" id=\"u1782eea9\">package.json</span></code><span data-lake-id=\"ua0a0c90b\" id=\"ua0a0c90b\"> 里配置相关配置：</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%7B%5Cn%20%20%5C%22lint-staged%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22*.%7Bts%2Ctsx%7D%5C%22%3A%20%5B%5Cn%20%20%20%20%20%20%5C%22eslint%20--fix%20--cache%20--quiet%5C%22%2C%5Cn%20%20%20%20%20%20%5C%22git%20add%5C%22%5Cn%20%20%20%20%5D%5Cn%20%20%7D%2C%5Cn%20%20%5C%22husky%5C%22%3A%20%7B%5Cn%20%20%20%20%5C%22hooks%5C%22%3A%20%7B%5Cn%20%20%20%20%20%20%5C%22pre-commit%5C%22%3A%20%5C%22lint-staged%5C%22%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22package.json%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22OKf5X%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"ua47a85ad\" id=\"ua47a85ad\"><span data-lake-id=\"u1d9529c3\" id=\"u1d9529c3\">&lt;!-- more --&gt;</span></p><p data-lake-id=\"u0eb88fcb\" id=\"u0eb88fcb\"><span data-lake-id=\"u48b8bcba\" id=\"u48b8bcba\">执行完上面操作后，自信满满地修改了某个 tsx 文件，并故意违反某条 eslint 配置，一顿 git 命令执行完，发现居然 commit 成功了，这就意味着 husky 配置没生效，:(。</span></p><p data-lake-id=\"u3a33c578\" id=\"u3a33c578\"><span data-lake-id=\"u33352278\" id=\"u33352278\">心里想着这不科学啊，然后在 github 上找到了 </span><a href=\"https://github.com/typicode/husky\" target=\"_blank\" data-lake-id=\"u92e91386\" id=\"u92e91386\"><span data-lake-id=\"u0b106698\" id=\"u0b106698\">husky 源码</span></a><span data-lake-id=\"ucd186106\" id=\"ucd186106\">，原来 husky 升级了，break change ，surprise !</span></p><p data-lake-id=\"ub74700f0\" id=\"ub74700f0\"><span data-lake-id=\"ue75d423b\" id=\"ue75d423b\">原来上面这套 husky 的配置是 v4 版本，而当前工程默认安装了最新版本的 husky ，已经是 v8 了。然后跟着文档，重新配置了一遍 </span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%23!%2Fusr%2Fbin%2Fenv%20sh%5Cn.%20%5C%22%24(dirname%20--%20%5C%22%240%5C%22)%2F_%2Fhusky.sh%5C%22%5Cnnpx%20--no%20eslint%20--fix%20--cache%20--quiet%5Cngit%20add%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22.husky%2Fpre-commit%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22yuuJf%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"u98a4d1e9\" id=\"u98a4d1e9\"><span data-lake-id=\"ufbe2581a\" id=\"ufbe2581a\">配置完成之后，再次测试，发现果然成功了。</span></p><p data-lake-id=\"u01793a47\" id=\"u01793a47\"><span data-lake-id=\"u9ff7cde1\" id=\"u9ff7cde1\">事情本来到这里本来就该结束了，完结，撒花……</span></p><p data-lake-id=\"ua05304ce\" id=\"ua05304ce\"><span data-lake-id=\"ubbb25129\" id=\"ubbb25129\">​</span><br></p><p data-lake-id=\"u2e860309\" id=\"u2e860309\"><span data-lake-id=\"u10c27af8\" id=\"u10c27af8\">但是隐隐感觉到有哪里不对，按照我之前对 git hooks 以及 husky v4 的了解，git hooks 的作用是在于 工程里 hooks 的配置文件，这些 hook 文件会在 git 的特定时期执行，比如常见的 </span><code data-lake-id=\"ua31530bb\" id=\"ua31530bb\"><span data-lake-id=\"ua5be2b18\" id=\"ua5be2b18\">pre-commit</span></code><span data-lake-id=\"u57cb915e\" id=\"u57cb915e\">、</span><code data-lake-id=\"u1ac45642\" id=\"u1ac45642\"><span data-lake-id=\"u72fa49bf\" id=\"u72fa49bf\">commit-msg</span></code><span data-lake-id=\"ue0cb190b\" id=\"ue0cb190b\">等。</span></p><p data-lake-id=\"uf36c4e2d\" id=\"uf36c4e2d\"><span data-lake-id=\"u60c74379\" id=\"u60c74379\">更多的可以查看</span><a href=\"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks\" target=\"_blank\" data-lake-id=\"u7b447557\" id=\"u7b447557\"><span data-lake-id=\"u1be2c97f\" id=\"u1be2c97f\">这里</span></a><span data-lake-id=\"u06621d65\" id=\"u06621d65\">。</span></p><p data-lake-id=\"ub99a3319\" id=\"ub99a3319\"><span data-lake-id=\"ua6605fe4\" id=\"ua6605fe4\">而根据我之前的了解，以前版本的 husky 正是利用 git hooks 的机制，在安装依赖的时候执行 husky 里的脚本，修改了 git hooks 里的文件，具体目录为工程根目录下的 </span><code data-lake-id=\"u6cea2a0f\" id=\"u6cea2a0f\"><span data-lake-id=\"ue5220d64\" id=\"ue5220d64\">.git/hooks/pre-commit</span></code><span data-lake-id=\"u0de86d68\" id=\"u0de86d68\">等。</span></p><p data-lake-id=\"u20555bc3\" id=\"u20555bc3\"><span data-lake-id=\"ua44e056f\" id=\"ua44e056f\">那 husky v8 版本又是做了些什么呢，是什么原理呢，为什么在 </span><code data-lake-id=\"ud46f775f\" id=\"ud46f775f\"><span data-lake-id=\"u4f0a72fd\" id=\"u4f0a72fd\">.husky/pre-commit</span></code><span data-lake-id=\"u0bb73fb6\" id=\"u0bb73fb6\">里配置就可以生效呢，是复制了一份到 </span><code data-lake-id=\"uf6f27720\" id=\"uf6f27720\"><span data-lake-id=\"u3828823a\" id=\"u3828823a\">.git/hooks/</span></code><span data-lake-id=\"uba799ddf\" id=\"uba799ddf\">目录下吗？</span></p><p data-lake-id=\"u4d3a827c\" id=\"u4d3a827c\"><span data-lake-id=\"ue7ece908\" id=\"ue7ece908\">好奇心的驱使下，进到 </span><code data-lake-id=\"u2b07ed3a\" id=\"u2b07ed3a\"><span data-lake-id=\"uea8f80af\" id=\"uea8f80af\">.git/hooks/</span></code><span data-lake-id=\"u96e87158\" id=\"u96e87158\">目录下，一探究竟。结果惊了个呆，hooks 下面只有默认的一些 sample 文件，并没有期待中的 </span><code data-lake-id=\"uede27b00\" id=\"uede27b00\"><span data-lake-id=\"u590eebb5\" id=\"u590eebb5\">pre-commit</span></code><span data-lake-id=\"u2ae6f62c\" id=\"u2ae6f62c\">文件复制版。</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22%23%20cd%20.git%2Fhooks%5Cn%23%20ls%5Cnapplypatch-msg.sample%20%20%20%20%20pre-applypatch.sample%20%20%20%20%20pre-rebase.sample%5Cncommit-msg.sample%20%20%20%20%20%20%20%20%20pre-commit.sample%20%20%20%20%20%20%20%20%20prepare-commit-msg.sample%5Cnpost-update.sample%20%20%20%20%20%20%20%20pre-push.sample%20%20%20%20%20%20%20%20%20%20%20update.sample%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22ydUeZ%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"uc20608bd\" id=\"uc20608bd\"><span data-lake-id=\"ue946453e\" id=\"ue946453e\">那究竟是怎么回事呢，带着这样的疑问，去阅读了源码。还好，新版的 husky 代码少了许多，很容易就发现了其中的关键：</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22javascript%22%2C%22code%22%3A%22%2F%2F%20Configure%20repo%5Cnconst%20%7B%20error%20%7D%20%3D%20git(%5B'config'%2C%20'core.hooksPath'%2C%20dir%5D)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22src%2Findex.ts%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22dTyAG%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"uc5470b13\" id=\"uc5470b13\"><span data-lake-id=\"u2da4b6f5\" id=\"u2da4b6f5\">原来在执行 </span><code data-lake-id=\"uc8dbc48b\" id=\"uc8dbc48b\"><span data-lake-id=\"u31e0c760\" id=\"u31e0c760\">husky install</span></code><span data-lake-id=\"u3e2133a9\" id=\"u3e2133a9\">的命令时，husky 会执行以下步骤：</span></p><ol list=\"uec3ba829\"><li fid=\"ub6004d1b\" data-lake-id=\"u1a94d3a3\" id=\"u1a94d3a3\"><span data-lake-id=\"u87c01e0c\" id=\"u87c01e0c\">先执行一系列检查，确保是在 git 工程里，并存在 </span><code data-lake-id=\"u19112de3\" id=\"u19112de3\"><span data-lake-id=\"u6a331148\" id=\"u6a331148\">.git</span></code><span data-lake-id=\"ua6e2f7b4\" id=\"ua6e2f7b4\">目录</span></li><li fid=\"ub6004d1b\" data-lake-id=\"u3bdfdd53\" id=\"u3bdfdd53\"><span data-lake-id=\"u6d6fdaa9\" id=\"u6d6fdaa9\">然后复制 </span><code data-lake-id=\"u3f542679\" id=\"u3f542679\"><span data-lake-id=\"ufa2ee407\" id=\"ufa2ee407\">.husky</span></code><span data-lake-id=\"u61e9926b\" id=\"u61e9926b\">目录到工程根目录</span></li><li fid=\"ub6004d1b\" data-lake-id=\"uf71daf3f\" id=\"uf71daf3f\"><span data-lake-id=\"u87b73eb9\" id=\"u87b73eb9\">最后执行 </span><code data-lake-id=\"ue8cd31cb\" id=\"ue8cd31cb\"><span data-lake-id=\"u47cc0f8d\" id=\"u47cc0f8d\">git config core.hooksPath .husky</span></code><span data-lake-id=\"ufb065260\" id=\"ufb065260\">，将 </span><code data-lake-id=\"ude126c3e\" id=\"ude126c3e\"><span data-lake-id=\"u21feda9f\" id=\"u21feda9f\">.husky</span></code><span data-lake-id=\"u1b3a0275\" id=\"u1b3a0275\">目录配置为新的 git hooks 目录</span></li></ol><p data-lake-id=\"uf06a6bca\" id=\"uf06a6bca\"><span data-lake-id=\"u2b76319d\" id=\"u2b76319d\">这里 </span><code data-lake-id=\"u1cfea826\" id=\"u1cfea826\"><span data-lake-id=\"u5a61f6c7\" id=\"u5a61f6c7\">git config core.hooksPath .husky</span></code><span data-lake-id=\"u406487e4\" id=\"u406487e4\">看字面意思就是重新设置 git hooks 的目录，默认的 git hooks 目录就像上面叙述的，是 </span><code data-lake-id=\"u6156a349\" id=\"u6156a349\"><span data-lake-id=\"u9ecc5120\" id=\"u9ecc5120\">.git/hooks</span></code><span data-lake-id=\"u977567f6\" id=\"u977567f6\">，所以这个命令很明显就是替换这个目录，这样一切就解释的通了，豁然开朗的感觉！</span></p><p data-lake-id=\"ub1b3c3c9\" id=\"ub1b3c3c9\"><card type=\"inline\" name=\"bookmarkInline\" value=\"data:%7B%22mode%22%3A%22title%22%2C%22src%22%3A%22https%3A%2F%2Fgit-scm.com%2Fdocs%2Fgithooks%22%2C%22text%22%3A%22https%3A%2F%2Fgit-scm.com%2Fdocs%2Fgithooks%22%2C%22detail%22%3A%7B%22icon%22%3A%22https%3A%2F%2Fgit-scm.com%2Ffavicon.ico%22%2C%22image%22%3A%22https%3A%2F%2Fgit-scm.com%2Fimages%2Ficons%2Fgreen-dot.png%22%2C%22title%22%3A%22Git%20-%20githooks%20Documentation%22%2C%22belong%22%3A%22githooks%20Documentation%22%2C%22belong_url%22%3Anull%2C%22desc%22%3Anull%2C%22url%22%3A%22https%3A%2F%2Fgit-scm.com%2Fdocs%2Fgithooks%22%2C%22_serializer%22%3A%22web.editor_link_detail%22%7D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22SAfMI%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><p data-lake-id=\"u3a9b6253\" id=\"u3a9b6253\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F246478%2F1666539378266-059f5e66-d9d9-46b8-85a6-dd24ab16812a.png%22%2C%22taskId%22%3A%22u7d02a5f0-1147-48d0-a39e-863d34814e3%22%2C%22clientId%22%3A%22u42cededb-a03f-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A688%2C%22height%22%3A315%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A53878%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A688%2C%22originHeight%22%3A315%2C%22ratio%22%3A1%2C%22status%22%3A%22error%22%2C%22style%22%3A%22none%22%2C%22errorMessage%22%3A%22unknown%20error%22%2C%22search%22%3A%22NAME%20GITHOOKS%20-%20HOOKS%20USED%20BY%20GIT%20SYNOPSIS%20%24GIT_DIR%2FHOOKS%2F*(OR%20'GIT%20CONFIG%20CORE.HOOKSPATH'%2F*)%20DESCRIPTION%20HOOKS%20ARE%20PROGRAMS%20YOU%20CAN%20PLACE%20IN%20A%20HOOKS%20DIRECTORY%20TO%20TRIGGER%20ACTIONS%20AT%20CERTAIN%20POINTS%20IN%20GIT'S%20EXECUTION.HOOKS%20THAT%20DON'T%20HAVE%20THE%20EXECUTABLE%20BIT%20SET%20ARE%20IGNORED.%20BY%20DEFAULT%20THE%20HOOKS%20DIRECTORY%20IS%20SGIT%20DIR%2FHOOKS%20%2CBUT%20THAT%20CAN%20BE%20CHANGED%20VIA%20THE%20CONFIGURATION%20VARIABLE(SEE%20GIT-CONFIG%5B1%5D).%20CORE.HOOKSPATH%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A17.032137%2C%22y%22%3A9.211403%2C%22width%22%3A62.999663000000005%2C%22height%22%3A16.233587%2C%22text%22%3A%22NAME%22%7D%2C%7B%22x%22%3A17.48173%2C%22y%22%3A42.69823%2C%22width%22%3A181.16367%2C%22height%22%3A16.752026%2C%22text%22%3A%22GITHOOKS%20-%20HOOKS%20USED%20BY%20GIT%22%7D%2C%7B%22x%22%3A17.931448%2C%22y%22%3A96.082825%2C%22width%22%3A100.055666%2C%22height%22%3A15.048034999999999%2C%22text%22%3A%22SYNOPSIS%22%7D%2C%7B%22x%22%3A17.741682%2C%22y%22%3A125.73591%2C%22width%22%3A340.804718%2C%22height%22%3A20.842020000000005%2C%22text%22%3A%22%24GIT_DIR%2FHOOKS%2F*(OR%20'GIT%20CONFIG%20CORE.HOOKSPATH'%2F*)%22%7D%2C%7B%22x%22%3A17.897821%2C%22y%22%3A181.90825%2C%22width%22%3A139.05153900000002%2C%22height%22%3A15.078759999999988%2C%22text%22%3A%22DESCRIPTION%22%7D%2C%7B%22x%22%3A18.136278%2C%22y%22%3A215.2439%2C%22width%22%3A595.033892%2C%22height%22%3A14.97908000000001%2C%22text%22%3A%22HOOKS%20ARE%20PROGRAMS%20YOU%20CAN%20PLACE%20IN%20A%20HOOKS%20DIRECTORY%20TO%20TRIGGER%20ACTIONS%20AT%20CERTAIN%20POINTS%20IN%20GIT'S%22%7D%2C%7B%22x%22%3A17.243876%2C%22y%22%3A238.20036%2C%22width%22%3A416.081474%2C%22height%22%3A15.688360000000017%2C%22text%22%3A%22EXECUTION.HOOKS%20THAT%20DON'T%20HAVE%20THE%20EXECUTABLE%20BIT%20SET%20ARE%20IGNORED.%22%7D%2C%7B%22x%22%3A17.20636%2C%22y%22%3A270.2626%2C%22width%22%3A533.44864%2C%22height%22%3A15.052300000000002%2C%22text%22%3A%22BY%20DEFAULT%20THE%20HOOKS%20DIRECTORY%20IS%20SGIT%20DIR%2FHOOKS%20%2CBUT%20THAT%20CAN%20BE%20CHANGED%20VIA%20THE%22%7D%2C%7B%22x%22%3A149.7791%2C%22y%22%3A293.2451%2C%22width%22%3A254.75680000000003%2C%22height%22%3A15.173050000000046%2C%22text%22%3A%22CONFIGURATION%20VARIABLE(SEE%20GIT-CONFIG%5B1%5D).%22%7D%2C%7B%22x%22%3A23.859283%2C%22y%22%3A294.63525%2C%22width%22%3A119.342547%2C%22height%22%3A13.363800000000026%2C%22text%22%3A%22CORE.HOOKSPATH%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22u0be7c326%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><p data-lake-id=\"u59a66d19\" id=\"u59a66d19\"><span data-lake-id=\"ua7d50e66\" id=\"ua7d50e66\">到现在可以说基本解答了疑惑，但是八卦的我还有一个疑问，既然有这么好用的一个 git 配置，为啥 husky 是另外的机制呢（直接修改 .git/hooks/ 目录下的 hook 文件）？</span></p><p data-lake-id=\"u394af93e\" id=\"u394af93e\"><span data-lake-id=\"u63b6fcba\" id=\"u63b6fcba\">这个疑问最终在 StackOverflow 找到了答案：</span></p><p data-lake-id=\"u875cab48\" id=\"u875cab48\"><a href=\"https://stackoverflow.com/questions/39332407/git-hooks-applying-git-config-core-hookspath\" target=\"_blank\" data-lake-id=\"u571a4ed5\" id=\"u571a4ed5\"><span data-lake-id=\"u008a29fa\" id=\"u008a29fa\">https://stackoverflow.com/questions/39332407/git-hooks-applying-git-config-core-hookspath</span></a></p><p data-lake-id=\"u96abf02e\" id=\"u96abf02e\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F246478%2F1666539617634-8cb588a7-2842-45f6-85ee-3d0495164dd6.png%22%2C%22taskId%22%3A%22u7bead65a-c49f-4546-ab69-397fc9e4a8d%22%2C%22clientId%22%3A%22u42cededb-a03f-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A723%2C%22height%22%3A208%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A40313%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A723%2C%22originHeight%22%3A208%2C%22ratio%22%3A1%2C%22status%22%3A%22error%22%2C%22style%22%3A%22none%22%2C%22errorMessage%22%3A%22unknown%20error%22%2C%22search%22%3A%22THE%20CORE.HOOKSPATH%20SUPPORTIS%20NEW%20IN%20GIT%20VERSION%202.9%2C%20HAVING%20BEEN%20PUT%20IN%20WITH%20COMMIT%20867ADE8A2610526EDB5723804723D371136FC643.IF%20YOUR%20GIT%20VERSION%20IS%20NOT%20AT%20LEAST%202.9.0%2C%20SETTING%20A%2039%20HOOKS-PATH%20VARIABLE%20WILL%20HAVE%20NO%20EFFECT%20AT%20ALL.%20SHARE%20FOLLOW%20ANSWERED%20SEP%206%2C2016%20AT%200%3A08%20TOREK%20412K51566706%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A59.52193%2C%22y%22%3A28.763687%2C%22width%22%3A593.12107%2C%22height%22%3A21.180435%2C%22text%22%3A%22THE%20CORE.HOOKSPATH%20SUPPORTIS%20NEW%20IN%20GIT%20VERSION%202.9%2C%20HAVING%20BEEN%20PUT%20IN%20WITH%20COMMIT%22%7D%2C%7B%22x%22%3A61.474033%2C%22y%22%3A52.154438%2C%22width%22%3A648.1113670000001%2C%22height%22%3A19.796692000000007%2C%22text%22%3A%22867ADE8A2610526EDB5723804723D371136FC643.IF%20YOUR%20GIT%20VERSION%20IS%20NOT%20AT%20LEAST%202.9.0%2C%20SETTING%20A%22%7D%2C%7B%22x%22%3A9.850581%2C%22y%22%3A70.93884%2C%22width%22%3A26.602327000000002%2C%22height%22%3A18.174525000000003%2C%22text%22%3A%2239%22%7D%2C%7B%22x%22%3A56.068645%2C%22y%22%3A75.04296%2C%22width%22%3A305.531305%2C%22height%22%3A15.954940000000008%2C%22text%22%3A%22HOOKS-PATH%20VARIABLE%20WILL%20HAVE%20NO%20EFFECT%20AT%20ALL.%22%7D%2C%7B%22x%22%3A56.830948%2C%22y%22%3A122.618416%2C%22width%22%3A84.240962%2C%22height%22%3A13.027683999999994%2C%22text%22%3A%22SHARE%20FOLLOW%22%7D%2C%7B%22x%22%3A522.2864%2C%22y%22%3A124.339165%2C%22width%22%3A170.85990000000004%2C%22height%22%3A14.796565000000001%2C%22text%22%3A%22ANSWERED%20SEP%206%2C2016%20AT%200%3A08%22%7D%2C%7B%22x%22%3A563.2912%2C%22y%22%3A146.03938%2C%22width%22%3A33.06646999999998%2C%22height%22%3A11.819860000000006%2C%22text%22%3A%22TOREK%22%7D%2C%7B%22x%22%3A562.52954%2C%22y%22%3A163.44112%2C%22width%22%3A135.52426000000003%2C%22height%22%3A11.893479999999983%2C%22text%22%3A%22412K51566706%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22ubea0b88f%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><p data-lake-id=\"ub3f2730d\" id=\"ub3f2730d\"><span data-lake-id=\"u760c7b1b\" id=\"u760c7b1b\">原因就是</span><code data-lake-id=\"ue8a2f9d0\" id=\"ue8a2f9d0\"><span data-lake-id=\"uab077330\" id=\"uab077330\">git config core.hooksPath</span></code><span data-lake-id=\"u18ec0485\" id=\"u18ec0485\">这个命令是在 Git v2.9.0 版本才支持的。</span></p><p data-lake-id=\"u29faf8ab\" id=\"u29faf8ab\"><span data-lake-id=\"ub7a76410\" id=\"ub7a76410\">在2016.05.05 提交的 commit 中支持了该命令</span><a href=\"https://github.com/git/git/commit/867ad08a2610526edb5723804723d371136fc643\" target=\"_blank\" data-lake-id=\"u3c67b301\" id=\"u3c67b301\"><span data-lake-id=\"u2bfd2f93\" id=\"u2bfd2f93\">https://github.com/git/git/commit/867ad08a2610526edb5723804723d371136fc643</span></a></p><p data-lake-id=\"u74dea983\" id=\"u74dea983\"><span data-lake-id=\"u19cee6a3\" id=\"u19cee6a3\">那 husky 大概是什么时候创建的呢，通过查看 issues，我们可以发现第一个 issue 是在 2014 年，远比这个 commit 时期早！</span></p><p data-lake-id=\"u1e485834\" id=\"u1e485834\"><a href=\"https://github.com/typicode/husky/issues/1\" target=\"_blank\" data-lake-id=\"u9abc9e04\" id=\"u9abc9e04\"><span data-lake-id=\"u642b7c36\" id=\"u642b7c36\">https://github.com/typicode/husky/issues/1</span></a></p><p data-lake-id=\"ub725ff2a\" id=\"ub725ff2a\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2022%2Fpng%2F246478%2F1666540094587-3a7d32e2-2f20-4a49-aaab-29ab388a0785.png%22%2C%22taskId%22%3A%22u0ee0b2a5-3a6c-4921-8b74-bcb7aef81af%22%2C%22clientId%22%3A%22u42cededb-a03f-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A807%2C%22height%22%3A134%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A27178%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A807%2C%22originHeight%22%3A134%2C%22ratio%22%3A1%2C%22status%22%3A%22error%22%2C%22style%22%3A%22none%22%2C%22errorMessage%22%3A%22unknown%20error%22%2C%22search%22%3A%22NPM%20INSTALLATION%20FAILS%20USING%20GIT%20BASH%20ON%20WINDOWS%208%20%231%20CLOSED%20M90%20OPENED%20THIS%20ISSUE%200%20COMMENTS%20%20FIXED%20BY%20%235%20JUN%202014%22%2C%22ocrLocations%22%3A%5B%7B%22x%22%3A44.570637%2C%22y%22%3A27.115921%2C%22width%22%3A726.112263%2C%22height%22%3A36.368824%2C%22text%22%3A%22NPM%20INSTALLATION%20FAILS%20USING%20GIT%20BASH%20ON%20WINDOWS%208%20%231%22%7D%2C%7B%22x%22%3A73.05053%2C%22y%22%3A78.717476%2C%22width%22%3A50.133705000000006%2C%22height%22%3A14.188643999999996%2C%22text%22%3A%22CLOSED%22%7D%2C%7B%22x%22%3A141.58167%2C%22y%22%3A78.08319%2C%22width%22%3A153.00487999999999%2C%22height%22%3A18.42255%2C%22text%22%3A%22M90%20OPENED%20THIS%20ISSUE%22%7D%2C%7B%22x%22%3A407.66162%2C%22y%22%3A79.75379%2C%22width%22%3A166.22394000000003%2C%22height%22%3A16.38015%2C%22text%22%3A%220%20COMMENTS%20%20FIXED%20BY%20%235%22%7D%2C%7B%22x%22%3A335.57706%2C%22y%22%3A82.46894%2C%22width%22%3A59.37144000000001%2C%22height%22%3A11.894395000000003%2C%22text%22%3A%22JUN%202014%22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22u5d699d73%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card></p><p data-lake-id=\"ua04fa7cd\" id=\"ua04fa7cd\"><span data-lake-id=\"u2ed07966\" id=\"u2ed07966\">真·完结·撒花！</span></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-10-23T16:13:13.000Z",
    "deleted_at": null,
    "created_at": "2022-10-23T14:47:16.000Z",
    "updated_at": "2022-10-23T16:13:13.000Z",
    "published_at": "2022-10-23T16:13:13.000Z",
    "first_published_at": "2022-10-23T15:50:03.292Z",
    "word_count": 1054,
    "cover": "https://cdn.nlark.com/yuque/0/2022/png/246478/1666539378266-059f5e66-d9d9-46b8-85a6-dd24ab16812a.png",
    "description": "tags:husky最近在搭建新工程时，想给工程配置 eslint 约定一下代码规范，配置完 eslint 之后，有想着可以更进一步配置一个强校验，即不符合 eslint 配置的代码，希望在代码提交时就拦截并给出提示。面对这个场景自然而然就想到了 husky + lint-staged的配置，...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 92583817,
    "slug": "rvd599",
    "title": "Flutter 入门",
    "book_id": 32484128,
    "book": {
      "id": 32484128,
      "type": "Book",
      "slug": "blog",
      "name": "Blog",
      "user_id": 246478,
      "description": null,
      "creator_id": 246478,
      "public": 1,
      "items_count": 2,
      "likes_count": 0,
      "watches_count": 0,
      "content_updated_at": "2022-10-23T16:13:12.975Z",
      "updated_at": "2022-10-23T16:13:13.000Z",
      "created_at": "2022-09-09T16:25:33.000Z",
      "namespace": "soonwang/blog",
      "user": {
        "id": 246478,
        "type": "User",
        "login": "soonwang",
        "name": "soonwang",
        "description": "时间比钱更宝贵，钱你不用它还在那里，而时间你不用它就浪费掉了",
        "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/246478/1571978069703-avatar/5d8b5538-cf1c-4577-9e21-83f424991d94.png",
        "books_count": 13,
        "public_books_count": 1,
        "followers_count": 0,
        "following_count": 2,
        "created_at": "2019-01-16T02:38:54.000Z",
        "updated_at": "2022-10-23T16:12:16.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 246478,
    "creator": {
      "id": 246478,
      "type": "User",
      "login": "soonwang",
      "name": "soonwang",
      "description": "时间比钱更宝贵，钱你不用它还在那里，而时间你不用它就浪费掉了",
      "avatar_url": "https://cdn.nlark.com/yuque/0/2019/png/246478/1571978069703-avatar/5d8b5538-cf1c-4577-9e21-83f424991d94.png",
      "books_count": 13,
      "public_books_count": 1,
      "followers_count": 0,
      "following_count": 2,
      "created_at": "2019-01-16T02:38:54.000Z",
      "updated_at": "2022-10-23T16:12:16.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "---\n\ntags:\n\n- flutter\n- flutter 入门\n\n---\n\n<a name=\"7ErDw\"></a>\n## 一、HelloWorld\n演示\n<a name=\"pV05v\"></a>\n## 二、开发环境\n\n```bash\nexport PUB_HOSTED_URL=https://pub.flutter-io.cn\nexport FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn\n```\n\n<!-- more -->\n<a name=\"7UoCS\"></a>\n## 三、基础组件\n<a name=\"fMSu6\"></a>\n#### 1. Widget\n\n![](https://intranetproxy.alipay.com/skylark/lark/0/2020/svg/244212/1585218751366-48cca93c-5958-4c28-aeac-79f9ccd6640e.svg)<br />State 生命周期如下：<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/246478/1585315909919-667063b1-e430-4c48-99d0-d0c094d2eb57.png#crop=0&crop=0&crop=1&crop=1&height=845&id=ZNdT0&name=image.png&originHeight=869&originWidth=701&originalType=binary&ratio=1&rotation=0&showTitle=false&size=39605&status=done&style=none&title=&width=682)\n<a name=\"edJVp\"></a>\n#### 2. Text、TextSpan、WidgetSpan\n\n- Text 显示文字\n```dart\nText(\n\t\"Hello World\",\n  textAlign: TextAlign.left,\n  maxLines: 1,\n  overflow: TextOverflow.ellipise,\n  style: TextStyle(\n  \tcolor: Colors.blue,\n    fontSize: 10,\n    ...\n  )\n)\n```\n\n- 实际开发过程中，还会有一个Text不同部分安装不同样式显示，可以用TextSpan\n\n```dart\nText.rich(\n  TextSpan(\n    children: [\n      TextSpan(\n        text: 'Title',\n        style: TextStyle(\n        \tcolor: Color(0xff000000),\n          fontWeight: bold,\n        )\n      ),\n      TextSpan(\n      \ttext: 'description',\n        style: TextStyle(\n          color: Colors.blue,\n        )\n      ),\n      // WidgetSpan 可以实现行内元素的效果\n      WidgetSpan(\n      \tchild: Container(\n        \t...\n        )\n      )\n    ]\n\t)\n)\n```\n\n<a name=\"STTW5\"></a>\n#### 3. Button、Image\n\n- Button \n\nFlutter 提供了几种样式的Button，也支持自定义外观\n```dart\nRaisedButton(\n  child: Text(\"normal\"),\n  onPressed: () {},\n);\n// 扁平按钮\nFlatButton(\n  child: Text(\"normal\"),\n  onPressed: () {},\n)\n// 默认有一个边框\nOutlineButton(\n  child: Text(\"normal\"),\n  onPressed: () {},\n)\n// icon 按钮\nIconButton(\n  icon: Icon(Icons.thumb_up),\n  onPressed: () {},\n)\n```\n\n- Image\n\nImage组件用来显示图片，数据源可以是 assets、文件、网络<br />Image 对加载过的图片会有缓存（内存），默认缓存数量是1000，最大缓存空间是100M\n\n```dart\n// 加载本地文件\nImage(\n\timage: AssetImage('assets/images/3.0x/kaola.png'),\n  width: 100,\n)\n// 快捷\nImage.assets(\n  'assets/images/3.0x/kaola.png',\n  width: 100,\n)\n\n// 加载网络图片\n\nImage(\n\timage: NetworkImage('$imageUrl'),\n  width: 100.0\n)\n// 快捷\nImage.network(\n\t'$imageUrl',\n  width: 100.0,\n)\n```\n\n<a name=\"alrIu\"></a>\n#### 3. 表单、输入框、单选、复选\n\n<a name=\"OHqpN\"></a>\n#### 4. 布局组件\n\n- 线性布局：Row、Column\n- 弹性布局：Flex、Expanded\n- 流式布局：Wrap、Flow\n- 层叠布局（绝对定位）：Stack、Position\n- 对齐：Align\n\n<a name=\"exdHa\"></a>\n#### 5. 容器类组件\n\n- Container 类似 div\n\n```dart\n// 其中 decoration constraints transform padding 都有对应的单独的Box类\nContainer(\n  width: 100,\n  height: 100,\n  color: Colors.white, // 背景色\n  padding: EdgeInsets.fromLTRB(20, 10, 20, 10),\n  margin: EdgeInsets.fromLTRB(20, 10, 20, 10),\n  // 背景装饰（圆角、背景色、boxShadow等）\n\tdecoration: BoxDecoration(\n    borderRadius: BorderRadius.all(Radius.circular(20)),\n    color: Color(0xffffe030),\n  ),\n  // 大小限制\n  constraints: BoxConstraints(\n    maxWidth: 50,\n    minWidth: 50\n  ),\n  // 变换\n  transform: Matrix4.translationValues(20, 0, 0),\n  child: Text(\n    '$labelValue',\n    style: TextStyle(\n      fontSize: 13,\n      fontWeight: FontWeight.w500,\n      color: Colors.black,\n    ),\n  ),\n)\n```\n\n<a name=\"VZnjN\"></a>\n#### 6. 可滚动组件\n\n- ListView\n- GridView\n- SingleChildScrollView\n- CustomScrollView\n<a name=\"V1RFk\"></a>\n## 四、路由\n<a name=\"bZYp7\"></a>\n#### 1. MaterialPageRoute\n```dart\nNavigator.push( context,\n  MaterialPageRoute(\n    builder: (context) {\n      return NewRoute(); // page\n    },\n    // 包含路由信息，name，arguments\n    settings: RouteSettings(\n    \tname: 'xx',\n      arguments: {'xx': 'xxx'}\n    ),\n    maintainState: true, // 默认进入下个路由时，原来路由仍然会保存在内存中\n    fullscreenDialog: false, // 是否是全屏对话框\n  )\n);\n```\n\n<a name=\"u39oY\"></a>\n#### 2. Navigator\n```dart\nNavigator.push(BuildContext context, Route route);\nNavigator.pop(BuildContext context, [result]);\n\nvar result = await Navigator.push(context, xxx);\nNavigator.pop(context, '返回值xxx');\n```\n\n<a name=\"DJZnx\"></a>\n#### 3. 命名路由\n```dart\nMaterialApp(\n  title: 'Flutter Demo',\n  theme: ThemeData(\n    primarySwatch: Colors.blue,\n  ),\n  //注册路由表\n  routes:{\n   \"new_page\":(context) => NewRoute(),\n    ... // 省略其它路由注册信息\n  } ,\n  home: MyHomePage(title: 'Flutter Demo Home Page'),\n);\n\n// 打开命名路由 \nNavigator.pushNamed(context, 'new_page', arguments: 'xxxx');\n```\n\n<a name=\"QvYRh\"></a>\n#### 4. 命名路由Hook\n> 如果指定的路由名在路由表中已注册，则会调用路由表中的builder函数来生成路由组件；\n> 如果路由表中没有注册，才会调用onGenerateRoute来生成路\n> \n\n```dart\nMaterialApp(\n  ... //省略无关代码\n  onGenerateRoute:(RouteSettings settings){\n      return MaterialPageRoute(builder: (context){\n           String routeName = settings.name;\n       // 如果访问的路由页需要登录，但当前未登录，则直接返回登录页路由，\n       // 引导用户登录；其它情况则正常打开路由。\n     }\n   );\n  }\n);\n```\n\n<a name=\"O0cHE\"></a>\n## 五、网络请求\n<a name=\"2CCRW\"></a>\n#### 1. Dio库\n```\ndependencies:\n  dio: 3.x #latest version\n```\n\n- 基础使用\n```dart\n// get 请求\nResponse res = await Dio().get('https://www.kaola.com', queryParameters: {\n\t\"xx\": \"xx\"\n});\n// post 请求\nResponse res = await Dio().post('https://wwww.kaola.com/api', data: {\n\t'xx': 'xx'\n});\n```\n\n- BaseOptions\n```dart\nDio dio = Dio(BaseOptions(\n  baseUrl: 'https://mocks.alibaba-inc.com/mock/kaola-like',\n  // ....\n));\nawait  dio.get('/xx');\n\nawait dio.post('/xx');\n```\n\n<a name=\"27Q4r\"></a>\n#### 2. 处理cookie\n\n```yaml\n# 依赖\ndio_cookie_manager: ^1.0.0\ncookie_jar: ^1.0.1\n# 引入该依赖后，ios模拟器需要重新 build，可能需要进ios目录执行 pod install\npath_provider: ^1.6.5\n```\n\n```dart\nDio dio = Dio(BaseOptions(\n  baseUrl: 'https://mocks.alibaba-inc.com/mock/kaola-like',\n  // ....\n));\nDirectory appDocDir = await getApplicationDocumentsDirectory();\nString appDocPath = appDocDir.path;\nvar cookieJar = PersistCookieJar(dir: '$appDocPath/.cookies/');\n\ndio.interceptors.add(CookieManager(cookieJar));\n```\n\n<a name=\"WtYha\"></a>\n#### 3. json 转 model\n```dart\nclass User {\n  final String name;\n  final String email;\n\n  User(this.name, this.email);\n\n  User.fromJson(Map<String, dynamic> json)\n      : name = json['name'],\n        email = json['email'];\n\n  Map<String, dynamic> toJson() =>\n    <String, dynamic>{\n      'name': name,\n      'email': email,\n    };\n}\n```\n\n<a name=\"sIx5F\"></a>\n## 六、持久化存储\n\n<a name=\"kLVqm\"></a>\n#### 1. SharedPreferences\n```yaml\n# 引入该依赖后，ios模拟器需要重新 build，可能需要进ios目录执行 pod install\nshared_preferences: ^0.5.6\n```\n\n```dart\n// key-value 存储\nSharedPreferences _prefs = await SharedPreferences.getInstance();\n// 存 key\nawiat _prefs.setString(key, value);\n// 读 key\nString value = _prefs.getString(key);\n\n```\n\n<a name=\"AylVv\"></a>\n#### 2. 文件操作\n\n```dart\n// path_provider\nDirectory appDocDir = await getApplicationDocumentsDirectory();\n String appDocPath = appDocDir.path;\nFile file = new File('$path/counter.txt');\n\n// 读\nString contents = await file.readAsString();\n// 写\nawait file.writeAsString();\n```\n\n<a name=\"1XIyD\"></a>\n## 七、动画\n\n- Animation: 主要用于保存动画插值和状态\n   - addListener(): 帧监听器，每一帧都会被调用\n   - addStatusListener(): 状态改变监听器，动画开始、结束、正向或反向 时会调用状态改变监听器\n- Curve: 用来描述动画过程\n- AnimationController: 用于控制动画，动画的启动 forward()、停止 stop()、反向播放reverse()\n\n```dart\nfinal AnimationController controller = new AnimationController(\n    duration: const Duration(milliseconds: 2000), \n  \tvsync: this\n);\n```\n\n<a name=\"4QriH\"></a>\n## 参考\n\n- [Flutter 实战](https://book.flutterchina.club/intro.html)\n- [Flutter 官网](https://flutter.dev)\n- [Flutter 仓库](https://pub.dev/)\n",
    "body_draft": "---\n\ntags:\n\n- flutter\n- flutter 入门\n\n---\n\n<a name=\"7ErDw\"></a>\n## 一、HelloWorld\n演示\n<a name=\"pV05v\"></a>\n## 二、开发环境\n\n```bash\nexport PUB_HOSTED_URL=https://pub.flutter-io.cn\nexport FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn\n```\n\n<!-- more -->\n<a name=\"7UoCS\"></a>\n## 三、基础组件\n<a name=\"fMSu6\"></a>\n#### 1. Widget\n\n![](https://intranetproxy.alipay.com/skylark/lark/0/2020/svg/244212/1585218751366-48cca93c-5958-4c28-aeac-79f9ccd6640e.svg)<br />State 生命周期如下：<br />![image.png](https://cdn.nlark.com/yuque/0/2020/png/246478/1585315909919-667063b1-e430-4c48-99d0-d0c094d2eb57.png#crop=0&crop=0&crop=1&crop=1&height=845&id=ZNdT0&name=image.png&originHeight=869&originWidth=701&originalType=binary&ratio=1&rotation=0&showTitle=false&size=39605&status=done&style=none&title=&width=682)\n<a name=\"edJVp\"></a>\n#### 2. Text、TextSpan、WidgetSpan\n\n- Text 显示文字\n```dart\nText(\n\t\"Hello World\",\n  textAlign: TextAlign.left,\n  maxLines: 1,\n  overflow: TextOverflow.ellipise,\n  style: TextStyle(\n  \tcolor: Colors.blue,\n    fontSize: 10,\n    ...\n  )\n)\n```\n\n- 实际开发过程中，还会有一个Text不同部分安装不同样式显示，可以用TextSpan\n\n```dart\nText.rich(\n  TextSpan(\n    children: [\n      TextSpan(\n        text: 'Title',\n        style: TextStyle(\n        \tcolor: Color(0xff000000),\n          fontWeight: bold,\n        )\n      ),\n      TextSpan(\n      \ttext: 'description',\n        style: TextStyle(\n          color: Colors.blue,\n        )\n      ),\n      // WidgetSpan 可以实现行内元素的效果\n      WidgetSpan(\n      \tchild: Container(\n        \t...\n        )\n      )\n    ]\n\t)\n)\n```\n\n<a name=\"STTW5\"></a>\n#### 3. Button、Image\n\n- Button \n\nFlutter 提供了几种样式的Button，也支持自定义外观\n```dart\nRaisedButton(\n  child: Text(\"normal\"),\n  onPressed: () {},\n);\n// 扁平按钮\nFlatButton(\n  child: Text(\"normal\"),\n  onPressed: () {},\n)\n// 默认有一个边框\nOutlineButton(\n  child: Text(\"normal\"),\n  onPressed: () {},\n)\n// icon 按钮\nIconButton(\n  icon: Icon(Icons.thumb_up),\n  onPressed: () {},\n)\n```\n\n- Image\n\nImage组件用来显示图片，数据源可以是 assets、文件、网络<br />Image 对加载过的图片会有缓存（内存），默认缓存数量是1000，最大缓存空间是100M\n\n```dart\n// 加载本地文件\nImage(\n\timage: AssetImage('assets/images/3.0x/kaola.png'),\n  width: 100,\n)\n// 快捷\nImage.assets(\n  'assets/images/3.0x/kaola.png',\n  width: 100,\n)\n\n// 加载网络图片\n\nImage(\n\timage: NetworkImage('$imageUrl'),\n  width: 100.0\n)\n// 快捷\nImage.network(\n\t'$imageUrl',\n  width: 100.0,\n)\n```\n\n<a name=\"alrIu\"></a>\n#### 3. 表单、输入框、单选、复选\n\n<a name=\"OHqpN\"></a>\n#### 4. 布局组件\n\n- 线性布局：Row、Column\n- 弹性布局：Flex、Expanded\n- 流式布局：Wrap、Flow\n- 层叠布局（绝对定位）：Stack、Position\n- 对齐：Align\n\n<a name=\"exdHa\"></a>\n#### 5. 容器类组件\n\n- Container 类似 div\n\n```dart\n// 其中 decoration constraints transform padding 都有对应的单独的Box类\nContainer(\n  width: 100,\n  height: 100,\n  color: Colors.white, // 背景色\n  padding: EdgeInsets.fromLTRB(20, 10, 20, 10),\n  margin: EdgeInsets.fromLTRB(20, 10, 20, 10),\n  // 背景装饰（圆角、背景色、boxShadow等）\n\tdecoration: BoxDecoration(\n    borderRadius: BorderRadius.all(Radius.circular(20)),\n    color: Color(0xffffe030),\n  ),\n  // 大小限制\n  constraints: BoxConstraints(\n    maxWidth: 50,\n    minWidth: 50\n  ),\n  // 变换\n  transform: Matrix4.translationValues(20, 0, 0),\n  child: Text(\n    '$labelValue',\n    style: TextStyle(\n      fontSize: 13,\n      fontWeight: FontWeight.w500,\n      color: Colors.black,\n    ),\n  ),\n)\n```\n\n<a name=\"VZnjN\"></a>\n#### 6. 可滚动组件\n\n- ListView\n- GridView\n- SingleChildScrollView\n- CustomScrollView\n<a name=\"V1RFk\"></a>\n## 四、路由\n<a name=\"bZYp7\"></a>\n#### 1. MaterialPageRoute\n```dart\nNavigator.push( context,\n  MaterialPageRoute(\n    builder: (context) {\n      return NewRoute(); // page\n    },\n    // 包含路由信息，name，arguments\n    settings: RouteSettings(\n    \tname: 'xx',\n      arguments: {'xx': 'xxx'}\n    ),\n    maintainState: true, // 默认进入下个路由时，原来路由仍然会保存在内存中\n    fullscreenDialog: false, // 是否是全屏对话框\n  )\n);\n```\n\n<a name=\"u39oY\"></a>\n#### 2. Navigator\n```dart\nNavigator.push(BuildContext context, Route route);\nNavigator.pop(BuildContext context, [result]);\n\nvar result = await Navigator.push(context, xxx);\nNavigator.pop(context, '返回值xxx');\n```\n\n<a name=\"DJZnx\"></a>\n#### 3. 命名路由\n```dart\nMaterialApp(\n  title: 'Flutter Demo',\n  theme: ThemeData(\n    primarySwatch: Colors.blue,\n  ),\n  //注册路由表\n  routes:{\n   \"new_page\":(context) => NewRoute(),\n    ... // 省略其它路由注册信息\n  } ,\n  home: MyHomePage(title: 'Flutter Demo Home Page'),\n);\n\n// 打开命名路由 \nNavigator.pushNamed(context, 'new_page', arguments: 'xxxx');\n```\n\n<a name=\"QvYRh\"></a>\n#### 4. 命名路由Hook\n> 如果指定的路由名在路由表中已注册，则会调用路由表中的builder函数来生成路由组件；\n> 如果路由表中没有注册，才会调用onGenerateRoute来生成路\n> \n\n```dart\nMaterialApp(\n  ... //省略无关代码\n  onGenerateRoute:(RouteSettings settings){\n      return MaterialPageRoute(builder: (context){\n           String routeName = settings.name;\n       // 如果访问的路由页需要登录，但当前未登录，则直接返回登录页路由，\n       // 引导用户登录；其它情况则正常打开路由。\n     }\n   );\n  }\n);\n```\n\n<a name=\"O0cHE\"></a>\n## 五、网络请求\n<a name=\"2CCRW\"></a>\n#### 1. Dio库\n```\ndependencies:\n  dio: 3.x #latest version\n```\n\n- 基础使用\n```dart\n// get 请求\nResponse res = await Dio().get('https://www.kaola.com', queryParameters: {\n\t\"xx\": \"xx\"\n});\n// post 请求\nResponse res = await Dio().post('https://wwww.kaola.com/api', data: {\n\t'xx': 'xx'\n});\n```\n\n- BaseOptions\n```dart\nDio dio = Dio(BaseOptions(\n  baseUrl: 'https://mocks.alibaba-inc.com/mock/kaola-like',\n  // ....\n));\nawait  dio.get('/xx');\n\nawait dio.post('/xx');\n```\n\n<a name=\"27Q4r\"></a>\n#### 2. 处理cookie\n\n```yaml\n# 依赖\ndio_cookie_manager: ^1.0.0\ncookie_jar: ^1.0.1\n# 引入该依赖后，ios模拟器需要重新 build，可能需要进ios目录执行 pod install\npath_provider: ^1.6.5\n```\n\n```dart\nDio dio = Dio(BaseOptions(\n  baseUrl: 'https://mocks.alibaba-inc.com/mock/kaola-like',\n  // ....\n));\nDirectory appDocDir = await getApplicationDocumentsDirectory();\nString appDocPath = appDocDir.path;\nvar cookieJar = PersistCookieJar(dir: '$appDocPath/.cookies/');\n\ndio.interceptors.add(CookieManager(cookieJar));\n```\n\n<a name=\"WtYha\"></a>\n#### 3. json 转 model\n```dart\nclass User {\n  final String name;\n  final String email;\n\n  User(this.name, this.email);\n\n  User.fromJson(Map<String, dynamic> json)\n      : name = json['name'],\n        email = json['email'];\n\n  Map<String, dynamic> toJson() =>\n    <String, dynamic>{\n      'name': name,\n      'email': email,\n    };\n}\n```\n\n<a name=\"sIx5F\"></a>\n## 六、持久化存储\n\n<a name=\"kLVqm\"></a>\n#### 1. SharedPreferences\n```yaml\n# 引入该依赖后，ios模拟器需要重新 build，可能需要进ios目录执行 pod install\nshared_preferences: ^0.5.6\n```\n\n```dart\n// key-value 存储\nSharedPreferences _prefs = await SharedPreferences.getInstance();\n// 存 key\nawiat _prefs.setString(key, value);\n// 读 key\nString value = _prefs.getString(key);\n\n```\n\n<a name=\"AylVv\"></a>\n#### 2. 文件操作\n\n```dart\n// path_provider\nDirectory appDocDir = await getApplicationDocumentsDirectory();\n String appDocPath = appDocDir.path;\nFile file = new File('$path/counter.txt');\n\n// 读\nString contents = await file.readAsString();\n// 写\nawait file.writeAsString();\n```\n\n<a name=\"1XIyD\"></a>\n## 七、动画\n\n- Animation: 主要用于保存动画插值和状态\n   - addListener(): 帧监听器，每一帧都会被调用\n   - addStatusListener(): 状态改变监听器，动画开始、结束、正向或反向 时会调用状态改变监听器\n- Curve: 用来描述动画过程\n- AnimationController: 用于控制动画，动画的启动 forward()、停止 stop()、反向播放reverse()\n\n```dart\nfinal AnimationController controller = new AnimationController(\n    duration: const Duration(milliseconds: 2000), \n  \tvsync: this\n);\n```\n\n<a name=\"4QriH\"></a>\n## 参考\n\n- [Flutter 实战](https://book.flutterchina.club/intro.html)\n- [Flutter 官网](https://flutter.dev)\n- [Flutter 仓库](https://pub.dev/)\n",
    "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><hr id=\"rRUFq\" class=\"ne-hr\"><p id=\"u9df2b98f\" class=\"ne-p\"><span class=\"ne-text\">tags:</span></p><ul class=\"ne-ul\"><li id=\"ueadc8077\"><span class=\"ne-text\">flutter</span></li><li id=\"u59b37da9\"><span class=\"ne-text\">flutter 入门</span></li></ul><hr id=\"vIOHD\" class=\"ne-hr\"><h2 id=\"7ErDw\"><span class=\"ne-text\">一、HelloWorld</span></h2><p id=\"e99bf216c651a936083a2e95f4e7b3f8\" class=\"ne-p\"><span class=\"ne-text\">演示</span></p><h2 id=\"pV05v\"><span class=\"ne-text\">二、开发环境</span></h2><p id=\"31dd40d1d5c04b2c8c9919cb677d78d5\" class=\"ne-p\"><br></p><pre data-language=\"bash\" id=\"KVwpY\" class=\"ne-codeblock language-bash\">export PUB_HOSTED_URL=https://pub.flutter-io.cn\nexport FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn</pre><p id=\"f6c47bb4eb5010a5d3ee5d76535cef21\" class=\"ne-p\"><br></p><p id=\"ud47ce1e2\" class=\"ne-p\"><span class=\"ne-text\">&lt;!-- more --&gt;</span></p><h2 id=\"7UoCS\"><span class=\"ne-text\">三、基础组件</span></h2><h4 id=\"fMSu6\"><span class=\"ne-text\">1. Widget</span></h4><p id=\"4e3545af1d79617cde84a0e9178a0fd8\" class=\"ne-p\"><br></p><img src=\"https://intranetproxy.alipay.com/skylark/lark/0/2020/svg/244212/1585218751366-48cca93c-5958-4c28-aeac-79f9ccd6640e.svg\" id=\"fgRJ2\" style=\"display: block; width: 100%\"><p id=\"070020a572077cee2693b205c0a2f486\" class=\"ne-p\"><span class=\"ne-text\">State 生命周期如下：</span></p><p id=\"62ae66d26fdf624068dde60a7fe07791\" class=\"ne-p\"><img src=\"https://cdn.nlark.com/yuque/0/2020/png/246478/1585315909919-667063b1-e430-4c48-99d0-d0c094d2eb57.png\" width=\"682\" id=\"ZNdT0\" class=\"ne-image\"></p><h4 id=\"edJVp\"><span class=\"ne-text\">2. Text、TextSpan、WidgetSpan</span></h4><ul class=\"ne-ul\"><li id=\"8f4bb35e9560d6528489d1b7a4cff1f9\"><span class=\"ne-text\">Text 显示文字</span></li></ul><pre data-language=\"dart\" id=\"JIziT\" class=\"ne-codeblock language-dart\">Text(\n\t&quot;Hello World&quot;,\n  textAlign: TextAlign.left,\n  maxLines: 1,\n  overflow: TextOverflow.ellipise,\n  style: TextStyle(\n  \tcolor: Colors.blue,\n    fontSize: 10,\n    ...\n  )\n)</pre><p id=\"0589c3d41f5fe4fa86186c13c88f164a\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"0fdde3020af0782cc076f3de0af779b2\"><span class=\"ne-text\">实际开发过程中，还会有一个Text不同部分安装不同样式显示，可以用TextSpan</span></li></ul><p id=\"4132330592e4e1276a2fbab4c7ea9111\" class=\"ne-p\"><br></p><pre data-language=\"dart\" id=\"c1ndF\" class=\"ne-codeblock language-dart\">Text.rich(\n  TextSpan(\n    children: [\n      TextSpan(\n        text: 'Title',\n        style: TextStyle(\n        \tcolor: Color(0xff000000),\n          fontWeight: bold,\n        )\n      ),\n      TextSpan(\n      \ttext: 'description',\n        style: TextStyle(\n          color: Colors.blue,\n        )\n      ),\n      // WidgetSpan 可以实现行内元素的效果\n      WidgetSpan(\n      \tchild: Container(\n        \t...\n        )\n      )\n    ]\n\t)\n)</pre><p id=\"7886cb9df76f103256c68b5189d2ae64\" class=\"ne-p\"><br></p><h4 id=\"STTW5\"><span class=\"ne-text\">3. Button、Image</span></h4><ul class=\"ne-ul\"><li id=\"5fab3555e0ef9d22d7b704e5989d51cd\"><span class=\"ne-text\">Button </span></li></ul><p id=\"89c2e5a671d97d3ff406a9081568feb5\" class=\"ne-p\" style=\"text-indent: 2em\"><span class=\"ne-text\">Flutter 提供了几种样式的Button，也支持自定义外观</span></p><pre data-language=\"dart\" id=\"F0BOl\" class=\"ne-codeblock language-dart\">RaisedButton(\n  child: Text(&quot;normal&quot;),\n  onPressed: () {},\n);\n// 扁平按钮\nFlatButton(\n  child: Text(&quot;normal&quot;),\n  onPressed: () {},\n)\n// 默认有一个边框\nOutlineButton(\n  child: Text(&quot;normal&quot;),\n  onPressed: () {},\n)\n// icon 按钮\nIconButton(\n  icon: Icon(Icons.thumb_up),\n  onPressed: () {},\n)</pre><p id=\"6218ac6bb21d072cfe79339bbde96623\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"89aa61804ca4eee3f1589927e014c4e4\"><span class=\"ne-text\">Image</span></li></ul><p id=\"2f631bf817158f69ac32769f0e0d6b09\" class=\"ne-p\" style=\"text-indent: 2em\"><span class=\"ne-text\">Image组件用来显示图片，数据源可以是 assets、文件、网络</span></p><p id=\"e78191a2209348f99829d205c493ef03\" class=\"ne-p\" style=\"text-indent: 2em\"><span class=\"ne-text\">Image 对加载过的图片会有缓存（内存），默认缓存数量是1000，最大缓存空间是100M</span></p><p id=\"134624b0cf2f7c3029400f175c6a68b7\" class=\"ne-p\"><br></p><pre data-language=\"dart\" id=\"SjlEE\" class=\"ne-codeblock language-dart\">// 加载本地文件\nImage(\n\timage: AssetImage('assets/images/3.0x/kaola.png'),\n  width: 100,\n)\n// 快捷\nImage.assets(\n  'assets/images/3.0x/kaola.png',\n  width: 100,\n)\n\n// 加载网络图片\n\nImage(\n\timage: NetworkImage('$imageUrl'),\n  width: 100.0\n)\n// 快捷\nImage.network(\n\t'$imageUrl',\n  width: 100.0,\n)</pre><p id=\"b2172e2db01f93d6ca8ccf0f8068770e\" class=\"ne-p\"><br></p><h4 id=\"alrIu\"><span class=\"ne-text\">3. 表单、输入框、单选、复选</span></h4><p id=\"23eb41a88f34a46b1b028122dd81c0f1\" class=\"ne-p\"><br></p><h4 id=\"OHqpN\"><span class=\"ne-text\">4. 布局组件</span></h4><ul class=\"ne-ul\"><li id=\"75e4b5e8986f3a58ae77ab068c0d0af0\"><span class=\"ne-text\">线性布局：Row、Column</span></li><li id=\"3c7d60ea60aba7f18c67972595f2f17d\"><span class=\"ne-text\">弹性布局：Flex、Expanded</span></li><li id=\"6133439882425aee1740a591cd926a07\"><span class=\"ne-text\">流式布局：Wrap、Flow</span></li><li id=\"c99d6984b1bfbc789c9ed8604386c886\"><span class=\"ne-text\">层叠布局（绝对定位）：Stack、Position</span></li><li id=\"ffbbdcec8a9ee44b34de9acf7438a7f7\"><span class=\"ne-text\">对齐：Align</span></li></ul><p id=\"b84f1606564fbfaba8f4fba68badf441\" class=\"ne-p\"><br></p><h4 id=\"exdHa\"><span class=\"ne-text\">5. 容器类组件</span></h4><ul class=\"ne-ul\"><li id=\"555e1aee7a157a41af3fd0fc444f6dd4\"><span class=\"ne-text\">Container 类似 div</span></li></ul><p id=\"c3ca689df3e8d4392d92cfd53004631f\" class=\"ne-p\"><br></p><pre data-language=\"dart\" id=\"BvuPb\" class=\"ne-codeblock language-dart\">// 其中 decoration constraints transform padding 都有对应的单独的Box类\nContainer(\n  width: 100,\n  height: 100,\n  color: Colors.white, // 背景色\n  padding: EdgeInsets.fromLTRB(20, 10, 20, 10),\n  margin: EdgeInsets.fromLTRB(20, 10, 20, 10),\n  // 背景装饰（圆角、背景色、boxShadow等）\n\tdecoration: BoxDecoration(\n    borderRadius: BorderRadius.all(Radius.circular(20)),\n    color: Color(0xffffe030),\n  ),\n  // 大小限制\n  constraints: BoxConstraints(\n    maxWidth: 50,\n    minWidth: 50\n  ),\n  // 变换\n  transform: Matrix4.translationValues(20, 0, 0),\n  child: Text(\n    '$labelValue',\n    style: TextStyle(\n      fontSize: 13,\n      fontWeight: FontWeight.w500,\n      color: Colors.black,\n    ),\n  ),\n)</pre><p id=\"910a146a5db09dcfe150989260695d77\" class=\"ne-p\"><br></p><h4 id=\"VZnjN\"><span class=\"ne-text\">6. 可滚动组件</span></h4><ul class=\"ne-ul\"><li id=\"fe4583b9ec2fd1d3db7a072e961d60b7\"><span class=\"ne-text\">ListView</span></li><li id=\"cc1219780decebaf0c29a5482d6e0c20\"><span class=\"ne-text\">GridView</span></li><li id=\"2f6e24ba5270c6a4de6e16de7681f3c9\"><span class=\"ne-text\">SingleChildScrollView</span></li><li id=\"76f46904e3e2add0ad01ec49e04111aa\"><span class=\"ne-text\">CustomScrollView</span></li></ul><h2 id=\"V1RFk\"><span class=\"ne-text\">四、路由</span></h2><h4 id=\"bZYp7\"><span class=\"ne-text\">1. MaterialPageRoute</span></h4><pre data-language=\"dart\" id=\"fl7NU\" class=\"ne-codeblock language-dart\">Navigator.push( context,\n  MaterialPageRoute(\n    builder: (context) {\n      return NewRoute(); // page\n    },\n    // 包含路由信息，name，arguments\n    settings: RouteSettings(\n    \tname: 'xx',\n      arguments: {'xx': 'xxx'}\n    ),\n    maintainState: true, // 默认进入下个路由时，原来路由仍然会保存在内存中\n    fullscreenDialog: false, // 是否是全屏对话框\n  )\n);</pre><p id=\"814b2dff080c89c5c608eb8f762bed17\" class=\"ne-p\"><br></p><h4 id=\"u39oY\"><span class=\"ne-text\">2. Navigator</span></h4><pre data-language=\"dart\" id=\"RKf9N\" class=\"ne-codeblock language-dart\">Navigator.push(BuildContext context, Route route);\nNavigator.pop(BuildContext context, [result]);\n\nvar result = await Navigator.push(context, xxx);\nNavigator.pop(context, '返回值xxx');</pre><p id=\"acb2e4ad13b72f4c85efaf5b1940ec32\" class=\"ne-p\"><br></p><h4 id=\"DJZnx\"><span class=\"ne-text\">3. 命名路由</span></h4><pre data-language=\"dart\" id=\"KktDG\" class=\"ne-codeblock language-dart\">MaterialApp(\n  title: 'Flutter Demo',\n  theme: ThemeData(\n    primarySwatch: Colors.blue,\n  ),\n  //注册路由表\n  routes:{\n   &quot;new_page&quot;:(context) =&gt; NewRoute(),\n    ... // 省略其它路由注册信息\n  } ,\n  home: MyHomePage(title: 'Flutter Demo Home Page'),\n);\n\n// 打开命名路由 \nNavigator.pushNamed(context, 'new_page', arguments: 'xxxx');</pre><p id=\"9b748adfd93053d0dd517d7d608092c3\" class=\"ne-p\"><br></p><h4 id=\"QvYRh\"><span class=\"ne-text\">4. 命名路由Hook</span></h4><div class=\"ne-quote\"><p id=\"06f5cf5a1b9e9a63c99b5556fb478bfc\" class=\"ne-p\"><span class=\"ne-text\">如果指定的路由名在路由表中已注册，则会调用路由表中的builder函数来生成路由组件；</span></p><p id=\"59a28301a0f1d14585f4a524a76cff34\" class=\"ne-p\"><span class=\"ne-text\">如果路由表中没有注册，才会调用onGenerateRoute来生成路</span></p><p id=\"33e448f980b7932ea34a061f59cbb6b6\" class=\"ne-p\"><br></p></div><pre data-language=\"dart\" id=\"su9ys\" class=\"ne-codeblock language-dart\">MaterialApp(\n  ... //省略无关代码\n  onGenerateRoute:(RouteSettings settings){\n      return MaterialPageRoute(builder: (context){\n           String routeName = settings.name;\n       // 如果访问的路由页需要登录，但当前未登录，则直接返回登录页路由，\n       // 引导用户登录；其它情况则正常打开路由。\n     }\n   );\n  }\n);</pre><p id=\"e066f53dcc85db6ec020a3c576412379\" class=\"ne-p\"><br></p><h2 id=\"O0cHE\"><span class=\"ne-text\">五、网络请求</span></h2><h4 id=\"2CCRW\"><span class=\"ne-text\">1. Dio库</span></h4><pre data-language=\"plain\" id=\"cjFrV\" class=\"ne-codeblock language-plain\">dependencies:\n  dio: 3.x #latest version</pre><p id=\"38d4ad6f3bf0d09084770bb780956d05\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"9d35be33aa1591dc7b00952c0218658f\"><span class=\"ne-text\">基础使用</span></li></ul><pre data-language=\"dart\" id=\"ODz6z\" class=\"ne-codeblock language-dart\">// get 请求\nResponse res = await Dio().get('https://www.kaola.com', queryParameters: {\n\t&quot;xx&quot;: &quot;xx&quot;\n});\n// post 请求\nResponse res = await Dio().post('https://wwww.kaola.com/api', data: {\n\t'xx': 'xx'\n});</pre><p id=\"b2aca5030321248bae26dcd825de1708\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"bc9b84b7b2eb97257ebebfeffbfe94af\"><span class=\"ne-text\">BaseOptions</span></li></ul><pre data-language=\"dart\" id=\"k81HK\" class=\"ne-codeblock language-dart\">Dio dio = Dio(BaseOptions(\n  baseUrl: 'https://mocks.alibaba-inc.com/mock/kaola-like',\n  // ....\n));\nawait  dio.get('/xx');\n\nawait dio.post('/xx');</pre><p id=\"e52c260f1cd018f8129655f61be126c7\" class=\"ne-p\"><br></p><h4 id=\"27Q4r\"><span class=\"ne-text\">2. 处理cookie</span></h4><p id=\"132fde0b0af6b2c4a3c8a00e48d11336\" class=\"ne-p\"><br></p><pre data-language=\"yaml\" id=\"fmVzl\" class=\"ne-codeblock language-yaml\"># 依赖\ndio_cookie_manager: ^1.0.0\ncookie_jar: ^1.0.1\n# 引入该依赖后，ios模拟器需要重新 build，可能需要进ios目录执行 pod install\npath_provider: ^1.6.5</pre><p id=\"64cc28c5970ee4647ffa86e629020245\" class=\"ne-p\"><br></p><pre data-language=\"dart\" id=\"W4T7V\" class=\"ne-codeblock language-dart\">Dio dio = Dio(BaseOptions(\n  baseUrl: 'https://mocks.alibaba-inc.com/mock/kaola-like',\n  // ....\n));\nDirectory appDocDir = await getApplicationDocumentsDirectory();\nString appDocPath = appDocDir.path;\nvar cookieJar = PersistCookieJar(dir: '$appDocPath/.cookies/');\n\ndio.interceptors.add(CookieManager(cookieJar));</pre><p id=\"ba5319269219ea407ac45529cce8bd0b\" class=\"ne-p\"><br></p><h4 id=\"WtYha\"><span class=\"ne-text\">3. json 转 model</span></h4><pre data-language=\"dart\" id=\"93zGL\" class=\"ne-codeblock language-dart\">class User {\n  final String name;\n  final String email;\n\n  User(this.name, this.email);\n\n  User.fromJson(Map&lt;String, dynamic&gt; json)\n      : name = json['name'],\n        email = json['email'];\n\n  Map&lt;String, dynamic&gt; toJson() =&gt;\n    &lt;String, dynamic&gt;{\n      'name': name,\n      'email': email,\n    };\n}</pre><p id=\"e7db5d8a4c63e33008159228f82209c2\" class=\"ne-p\"><br></p><h2 id=\"sIx5F\"><span class=\"ne-text\">六、持久化存储</span></h2><p id=\"12a23ae632346b797cfcaae28fbb83e7\" class=\"ne-p\"><br></p><h4 id=\"kLVqm\"><span class=\"ne-text\">1. SharedPreferences</span></h4><pre data-language=\"yaml\" id=\"VexTA\" class=\"ne-codeblock language-yaml\"># 引入该依赖后，ios模拟器需要重新 build，可能需要进ios目录执行 pod install\nshared_preferences: ^0.5.6</pre><p id=\"8e7dcee0e27a8c64fb81ba62c918ccb6\" class=\"ne-p\"><br></p><pre data-language=\"dart\" id=\"P2a1q\" class=\"ne-codeblock language-dart\">// key-value 存储\nSharedPreferences _prefs = await SharedPreferences.getInstance();\n// 存 key\nawiat _prefs.setString(key, value);\n// 读 key\nString value = _prefs.getString(key);\n</pre><p id=\"33e4d77e425e534c783575a670c954af\" class=\"ne-p\"><br></p><h4 id=\"AylVv\"><span class=\"ne-text\">2. 文件操作</span></h4><p id=\"03d37ff607f2bdb8736a4a7fd8dc837b\" class=\"ne-p\"><br></p><pre data-language=\"dart\" id=\"kh3VD\" class=\"ne-codeblock language-dart\">// path_provider\nDirectory appDocDir = await getApplicationDocumentsDirectory();\n String appDocPath = appDocDir.path;\nFile file = new File('$path/counter.txt');\n\n// 读\nString contents = await file.readAsString();\n// 写\nawait file.writeAsString();</pre><p id=\"695bbb2d39775caf23d4ccbe9c093025\" class=\"ne-p\"><br></p><h2 id=\"1XIyD\"><span class=\"ne-text\">七、动画</span></h2><ul class=\"ne-ul\"><li id=\"c6f80cf75260bb2abf1291c155345434\"><span class=\"ne-text\">Animation: 主要用于保存动画插值和状态</span></li></ul><ul class=\"ne-list-wrap\"><ul ne-level=\"1\" class=\"ne-ul\"><li id=\"9b2ccb93bd40f736abb81746a0cb8c6c\"><span class=\"ne-text\">addListener(): 帧监听器，每一帧都会被调用</span></li><li id=\"35e04c24d08546c6e17ce5dc3d3956da\"><span class=\"ne-text\">addStatusListener(): 状态改变监听器，动画开始、结束、正向或反向 时会调用状态改变监听器</span></li></ul></ul><ul class=\"ne-ul\"><li id=\"1a26c0bdb822da02b275e6b597c4c5fa\"><span class=\"ne-text\">Curve: 用来描述动画过程</span></li><li id=\"47e5e5815552f4902ae005b7b70621e7\"><span class=\"ne-text\">AnimationController: 用于控制动画，动画的启动 forward()、停止 stop()、反向播放reverse()</span></li></ul><p id=\"cea2ca4136112596d2396650440cdb52\" class=\"ne-p\"><br></p><pre data-language=\"dart\" id=\"qnOs1\" class=\"ne-codeblock language-dart\">final AnimationController controller = new AnimationController(\n    duration: const Duration(milliseconds: 2000), \n  \tvsync: this\n);</pre><p id=\"c42d0adaa81f530b7fff023cc2ff29c7\" class=\"ne-p\"><br></p><h2 id=\"4QriH\"><span class=\"ne-text\">参考</span></h2><ul class=\"ne-ul\"><li id=\"5221944480adb36feb8ff499adc298e2\"><a href=\"https://book.flutterchina.club/intro.html\" data-href=\"https://book.flutterchina.club/intro.html\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Flutter 实战</span></a></li><li id=\"cab84f1d055f286af4f79497099fa881\"><a href=\"https://flutter.dev\" data-href=\"https://flutter.dev\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Flutter 官网</span></a></li><li id=\"832da0cb90de715ebad391584a37a7a3\"><a href=\"https://pub.dev/\" data-href=\"https://pub.dev/\" target=\"_blank\" class=\"ne-link\"><span class=\"ne-text\">Flutter 仓库</span></a></li></ul></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"paragraphSpacing\" content=\"relax\" /><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22rRUFq%22%7D\"></card><p data-lake-id=\"u9df2b98f\" id=\"u9df2b98f\"><span data-lake-id=\"u4938d29e\" id=\"u4938d29e\">tags:</span></p><ul list=\"ub49bcb6f\"><li fid=\"uddd46c2b\" data-lake-id=\"ueadc8077\" id=\"ueadc8077\"><span data-lake-id=\"ua1200a22\" id=\"ua1200a22\">flutter</span></li><li fid=\"uddd46c2b\" data-lake-id=\"u59b37da9\" id=\"u59b37da9\"><span data-lake-id=\"u58e6d791\" id=\"u58e6d791\">flutter 入门</span></li></ul><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22vIOHD%22%7D\"></card><h2 data-lake-id=\"7ErDw\" id=\"7ErDw\"><span data-lake-id=\"u20f8e9fa\" id=\"u20f8e9fa\">一、HelloWorld</span></h2><p data-lake-id=\"e99bf216c651a936083a2e95f4e7b3f8\" id=\"e99bf216c651a936083a2e95f4e7b3f8\"><span data-lake-id=\"ub2cfb556\" id=\"ub2cfb556\">演示</span></p><h2 data-lake-id=\"pV05v\" id=\"pV05v\"><span data-lake-id=\"u0cb52e82\" id=\"u0cb52e82\">二、开发环境</span></h2><p data-lake-id=\"31dd40d1d5c04b2c8c9919cb677d78d5\" id=\"31dd40d1d5c04b2c8c9919cb677d78d5\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22export%20PUB_HOSTED_URL%3Dhttps%3A%2F%2Fpub.flutter-io.cn%5Cnexport%20FLUTTER_STORAGE_BASE_URL%3Dhttps%3A%2F%2Fstorage.flutter-io.cn%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22KVwpY%22%7D\"></card><p data-lake-id=\"f6c47bb4eb5010a5d3ee5d76535cef21\" id=\"f6c47bb4eb5010a5d3ee5d76535cef21\"><br></p><p data-lake-id=\"ud47ce1e2\" id=\"ud47ce1e2\"><span data-lake-id=\"u1d9529c3\" id=\"u1d9529c3\">&lt;!-- more --&gt;</span></p><h2 data-lake-id=\"7UoCS\" id=\"7UoCS\"><span data-lake-id=\"ua85d4fa0\" id=\"ua85d4fa0\">三、基础组件</span></h2><h4 data-lake-id=\"fMSu6\" id=\"fMSu6\"><span data-lake-id=\"u0c7d6e7c\" id=\"u0c7d6e7c\">1. Widget</span></h4><p data-lake-id=\"4e3545af1d79617cde84a0e9178a0fd8\" id=\"4e3545af1d79617cde84a0e9178a0fd8\"><br></p><card type=\"block\" name=\"board\" value=\"data:%7B%22diagramData%22%3A%7B%22head%22%3A%7B%22version%22%3A%222.0.0%22%7D%2C%22body%22%3A%5B%7B%22id%22%3A%224a749c6b%22%2C%22html%22%3A%22Widget%22%2C%22type%22%3A%22mindmap%22%2C%22children%22%3A%5B%7B%22id%22%3A%228308b1b9%22%2C%22html%22%3A%22StatelessWidget%22%2C%22treeEdge%22%3A%7B%22stroke%22%3A%22%23A287E1%22%7D%2C%22children%22%3A%5B%7B%22html%22%3A%22%E7%94%A8%E4%BA%8E%E4%B8%8D%E9%9C%80%E8%A6%81%E7%BB%B4%E6%8A%A4%E7%8A%B6%E6%80%81%E7%9A%84%E5%9C%BA%E6%99%AF%22%2C%22id%22%3A%22b3c6cc4c-1bc3-4ee7-bce2-82f1464173ab%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A15%7D%5D%2C%22zIndex%22%3A16%7D%2C%7B%22html%22%3A%22StatefullWidget%22%2C%22layout%22%3A%7B%22quadrant%22%3A1%7D%2C%22treeEdge%22%3A%7B%22stroke%22%3A%22%23DE81C6%22%7D%2C%22id%22%3A%22b8261139-e31b-41e2-80a7-a4c2b0cdbdad%22%2C%22children%22%3A%5B%7B%22html%22%3A%22%E4%B8%80%E4%B8%AAStatefulWidget%20%E7%B1%BB%E4%BC%9A%E5%AF%B9%E5%BA%94%E4%B8%80%E4%B8%AAState%20%E7%B1%BB%22%2C%22id%22%3A%228d5efc62-4e8b-4874-8bdc-75f228e7e58b%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A18%7D%2C%7B%22html%22%3A%22%E5%BD%93State%E8%A2%AB%E6%94%B9%E5%8F%98%E6%97%B6%EF%BC%8C%E6%89%8B%E5%8A%A8%E8%B0%83%E7%94%A8setState()%20%E6%96%B9%E6%B3%95%E9%80%9A%E7%9F%A5Flutter%EF%BC%8CFlutter%E4%BC%9A%E9%87%8D%E6%96%B0%E8%B0%83%E7%94%A8build%22%2C%22id%22%3A%22588678c7-ab73-4a99-9f5d-06570f452f4f%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A17%7D%5D%2C%22zIndex%22%3A19%7D%2C%7B%22html%22%3A%22State%22%2C%22layout%22%3A%7B%22quadrant%22%3A1%7D%2C%22treeEdge%22%3A%7B%22stroke%22%3A%22%2369B1E4%22%7D%2C%22id%22%3A%22a44a66bd-230b-41d8-8852-aa8ef6cc3fbe%22%2C%22children%22%3A%5B%7B%22html%22%3A%22%E4%B8%A4%E4%B8%AA%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7%EF%BC%9Awidget%EF%BC%8C%E5%8D%B3%E4%B8%8E%E5%AE%83%E5%85%B3%E8%81%94%E7%9A%84StatefulWidget%E7%9A%84%E5%AE%9E%E4%BE%8B%EF%BC%8Ccontext%20%E5%8D%B3%20BuildContext%22%2C%22id%22%3A%222034682c-22d1-47bf-982d-9f2d98219188%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A13%7D%2C%7B%22html%22%3A%22State%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%22%2C%22id%22%3A%223cb4932b-5b3e-48be-b1fb-928ab0c72cb4%22%2C%22children%22%3A%5B%7B%22html%22%3A%22initState%22%2C%22id%22%3A%22abb41fae-38c0-415d-ad5e-6afee134ad99%22%2C%22children%22%3A%5B%7B%22html%22%3A%22%E3%80%90%E5%B8%B8%E7%94%A8%E3%80%91%E7%94%A8%E4%BA%8E%E7%8A%B6%E6%80%81%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%81%E8%AE%A2%E9%98%85%E4%BA%8B%E4%BB%B6%E9%80%9A%E7%9F%A5%22%2C%22id%22%3A%223b7abc62-e808-4e79-80f7-f16be3638408%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A2%7D%5D%2C%22zIndex%22%3A3%7D%2C%7B%22html%22%3A%22didUpdateWidget%22%2C%22id%22%3A%22d67d0dde-6cc5-4592-b752-bffbde23cbf2%22%2C%22children%22%3A%5B%7B%22html%22%3A%22%E9%87%8D%E6%96%B0%E6%9E%84%E5%BB%BA%E6%97%B6%EF%BC%8C%E4%BC%9A%E6%A3%80%E6%B5%8BWidget%E5%90%8C%E4%B8%80%E4%BD%8D%E7%BD%AE%E7%9A%84%E6%96%B0%E6%97%A7%E8%8A%82%E7%82%B9%EF%BC%8C%E9%9C%80%E8%A6%81%E6%9B%B4%E6%96%B0%E6%97%B6%E4%BC%9A%E8%B0%83%E7%94%A8%22%2C%22id%22%3A%22b1d343b5-a173-4255-aaa0-fed61877ae4a%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A6%7D%5D%2C%22zIndex%22%3A7%7D%2C%7B%22html%22%3A%22deactivate%22%2C%22id%22%3A%2240b86cc6-2922-4e64-afac-2b57a8bbdf05%22%2C%22children%22%3A%5B%7B%22html%22%3A%22%E5%AF%B9%E8%B1%A1%E8%A2%AB%E7%A7%BB%E9%99%A4%E6%97%B6%EF%BC%8C%E4%BC%9A%E8%B0%83%E7%94%A8%E5%9B%9E%E8%B0%83%EF%BC%8C%E4%B8%80%E4%BA%9B%E5%9C%BA%E6%99%AF%E4%B8%8B%E4%BC%9A%E9%87%8D%E6%96%B0%E6%8F%92%E5%88%B0%E6%A0%91%E4%B8%AD%EF%BC%8C%3Cdiv%3E%E6%B2%A1%E6%9C%89%E7%A7%BB%E9%99%A4%E6%B2%A1%E6%9C%89%E9%87%8D%E6%96%B0%E6%8F%92%E5%85%A5%EF%BC%8C%E5%88%99%E4%BC%9A%E7%B4%A7%E6%8E%A5%E7%9D%80%E8%B0%83%E7%94%A8dispose()%3C%2Fdiv%3E%22%2C%22id%22%3A%22ff84a3e6-20f9-4ef0-acda-b1c86159a3cd%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A10%7D%5D%2C%22zIndex%22%3A11%7D%2C%7B%22html%22%3A%22dispose%22%2C%22id%22%3A%2233c0f378-2568-412f-844d-307fb78de392%22%2C%22children%22%3A%5B%7B%22html%22%3A%22%E3%80%90%E5%B8%B8%E7%94%A8%E3%80%91State%E5%AF%B9%E8%B1%A1%E8%A2%AB%E6%B0%B8%E4%B9%85%E9%94%80%E6%AF%81%E6%97%B6%E6%89%A7%E8%A1%8C%E5%9B%9E%E8%B0%83%22%2C%22id%22%3A%2239653265-d769-4c81-ab12-1805a6fb4f12%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A8%7D%5D%2C%22zIndex%22%3A9%7D%2C%7B%22html%22%3A%22reassemble%22%2C%22id%22%3A%22e12cfa26-c061-48f9-8f94-eb795c2fcd0a%22%2C%22children%22%3A%5B%7B%22html%22%3A%22%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95%E4%B8%93%E7%94%A8%EF%BC%8Chot%20reload%20%E6%97%B6%E8%B0%83%E7%94%A8%EF%BC%8Crelease%E6%A8%A1%E5%BC%8F%E4%B8%8B%E4%B8%8D%E4%BC%9A%E8%A2%AB%E8%B0%83%E7%94%A8%22%2C%22id%22%3A%2256a8ac11-8091-4e46-b63a-28acf4187bea%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A4%7D%5D%2C%22zIndex%22%3A5%7D%2C%7B%22html%22%3A%22didChangeDependencies%22%2C%22id%22%3A%22dab807bc-f182-4b5b-9aa1-0598f1f0a381%22%2C%22children%22%3A%5B%7B%22html%22%3A%22State%E5%AF%B9%E8%B1%A1%E4%BE%9D%E8%B5%96%E5%8F%91%E7%94%9F%E5%8F%98%E5%8C%96%E6%97%B6%E8%B0%83%E7%94%A8%22%2C%22id%22%3A%22a67b6207-e49a-443d-be4c-0e8c53ef498c%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A0%7D%5D%2C%22zIndex%22%3A1%7D%5D%2C%22zIndex%22%3A12%7D%5D%2C%22zIndex%22%3A14%7D%5D%2C%22zIndex%22%3A20%2C%22x%22%3A-301%2C%22y%22%3A-9%7D%5D%7D%2C%22viewportOption%22%3A%22WYSIWYG%22%2C%22viewportSetting%22%3A%7B%22zoom%22%3A1%2C%22tlCanvasPoint%22%3A%5B361%2C-66.875%2C1%5D%2C%22width%22%3A764%2C%22height%22%3A431%7D%2C%22search%22%3A%22WidgetStatelessWidget%E7%94%A8%E4%BA%8E%E4%B8%8D%E9%9C%80%E8%A6%81%E7%BB%B4%E6%8A%A4%E7%8A%B6%E6%80%81%E7%9A%84%E5%9C%BA%E6%99%AFStatefullWidget%E4%B8%80%E4%B8%AAStatefulWidget%20%E7%B1%BB%E4%BC%9A%E5%AF%B9%E5%BA%94%E4%B8%80%E4%B8%AAState%20%E7%B1%BB%E5%BD%93State%E8%A2%AB%E6%94%B9%E5%8F%98%E6%97%B6%EF%BC%8C%E6%89%8B%E5%8A%A8%E8%B0%83%E7%94%A8setState()%20%E6%96%B9%E6%B3%95%E9%80%9A%E7%9F%A5Flutter%EF%BC%8CFlutter%E4%BC%9A%E9%87%8D%E6%96%B0%E8%B0%83%E7%94%A8buildState%E4%B8%A4%E4%B8%AA%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7%EF%BC%9Awidget%EF%BC%8C%E5%8D%B3%E4%B8%8E%E5%AE%83%E5%85%B3%E8%81%94%E7%9A%84StatefulWidget%E7%9A%84%E5%AE%9E%E4%BE%8B%EF%BC%8Ccontext%20%E5%8D%B3%20BuildContextState%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9FinitState%E3%80%90%E5%B8%B8%E7%94%A8%E3%80%91%E7%94%A8%E4%BA%8E%E7%8A%B6%E6%80%81%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%81%E8%AE%A2%E9%98%85%E4%BA%8B%E4%BB%B6%E9%80%9A%E7%9F%A5didUpdateWidget%E9%87%8D%E6%96%B0%E6%9E%84%E5%BB%BA%E6%97%B6%EF%BC%8C%E4%BC%9A%E6%A3%80%E6%B5%8BWidget%E5%90%8C%E4%B8%80%E4%BD%8D%E7%BD%AE%E7%9A%84%E6%96%B0%E6%97%A7%E8%8A%82%E7%82%B9%EF%BC%8C%E9%9C%80%E8%A6%81%E6%9B%B4%E6%96%B0%E6%97%B6%E4%BC%9A%E8%B0%83%E7%94%A8deactivate%E5%AF%B9%E8%B1%A1%E8%A2%AB%E7%A7%BB%E9%99%A4%E6%97%B6%EF%BC%8C%E4%BC%9A%E8%B0%83%E7%94%A8%E5%9B%9E%E8%B0%83%EF%BC%8C%E4%B8%80%E4%BA%9B%E5%9C%BA%E6%99%AF%E4%B8%8B%E4%BC%9A%E9%87%8D%E6%96%B0%E6%8F%92%E5%88%B0%E6%A0%91%E4%B8%AD%EF%BC%8C%E6%B2%A1%E6%9C%89%E7%A7%BB%E9%99%A4%E6%B2%A1%E6%9C%89%E9%87%8D%E6%96%B0%E6%8F%92%E5%85%A5%EF%BC%8C%E5%88%99%E4%BC%9A%E7%B4%A7%E6%8E%A5%E7%9D%80%E8%B0%83%E7%94%A8dispose()dispose%E3%80%90%E5%B8%B8%E7%94%A8%E3%80%91State%E5%AF%B9%E8%B1%A1%E8%A2%AB%E6%B0%B8%E4%B9%85%E9%94%80%E6%AF%81%E6%97%B6%E6%89%A7%E8%A1%8C%E5%9B%9E%E8%B0%83reassemble%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95%E4%B8%93%E7%94%A8%EF%BC%8Chot%20reload%20%E6%97%B6%E8%B0%83%E7%94%A8%EF%BC%8Crelease%E6%A8%A1%E5%BC%8F%E4%B8%8B%E4%B8%8D%E4%BC%9A%E8%A2%AB%E8%B0%83%E7%94%A8didChangeDependenciesState%E5%AF%B9%E8%B1%A1%E4%BE%9D%E8%B5%96%E5%8F%91%E7%94%9F%E5%8F%98%E5%8C%96%E6%97%B6%E8%B0%83%E7%94%A8%22%2C%22src%22%3A%22https%3A%2F%2Fintranetproxy.alipay.com%2Fskylark%2Flark%2F0%2F2020%2Fsvg%2F244212%2F1585218751366-48cca93c-5958-4c28-aeac-79f9ccd6640e.svg%22%2C%22__height%22%3A413%2C%22graphicsBBox%22%3A%7B%22x%22%3A-301%2C%22y%22%3A-148.375%2C%22width%22%3A1036%2C%22height%22%3A470%7D%2C%22id%22%3A%22fgRJ2%22%2C%22height%22%3A413%7D\"></card><p data-lake-id=\"070020a572077cee2693b205c0a2f486\" id=\"070020a572077cee2693b205c0a2f486\"><span data-lake-id=\"u0ab6cca1\" id=\"u0ab6cca1\">State 生命周期如下：</span></p><p data-lake-id=\"62ae66d26fdf624068dde60a7fe07791\" id=\"62ae66d26fdf624068dde60a7fe07791\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F246478%2F1585315909919-667063b1-e430-4c48-99d0-d0c094d2eb57.png%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A682%2C%22height%22%3A845%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A39605%2C%22originWidth%22%3A701%2C%22originHeight%22%3A869%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22ZNdT0%22%7D\"></card></p><h4 data-lake-id=\"edJVp\" id=\"edJVp\"><span data-lake-id=\"ue51cacb7\" id=\"ue51cacb7\">2. Text、TextSpan、WidgetSpan</span></h4><ul list=\"ud8c5eba0\"><li fid=\"u38664078\" data-lake-id=\"8f4bb35e9560d6528489d1b7a4cff1f9\" id=\"8f4bb35e9560d6528489d1b7a4cff1f9\"><span data-lake-id=\"ud963c6ec\" id=\"ud963c6ec\">Text 显示文字</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22Text(%5Cn%5Ct%5C%22Hello%20World%5C%22%2C%5Cn%20%20textAlign%3A%20TextAlign.left%2C%5Cn%20%20maxLines%3A%201%2C%5Cn%20%20overflow%3A%20TextOverflow.ellipise%2C%5Cn%20%20style%3A%20TextStyle(%5Cn%20%20%5Ctcolor%3A%20Colors.blue%2C%5Cn%20%20%20%20fontSize%3A%2010%2C%5Cn%20%20%20%20...%5Cn%20%20)%5Cn)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22JIziT%22%7D\"></card><p data-lake-id=\"0589c3d41f5fe4fa86186c13c88f164a\" id=\"0589c3d41f5fe4fa86186c13c88f164a\"><br></p><ul list=\"u336ae7dc\"><li fid=\"ue582e598\" data-lake-id=\"0fdde3020af0782cc076f3de0af779b2\" id=\"0fdde3020af0782cc076f3de0af779b2\"><span data-lake-id=\"ue09a3538\" id=\"ue09a3538\">实际开发过程中，还会有一个Text不同部分安装不同样式显示，可以用TextSpan</span></li></ul><p data-lake-id=\"4132330592e4e1276a2fbab4c7ea9111\" id=\"4132330592e4e1276a2fbab4c7ea9111\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22Text.rich(%5Cn%20%20TextSpan(%5Cn%20%20%20%20children%3A%20%5B%5Cn%20%20%20%20%20%20TextSpan(%5Cn%20%20%20%20%20%20%20%20text%3A%20'Title'%2C%5Cn%20%20%20%20%20%20%20%20style%3A%20TextStyle(%5Cn%20%20%20%20%20%20%20%20%5Ctcolor%3A%20Color(0xff000000)%2C%5Cn%20%20%20%20%20%20%20%20%20%20fontWeight%3A%20bold%2C%5Cn%20%20%20%20%20%20%20%20)%5Cn%20%20%20%20%20%20)%2C%5Cn%20%20%20%20%20%20TextSpan(%5Cn%20%20%20%20%20%20%5Cttext%3A%20'description'%2C%5Cn%20%20%20%20%20%20%20%20style%3A%20TextStyle(%5Cn%20%20%20%20%20%20%20%20%20%20color%3A%20Colors.blue%2C%5Cn%20%20%20%20%20%20%20%20)%5Cn%20%20%20%20%20%20)%2C%5Cn%20%20%20%20%20%20%2F%2F%20WidgetSpan%20%E5%8F%AF%E4%BB%A5%E5%AE%9E%E7%8E%B0%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0%E7%9A%84%E6%95%88%E6%9E%9C%5Cn%20%20%20%20%20%20WidgetSpan(%5Cn%20%20%20%20%20%20%5Ctchild%3A%20Container(%5Cn%20%20%20%20%20%20%20%20%5Ct...%5Cn%20%20%20%20%20%20%20%20)%5Cn%20%20%20%20%20%20)%5Cn%20%20%20%20%5D%5Cn%5Ct)%5Cn)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22c1ndF%22%7D\"></card><p data-lake-id=\"7886cb9df76f103256c68b5189d2ae64\" id=\"7886cb9df76f103256c68b5189d2ae64\"><br></p><h4 data-lake-id=\"STTW5\" id=\"STTW5\"><span data-lake-id=\"u8e02ef18\" id=\"u8e02ef18\">3. Button、Image</span></h4><ul list=\"ud8cf6572\"><li fid=\"u18d09bc4\" data-lake-id=\"5fab3555e0ef9d22d7b704e5989d51cd\" id=\"5fab3555e0ef9d22d7b704e5989d51cd\"><span data-lake-id=\"u6ca341e8\" id=\"u6ca341e8\">Button </span></li></ul><p data-lake-id=\"89c2e5a671d97d3ff406a9081568feb5\" id=\"89c2e5a671d97d3ff406a9081568feb5\" style=\"text-indent: 2em\"><span data-lake-id=\"ub518e324\" id=\"ub518e324\">Flutter 提供了几种样式的Button，也支持自定义外观</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22RaisedButton(%5Cn%20%20child%3A%20Text(%5C%22normal%5C%22)%2C%5Cn%20%20onPressed%3A%20()%20%7B%7D%2C%5Cn)%3B%5Cn%2F%2F%20%E6%89%81%E5%B9%B3%E6%8C%89%E9%92%AE%5CnFlatButton(%5Cn%20%20child%3A%20Text(%5C%22normal%5C%22)%2C%5Cn%20%20onPressed%3A%20()%20%7B%7D%2C%5Cn)%5Cn%2F%2F%20%E9%BB%98%E8%AE%A4%E6%9C%89%E4%B8%80%E4%B8%AA%E8%BE%B9%E6%A1%86%5CnOutlineButton(%5Cn%20%20child%3A%20Text(%5C%22normal%5C%22)%2C%5Cn%20%20onPressed%3A%20()%20%7B%7D%2C%5Cn)%5Cn%2F%2F%20icon%20%E6%8C%89%E9%92%AE%5CnIconButton(%5Cn%20%20icon%3A%20Icon(Icons.thumb_up)%2C%5Cn%20%20onPressed%3A%20()%20%7B%7D%2C%5Cn)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22F0BOl%22%7D\"></card><p data-lake-id=\"6218ac6bb21d072cfe79339bbde96623\" id=\"6218ac6bb21d072cfe79339bbde96623\"><br></p><ul list=\"uc50cf057\"><li fid=\"u26d6d033\" data-lake-id=\"89aa61804ca4eee3f1589927e014c4e4\" id=\"89aa61804ca4eee3f1589927e014c4e4\"><span data-lake-id=\"u6fc34485\" id=\"u6fc34485\">Image</span></li></ul><p data-lake-id=\"2f631bf817158f69ac32769f0e0d6b09\" id=\"2f631bf817158f69ac32769f0e0d6b09\" style=\"text-indent: 2em\"><span data-lake-id=\"ua0aad5df\" id=\"ua0aad5df\">Image组件用来显示图片，数据源可以是 assets、文件、网络</span></p><p data-lake-id=\"e78191a2209348f99829d205c493ef03\" id=\"e78191a2209348f99829d205c493ef03\" style=\"text-indent: 2em\"><span data-lake-id=\"uef7295db\" id=\"uef7295db\">Image 对加载过的图片会有缓存（内存），默认缓存数量是1000，最大缓存空间是100M</span></p><p data-lake-id=\"134624b0cf2f7c3029400f175c6a68b7\" id=\"134624b0cf2f7c3029400f175c6a68b7\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22%2F%2F%20%E5%8A%A0%E8%BD%BD%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%5CnImage(%5Cn%5Ctimage%3A%20AssetImage('assets%2Fimages%2F3.0x%2Fkaola.png')%2C%5Cn%20%20width%3A%20100%2C%5Cn)%5Cn%2F%2F%20%E5%BF%AB%E6%8D%B7%5CnImage.assets(%5Cn%20%20'assets%2Fimages%2F3.0x%2Fkaola.png'%2C%5Cn%20%20width%3A%20100%2C%5Cn)%5Cn%5Cn%2F%2F%20%E5%8A%A0%E8%BD%BD%E7%BD%91%E7%BB%9C%E5%9B%BE%E7%89%87%5Cn%5CnImage(%5Cn%5Ctimage%3A%20NetworkImage('%24imageUrl')%2C%5Cn%20%20width%3A%20100.0%5Cn)%5Cn%2F%2F%20%E5%BF%AB%E6%8D%B7%5CnImage.network(%5Cn%5Ct'%24imageUrl'%2C%5Cn%20%20width%3A%20100.0%2C%5Cn)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22SjlEE%22%7D\"></card><p data-lake-id=\"b2172e2db01f93d6ca8ccf0f8068770e\" id=\"b2172e2db01f93d6ca8ccf0f8068770e\"><br></p><h4 data-lake-id=\"alrIu\" id=\"alrIu\"><span data-lake-id=\"u2e67b1b0\" id=\"u2e67b1b0\">3. 表单、输入框、单选、复选</span></h4><p data-lake-id=\"23eb41a88f34a46b1b028122dd81c0f1\" id=\"23eb41a88f34a46b1b028122dd81c0f1\"><br></p><h4 data-lake-id=\"OHqpN\" id=\"OHqpN\"><span data-lake-id=\"u4441af4d\" id=\"u4441af4d\">4. 布局组件</span></h4><ul list=\"ua123af99\"><li fid=\"u443683e1\" data-lake-id=\"75e4b5e8986f3a58ae77ab068c0d0af0\" id=\"75e4b5e8986f3a58ae77ab068c0d0af0\"><span data-lake-id=\"u80d9abda\" id=\"u80d9abda\">线性布局：Row、Column</span></li><li fid=\"u443683e1\" data-lake-id=\"3c7d60ea60aba7f18c67972595f2f17d\" id=\"3c7d60ea60aba7f18c67972595f2f17d\"><span data-lake-id=\"uf5e0b2ef\" id=\"uf5e0b2ef\">弹性布局：Flex、Expanded</span></li><li fid=\"u443683e1\" data-lake-id=\"6133439882425aee1740a591cd926a07\" id=\"6133439882425aee1740a591cd926a07\"><span data-lake-id=\"uc60225cf\" id=\"uc60225cf\">流式布局：Wrap、Flow</span></li><li fid=\"u443683e1\" data-lake-id=\"c99d6984b1bfbc789c9ed8604386c886\" id=\"c99d6984b1bfbc789c9ed8604386c886\"><span data-lake-id=\"ue675000c\" id=\"ue675000c\">层叠布局（绝对定位）：Stack、Position</span></li><li fid=\"u443683e1\" data-lake-id=\"ffbbdcec8a9ee44b34de9acf7438a7f7\" id=\"ffbbdcec8a9ee44b34de9acf7438a7f7\"><span data-lake-id=\"ufa942eca\" id=\"ufa942eca\">对齐：Align</span></li></ul><p data-lake-id=\"b84f1606564fbfaba8f4fba68badf441\" id=\"b84f1606564fbfaba8f4fba68badf441\"><br></p><h4 data-lake-id=\"exdHa\" id=\"exdHa\"><span data-lake-id=\"u186ebcc0\" id=\"u186ebcc0\">5. 容器类组件</span></h4><ul list=\"u70baa5a6\"><li fid=\"u397ef10e\" data-lake-id=\"555e1aee7a157a41af3fd0fc444f6dd4\" id=\"555e1aee7a157a41af3fd0fc444f6dd4\"><span data-lake-id=\"u32e3e094\" id=\"u32e3e094\">Container 类似 div</span></li></ul><p data-lake-id=\"c3ca689df3e8d4392d92cfd53004631f\" id=\"c3ca689df3e8d4392d92cfd53004631f\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22%2F%2F%20%E5%85%B6%E4%B8%AD%20decoration%20constraints%20transform%20padding%20%E9%83%BD%E6%9C%89%E5%AF%B9%E5%BA%94%E7%9A%84%E5%8D%95%E7%8B%AC%E7%9A%84Box%E7%B1%BB%5CnContainer(%5Cn%20%20width%3A%20100%2C%5Cn%20%20height%3A%20100%2C%5Cn%20%20color%3A%20Colors.white%2C%20%2F%2F%20%E8%83%8C%E6%99%AF%E8%89%B2%5Cn%20%20padding%3A%20EdgeInsets.fromLTRB(20%2C%2010%2C%2020%2C%2010)%2C%5Cn%20%20margin%3A%20EdgeInsets.fromLTRB(20%2C%2010%2C%2020%2C%2010)%2C%5Cn%20%20%2F%2F%20%E8%83%8C%E6%99%AF%E8%A3%85%E9%A5%B0%EF%BC%88%E5%9C%86%E8%A7%92%E3%80%81%E8%83%8C%E6%99%AF%E8%89%B2%E3%80%81boxShadow%E7%AD%89%EF%BC%89%5Cn%5Ctdecoration%3A%20BoxDecoration(%5Cn%20%20%20%20borderRadius%3A%20BorderRadius.all(Radius.circular(20))%2C%5Cn%20%20%20%20color%3A%20Color(0xffffe030)%2C%5Cn%20%20)%2C%5Cn%20%20%2F%2F%20%E5%A4%A7%E5%B0%8F%E9%99%90%E5%88%B6%5Cn%20%20constraints%3A%20BoxConstraints(%5Cn%20%20%20%20maxWidth%3A%2050%2C%5Cn%20%20%20%20minWidth%3A%2050%5Cn%20%20)%2C%5Cn%20%20%2F%2F%20%E5%8F%98%E6%8D%A2%5Cn%20%20transform%3A%20Matrix4.translationValues(20%2C%200%2C%200)%2C%5Cn%20%20child%3A%20Text(%5Cn%20%20%20%20'%24labelValue'%2C%5Cn%20%20%20%20style%3A%20TextStyle(%5Cn%20%20%20%20%20%20fontSize%3A%2013%2C%5Cn%20%20%20%20%20%20fontWeight%3A%20FontWeight.w500%2C%5Cn%20%20%20%20%20%20color%3A%20Colors.black%2C%5Cn%20%20%20%20)%2C%5Cn%20%20)%2C%5Cn)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22BvuPb%22%7D\"></card><p data-lake-id=\"910a146a5db09dcfe150989260695d77\" id=\"910a146a5db09dcfe150989260695d77\"><br></p><h4 data-lake-id=\"VZnjN\" id=\"VZnjN\"><span data-lake-id=\"u2f4ff40f\" id=\"u2f4ff40f\">6. 可滚动组件</span></h4><ul list=\"u824c14a1\"><li fid=\"ua40ce29d\" data-lake-id=\"fe4583b9ec2fd1d3db7a072e961d60b7\" id=\"fe4583b9ec2fd1d3db7a072e961d60b7\"><span data-lake-id=\"u5ce4a1df\" id=\"u5ce4a1df\">ListView</span></li><li fid=\"ua40ce29d\" data-lake-id=\"cc1219780decebaf0c29a5482d6e0c20\" id=\"cc1219780decebaf0c29a5482d6e0c20\"><span data-lake-id=\"u0f533c18\" id=\"u0f533c18\">GridView</span></li><li fid=\"ua40ce29d\" data-lake-id=\"2f6e24ba5270c6a4de6e16de7681f3c9\" id=\"2f6e24ba5270c6a4de6e16de7681f3c9\"><span data-lake-id=\"uc4a192b3\" id=\"uc4a192b3\">SingleChildScrollView</span></li><li fid=\"ua40ce29d\" data-lake-id=\"76f46904e3e2add0ad01ec49e04111aa\" id=\"76f46904e3e2add0ad01ec49e04111aa\"><span data-lake-id=\"u81204edc\" id=\"u81204edc\">CustomScrollView</span></li></ul><h2 data-lake-id=\"V1RFk\" id=\"V1RFk\"><span data-lake-id=\"u229a0e43\" id=\"u229a0e43\">四、路由</span></h2><h4 data-lake-id=\"bZYp7\" id=\"bZYp7\"><span data-lake-id=\"u0bb5bfdd\" id=\"u0bb5bfdd\">1. MaterialPageRoute</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22Navigator.push(%20context%2C%5Cn%20%20MaterialPageRoute(%5Cn%20%20%20%20builder%3A%20(context)%20%7B%5Cn%20%20%20%20%20%20return%20NewRoute()%3B%20%2F%2F%20page%5Cn%20%20%20%20%7D%2C%5Cn%20%20%20%20%2F%2F%20%E5%8C%85%E5%90%AB%E8%B7%AF%E7%94%B1%E4%BF%A1%E6%81%AF%EF%BC%8Cname%EF%BC%8Carguments%5Cn%20%20%20%20settings%3A%20RouteSettings(%5Cn%20%20%20%20%5Ctname%3A%20'xx'%2C%5Cn%20%20%20%20%20%20arguments%3A%20%7B'xx'%3A%20'xxx'%7D%5Cn%20%20%20%20)%2C%5Cn%20%20%20%20maintainState%3A%20true%2C%20%2F%2F%20%E9%BB%98%E8%AE%A4%E8%BF%9B%E5%85%A5%E4%B8%8B%E4%B8%AA%E8%B7%AF%E7%94%B1%E6%97%B6%EF%BC%8C%E5%8E%9F%E6%9D%A5%E8%B7%AF%E7%94%B1%E4%BB%8D%E7%84%B6%E4%BC%9A%E4%BF%9D%E5%AD%98%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%5Cn%20%20%20%20fullscreenDialog%3A%20false%2C%20%2F%2F%20%E6%98%AF%E5%90%A6%E6%98%AF%E5%85%A8%E5%B1%8F%E5%AF%B9%E8%AF%9D%E6%A1%86%5Cn%20%20)%5Cn)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22fl7NU%22%7D\"></card><p data-lake-id=\"814b2dff080c89c5c608eb8f762bed17\" id=\"814b2dff080c89c5c608eb8f762bed17\"><br></p><h4 data-lake-id=\"u39oY\" id=\"u39oY\"><span data-lake-id=\"u5a9357d0\" id=\"u5a9357d0\">2. Navigator</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22Navigator.push(BuildContext%20context%2C%20Route%20route)%3B%5CnNavigator.pop(BuildContext%20context%2C%20%5Bresult%5D)%3B%5Cn%5Cnvar%20result%20%3D%20await%20Navigator.push(context%2C%20xxx)%3B%5CnNavigator.pop(context%2C%20'%E8%BF%94%E5%9B%9E%E5%80%BCxxx')%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22RKf9N%22%7D\"></card><p data-lake-id=\"acb2e4ad13b72f4c85efaf5b1940ec32\" id=\"acb2e4ad13b72f4c85efaf5b1940ec32\"><br></p><h4 data-lake-id=\"DJZnx\" id=\"DJZnx\"><span data-lake-id=\"uc0392225\" id=\"uc0392225\">3. 命名路由</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22MaterialApp(%5Cn%20%20title%3A%20'Flutter%20Demo'%2C%5Cn%20%20theme%3A%20ThemeData(%5Cn%20%20%20%20primarySwatch%3A%20Colors.blue%2C%5Cn%20%20)%2C%5Cn%20%20%2F%2F%E6%B3%A8%E5%86%8C%E8%B7%AF%E7%94%B1%E8%A1%A8%5Cn%20%20routes%3A%7B%5Cn%20%20%20%5C%22new_page%5C%22%3A(context)%20%3D%3E%20NewRoute()%2C%5Cn%20%20%20%20...%20%2F%2F%20%E7%9C%81%E7%95%A5%E5%85%B6%E5%AE%83%E8%B7%AF%E7%94%B1%E6%B3%A8%E5%86%8C%E4%BF%A1%E6%81%AF%5Cn%20%20%7D%20%2C%5Cn%20%20home%3A%20MyHomePage(title%3A%20'Flutter%20Demo%20Home%20Page')%2C%5Cn)%3B%5Cn%5Cn%2F%2F%20%E6%89%93%E5%BC%80%E5%91%BD%E5%90%8D%E8%B7%AF%E7%94%B1%20%5CnNavigator.pushNamed(context%2C%20'new_page'%2C%20arguments%3A%20'xxxx')%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22KktDG%22%7D\"></card><p data-lake-id=\"9b748adfd93053d0dd517d7d608092c3\" id=\"9b748adfd93053d0dd517d7d608092c3\"><br></p><h4 data-lake-id=\"QvYRh\" id=\"QvYRh\"><span data-lake-id=\"uabd7d937\" id=\"uabd7d937\">4. 命名路由Hook</span></h4><blockquote data-lake-id=\"u8d02157d\" id=\"u8d02157d\"><p data-lake-id=\"06f5cf5a1b9e9a63c99b5556fb478bfc\" id=\"06f5cf5a1b9e9a63c99b5556fb478bfc\"><span data-lake-id=\"u2739df3a\" id=\"u2739df3a\">如果指定的路由名在路由表中已注册，则会调用路由表中的builder函数来生成路由组件；</span></p><p data-lake-id=\"59a28301a0f1d14585f4a524a76cff34\" id=\"59a28301a0f1d14585f4a524a76cff34\"><span data-lake-id=\"udebfc2b0\" id=\"udebfc2b0\">如果路由表中没有注册，才会调用onGenerateRoute来生成路</span></p><p data-lake-id=\"33e448f980b7932ea34a061f59cbb6b6\" id=\"33e448f980b7932ea34a061f59cbb6b6\"><br></p></blockquote><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22MaterialApp(%5Cn%20%20...%20%2F%2F%E7%9C%81%E7%95%A5%E6%97%A0%E5%85%B3%E4%BB%A3%E7%A0%81%5Cn%20%20onGenerateRoute%3A(RouteSettings%20settings)%7B%5Cn%20%20%20%20%20%20return%20MaterialPageRoute(builder%3A%20(context)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20String%20routeName%20%3D%20settings.name%3B%5Cn%20%20%20%20%20%20%20%2F%2F%20%E5%A6%82%E6%9E%9C%E8%AE%BF%E9%97%AE%E7%9A%84%E8%B7%AF%E7%94%B1%E9%A1%B5%E9%9C%80%E8%A6%81%E7%99%BB%E5%BD%95%EF%BC%8C%E4%BD%86%E5%BD%93%E5%89%8D%E6%9C%AA%E7%99%BB%E5%BD%95%EF%BC%8C%E5%88%99%E7%9B%B4%E6%8E%A5%E8%BF%94%E5%9B%9E%E7%99%BB%E5%BD%95%E9%A1%B5%E8%B7%AF%E7%94%B1%EF%BC%8C%5Cn%20%20%20%20%20%20%20%2F%2F%20%E5%BC%95%E5%AF%BC%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%EF%BC%9B%E5%85%B6%E5%AE%83%E6%83%85%E5%86%B5%E5%88%99%E6%AD%A3%E5%B8%B8%E6%89%93%E5%BC%80%E8%B7%AF%E7%94%B1%E3%80%82%5Cn%20%20%20%20%20%7D%5Cn%20%20%20)%3B%5Cn%20%20%7D%5Cn)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22su9ys%22%7D\"></card><p data-lake-id=\"e066f53dcc85db6ec020a3c576412379\" id=\"e066f53dcc85db6ec020a3c576412379\"><br></p><h2 data-lake-id=\"O0cHE\" id=\"O0cHE\"><span data-lake-id=\"u0629d031\" id=\"u0629d031\">五、网络请求</span></h2><h4 data-lake-id=\"2CCRW\" id=\"2CCRW\"><span data-lake-id=\"u125585bd\" id=\"u125585bd\">1. Dio库</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22dependencies%3A%5Cn%20%20dio%3A%203.x%20%23latest%20version%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22cjFrV%22%7D\"></card><p data-lake-id=\"38d4ad6f3bf0d09084770bb780956d05\" id=\"38d4ad6f3bf0d09084770bb780956d05\"><br></p><ul list=\"u048eeda2\"><li fid=\"u0e7f8b76\" data-lake-id=\"9d35be33aa1591dc7b00952c0218658f\" id=\"9d35be33aa1591dc7b00952c0218658f\"><span data-lake-id=\"u56b914e0\" id=\"u56b914e0\">基础使用</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22%2F%2F%20get%20%E8%AF%B7%E6%B1%82%5CnResponse%20res%20%3D%20await%20Dio().get('https%3A%2F%2Fwww.kaola.com'%2C%20queryParameters%3A%20%7B%5Cn%5Ct%5C%22xx%5C%22%3A%20%5C%22xx%5C%22%5Cn%7D)%3B%5Cn%2F%2F%20post%20%E8%AF%B7%E6%B1%82%5CnResponse%20res%20%3D%20await%20Dio().post('https%3A%2F%2Fwwww.kaola.com%2Fapi'%2C%20data%3A%20%7B%5Cn%5Ct'xx'%3A%20'xx'%5Cn%7D)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22ODz6z%22%7D\"></card><p data-lake-id=\"b2aca5030321248bae26dcd825de1708\" id=\"b2aca5030321248bae26dcd825de1708\"><br></p><ul list=\"uadb8104f\"><li fid=\"u1b97bd82\" data-lake-id=\"bc9b84b7b2eb97257ebebfeffbfe94af\" id=\"bc9b84b7b2eb97257ebebfeffbfe94af\"><span data-lake-id=\"ua15b7a34\" id=\"ua15b7a34\">BaseOptions</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22Dio%20dio%20%3D%20Dio(BaseOptions(%5Cn%20%20baseUrl%3A%20'https%3A%2F%2Fmocks.alibaba-inc.com%2Fmock%2Fkaola-like'%2C%5Cn%20%20%2F%2F%20....%5Cn))%3B%5Cnawait%20%20dio.get('%2Fxx')%3B%5Cn%5Cnawait%20dio.post('%2Fxx')%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22k81HK%22%7D\"></card><p data-lake-id=\"e52c260f1cd018f8129655f61be126c7\" id=\"e52c260f1cd018f8129655f61be126c7\"><br></p><h4 data-lake-id=\"27Q4r\" id=\"27Q4r\"><span data-lake-id=\"u7398c6e3\" id=\"u7398c6e3\">2. 处理cookie</span></h4><p data-lake-id=\"132fde0b0af6b2c4a3c8a00e48d11336\" id=\"132fde0b0af6b2c4a3c8a00e48d11336\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22yaml%22%2C%22code%22%3A%22%23%20%E4%BE%9D%E8%B5%96%5Cndio_cookie_manager%3A%20%5E1.0.0%5Cncookie_jar%3A%20%5E1.0.1%5Cn%23%20%E5%BC%95%E5%85%A5%E8%AF%A5%E4%BE%9D%E8%B5%96%E5%90%8E%EF%BC%8Cios%E6%A8%A1%E6%8B%9F%E5%99%A8%E9%9C%80%E8%A6%81%E9%87%8D%E6%96%B0%20build%EF%BC%8C%E5%8F%AF%E8%83%BD%E9%9C%80%E8%A6%81%E8%BF%9Bios%E7%9B%AE%E5%BD%95%E6%89%A7%E8%A1%8C%20pod%20install%5Cnpath_provider%3A%20%5E1.6.5%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22fmVzl%22%7D\"></card><p data-lake-id=\"64cc28c5970ee4647ffa86e629020245\" id=\"64cc28c5970ee4647ffa86e629020245\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22Dio%20dio%20%3D%20Dio(BaseOptions(%5Cn%20%20baseUrl%3A%20'https%3A%2F%2Fmocks.alibaba-inc.com%2Fmock%2Fkaola-like'%2C%5Cn%20%20%2F%2F%20....%5Cn))%3B%5CnDirectory%20appDocDir%20%3D%20await%20getApplicationDocumentsDirectory()%3B%5CnString%20appDocPath%20%3D%20appDocDir.path%3B%5Cnvar%20cookieJar%20%3D%20PersistCookieJar(dir%3A%20'%24appDocPath%2F.cookies%2F')%3B%5Cn%5Cndio.interceptors.add(CookieManager(cookieJar))%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22W4T7V%22%7D\"></card><p data-lake-id=\"ba5319269219ea407ac45529cce8bd0b\" id=\"ba5319269219ea407ac45529cce8bd0b\"><br></p><h4 data-lake-id=\"WtYha\" id=\"WtYha\"><span data-lake-id=\"ub8e4c9c3\" id=\"ub8e4c9c3\">3. json 转 model</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22class%20User%20%7B%5Cn%20%20final%20String%20name%3B%5Cn%20%20final%20String%20email%3B%5Cn%5Cn%20%20User(this.name%2C%20this.email)%3B%5Cn%5Cn%20%20User.fromJson(Map%3CString%2C%20dynamic%3E%20json)%5Cn%20%20%20%20%20%20%3A%20name%20%3D%20json%5B'name'%5D%2C%5Cn%20%20%20%20%20%20%20%20email%20%3D%20json%5B'email'%5D%3B%5Cn%5Cn%20%20Map%3CString%2C%20dynamic%3E%20toJson()%20%3D%3E%5Cn%20%20%20%20%3CString%2C%20dynamic%3E%7B%5Cn%20%20%20%20%20%20'name'%3A%20name%2C%5Cn%20%20%20%20%20%20'email'%3A%20email%2C%5Cn%20%20%20%20%7D%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%2293zGL%22%7D\"></card><p data-lake-id=\"e7db5d8a4c63e33008159228f82209c2\" id=\"e7db5d8a4c63e33008159228f82209c2\"><br></p><h2 data-lake-id=\"sIx5F\" id=\"sIx5F\"><span data-lake-id=\"uaee04495\" id=\"uaee04495\">六、持久化存储</span></h2><p data-lake-id=\"12a23ae632346b797cfcaae28fbb83e7\" id=\"12a23ae632346b797cfcaae28fbb83e7\"><br></p><h4 data-lake-id=\"kLVqm\" id=\"kLVqm\"><span data-lake-id=\"u6a9f2fac\" id=\"u6a9f2fac\">1. SharedPreferences</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22yaml%22%2C%22code%22%3A%22%23%20%E5%BC%95%E5%85%A5%E8%AF%A5%E4%BE%9D%E8%B5%96%E5%90%8E%EF%BC%8Cios%E6%A8%A1%E6%8B%9F%E5%99%A8%E9%9C%80%E8%A6%81%E9%87%8D%E6%96%B0%20build%EF%BC%8C%E5%8F%AF%E8%83%BD%E9%9C%80%E8%A6%81%E8%BF%9Bios%E7%9B%AE%E5%BD%95%E6%89%A7%E8%A1%8C%20pod%20install%5Cnshared_preferences%3A%20%5E0.5.6%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22VexTA%22%7D\"></card><p data-lake-id=\"8e7dcee0e27a8c64fb81ba62c918ccb6\" id=\"8e7dcee0e27a8c64fb81ba62c918ccb6\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22%2F%2F%20key-value%20%E5%AD%98%E5%82%A8%5CnSharedPreferences%20_prefs%20%3D%20await%20SharedPreferences.getInstance()%3B%5Cn%2F%2F%20%E5%AD%98%20key%5Cnawiat%20_prefs.setString(key%2C%20value)%3B%5Cn%2F%2F%20%E8%AF%BB%20key%5CnString%20value%20%3D%20_prefs.getString(key)%3B%5Cn%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22P2a1q%22%7D\"></card><p data-lake-id=\"33e4d77e425e534c783575a670c954af\" id=\"33e4d77e425e534c783575a670c954af\"><br></p><h4 data-lake-id=\"AylVv\" id=\"AylVv\"><span data-lake-id=\"ubc353969\" id=\"ubc353969\">2. 文件操作</span></h4><p data-lake-id=\"03d37ff607f2bdb8736a4a7fd8dc837b\" id=\"03d37ff607f2bdb8736a4a7fd8dc837b\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22%2F%2F%20path_provider%5CnDirectory%20appDocDir%20%3D%20await%20getApplicationDocumentsDirectory()%3B%5Cn%20String%20appDocPath%20%3D%20appDocDir.path%3B%5CnFile%20file%20%3D%20new%20File('%24path%2Fcounter.txt')%3B%5Cn%5Cn%2F%2F%20%E8%AF%BB%5CnString%20contents%20%3D%20await%20file.readAsString()%3B%5Cn%2F%2F%20%E5%86%99%5Cnawait%20file.writeAsString()%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22kh3VD%22%7D\"></card><p data-lake-id=\"695bbb2d39775caf23d4ccbe9c093025\" id=\"695bbb2d39775caf23d4ccbe9c093025\"><br></p><h2 data-lake-id=\"1XIyD\" id=\"1XIyD\"><span data-lake-id=\"uf20af2a4\" id=\"uf20af2a4\">七、动画</span></h2><ul list=\"ue2cdf75a\"><li fid=\"ube18ec2d\" data-lake-id=\"c6f80cf75260bb2abf1291c155345434\" id=\"c6f80cf75260bb2abf1291c155345434\"><span data-lake-id=\"u179154cc\" id=\"u179154cc\">Animation: 主要用于保存动画插值和状态</span></li></ul><ul list=\"ue2cdf75a\" data-lake-indent=\"1\"><li fid=\"uc2c620e0\" data-lake-id=\"9b2ccb93bd40f736abb81746a0cb8c6c\" id=\"9b2ccb93bd40f736abb81746a0cb8c6c\"><span data-lake-id=\"ua3a28dd4\" id=\"ua3a28dd4\">addListener(): 帧监听器，每一帧都会被调用</span></li><li fid=\"uc2c620e0\" data-lake-id=\"35e04c24d08546c6e17ce5dc3d3956da\" id=\"35e04c24d08546c6e17ce5dc3d3956da\"><span data-lake-id=\"u8388b65e\" id=\"u8388b65e\">addStatusListener(): 状态改变监听器，动画开始、结束、正向或反向 时会调用状态改变监听器</span></li></ul><ul list=\"ue2cdf75a\" start=\"2\"><li fid=\"ube18ec2d\" data-lake-id=\"1a26c0bdb822da02b275e6b597c4c5fa\" id=\"1a26c0bdb822da02b275e6b597c4c5fa\"><span data-lake-id=\"ue9d9ab9a\" id=\"ue9d9ab9a\">Curve: 用来描述动画过程</span></li><li fid=\"ube18ec2d\" data-lake-id=\"47e5e5815552f4902ae005b7b70621e7\" id=\"47e5e5815552f4902ae005b7b70621e7\"><span data-lake-id=\"u67c7ed0f\" id=\"u67c7ed0f\">AnimationController: 用于控制动画，动画的启动 forward()、停止 stop()、反向播放reverse()</span></li></ul><p data-lake-id=\"cea2ca4136112596d2396650440cdb52\" id=\"cea2ca4136112596d2396650440cdb52\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22final%20AnimationController%20controller%20%3D%20new%20AnimationController(%5Cn%20%20%20%20duration%3A%20const%20Duration(milliseconds%3A%202000)%2C%20%5Cn%20%20%5Ctvsync%3A%20this%5Cn)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22qnOs1%22%7D\"></card><p data-lake-id=\"c42d0adaa81f530b7fff023cc2ff29c7\" id=\"c42d0adaa81f530b7fff023cc2ff29c7\"><br></p><h2 data-lake-id=\"4QriH\" id=\"4QriH\"><span data-lake-id=\"ue78d8c2a\" id=\"ue78d8c2a\">参考</span></h2><ul list=\"uae8a3d07\"><li fid=\"ub0a9cacb\" data-lake-id=\"5221944480adb36feb8ff499adc298e2\" id=\"5221944480adb36feb8ff499adc298e2\"><a href=\"https://book.flutterchina.club/intro.html\" target=\"_blank\" data-lake-id=\"u324bcaab\" id=\"u324bcaab\"><span data-lake-id=\"u04c5bcb2\" id=\"u04c5bcb2\">Flutter 实战</span></a></li><li fid=\"ub0a9cacb\" data-lake-id=\"cab84f1d055f286af4f79497099fa881\" id=\"cab84f1d055f286af4f79497099fa881\"><a href=\"https://flutter.dev\" target=\"_blank\" data-lake-id=\"ub5514dc2\" id=\"ub5514dc2\"><span data-lake-id=\"ub0d80617\" id=\"ub0d80617\">Flutter 官网</span></a></li><li fid=\"ub0a9cacb\" data-lake-id=\"832da0cb90de715ebad391584a37a7a3\" id=\"832da0cb90de715ebad391584a37a7a3\"><a href=\"https://pub.dev/\" target=\"_blank\" data-lake-id=\"u48312c57\" id=\"u48312c57\"><span data-lake-id=\"ud29854f9\" id=\"ud29854f9\">Flutter 仓库</span></a></li></ul>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"fixed\" /><meta name=\"paragraphSpacing\" content=\"relax\" /><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22rRUFq%22%7D\"></card><p data-lake-id=\"u9df2b98f\" id=\"u9df2b98f\"><span data-lake-id=\"u4938d29e\" id=\"u4938d29e\">tags:</span></p><ul list=\"ub49bcb6f\"><li fid=\"uddd46c2b\" data-lake-id=\"ueadc8077\" id=\"ueadc8077\"><span data-lake-id=\"ua1200a22\" id=\"ua1200a22\">flutter</span></li><li fid=\"uddd46c2b\" data-lake-id=\"u59b37da9\" id=\"u59b37da9\"><span data-lake-id=\"u58e6d791\" id=\"u58e6d791\">flutter 入门</span></li></ul><card type=\"block\" name=\"hr\" value=\"data:%7B%22id%22%3A%22vIOHD%22%7D\"></card><h2 data-lake-id=\"7ErDw\" id=\"7ErDw\"><span data-lake-id=\"u20f8e9fa\" id=\"u20f8e9fa\">一、HelloWorld</span></h2><p data-lake-id=\"e99bf216c651a936083a2e95f4e7b3f8\" id=\"e99bf216c651a936083a2e95f4e7b3f8\"><span data-lake-id=\"ub2cfb556\" id=\"ub2cfb556\">演示</span></p><h2 data-lake-id=\"pV05v\" id=\"pV05v\"><span data-lake-id=\"u0cb52e82\" id=\"u0cb52e82\">二、开发环境</span></h2><p data-lake-id=\"31dd40d1d5c04b2c8c9919cb677d78d5\" id=\"31dd40d1d5c04b2c8c9919cb677d78d5\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22bash%22%2C%22code%22%3A%22export%20PUB_HOSTED_URL%3Dhttps%3A%2F%2Fpub.flutter-io.cn%5Cnexport%20FLUTTER_STORAGE_BASE_URL%3Dhttps%3A%2F%2Fstorage.flutter-io.cn%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22KVwpY%22%7D\"></card><p data-lake-id=\"f6c47bb4eb5010a5d3ee5d76535cef21\" id=\"f6c47bb4eb5010a5d3ee5d76535cef21\"><br></p><p data-lake-id=\"ud47ce1e2\" id=\"ud47ce1e2\"><span data-lake-id=\"u1d9529c3\" id=\"u1d9529c3\">&lt;!-- more --&gt;</span></p><h2 data-lake-id=\"7UoCS\" id=\"7UoCS\"><span data-lake-id=\"ua85d4fa0\" id=\"ua85d4fa0\">三、基础组件</span></h2><h4 data-lake-id=\"fMSu6\" id=\"fMSu6\"><span data-lake-id=\"u0c7d6e7c\" id=\"u0c7d6e7c\">1. Widget</span></h4><p data-lake-id=\"4e3545af1d79617cde84a0e9178a0fd8\" id=\"4e3545af1d79617cde84a0e9178a0fd8\"><br></p><card type=\"block\" name=\"board\" value=\"data:%7B%22diagramData%22%3A%7B%22head%22%3A%7B%22version%22%3A%222.0.0%22%7D%2C%22body%22%3A%5B%7B%22id%22%3A%224a749c6b%22%2C%22html%22%3A%22Widget%22%2C%22type%22%3A%22mindmap%22%2C%22children%22%3A%5B%7B%22id%22%3A%228308b1b9%22%2C%22html%22%3A%22StatelessWidget%22%2C%22treeEdge%22%3A%7B%22stroke%22%3A%22%23A287E1%22%7D%2C%22children%22%3A%5B%7B%22html%22%3A%22%E7%94%A8%E4%BA%8E%E4%B8%8D%E9%9C%80%E8%A6%81%E7%BB%B4%E6%8A%A4%E7%8A%B6%E6%80%81%E7%9A%84%E5%9C%BA%E6%99%AF%22%2C%22id%22%3A%22b3c6cc4c-1bc3-4ee7-bce2-82f1464173ab%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A15%7D%5D%2C%22zIndex%22%3A16%7D%2C%7B%22html%22%3A%22StatefullWidget%22%2C%22layout%22%3A%7B%22quadrant%22%3A1%7D%2C%22treeEdge%22%3A%7B%22stroke%22%3A%22%23DE81C6%22%7D%2C%22id%22%3A%22b8261139-e31b-41e2-80a7-a4c2b0cdbdad%22%2C%22children%22%3A%5B%7B%22html%22%3A%22%E4%B8%80%E4%B8%AAStatefulWidget%20%E7%B1%BB%E4%BC%9A%E5%AF%B9%E5%BA%94%E4%B8%80%E4%B8%AAState%20%E7%B1%BB%22%2C%22id%22%3A%228d5efc62-4e8b-4874-8bdc-75f228e7e58b%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A18%7D%2C%7B%22html%22%3A%22%E5%BD%93State%E8%A2%AB%E6%94%B9%E5%8F%98%E6%97%B6%EF%BC%8C%E6%89%8B%E5%8A%A8%E8%B0%83%E7%94%A8setState()%20%E6%96%B9%E6%B3%95%E9%80%9A%E7%9F%A5Flutter%EF%BC%8CFlutter%E4%BC%9A%E9%87%8D%E6%96%B0%E8%B0%83%E7%94%A8build%22%2C%22id%22%3A%22588678c7-ab73-4a99-9f5d-06570f452f4f%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A17%7D%5D%2C%22zIndex%22%3A19%7D%2C%7B%22html%22%3A%22State%22%2C%22layout%22%3A%7B%22quadrant%22%3A1%7D%2C%22treeEdge%22%3A%7B%22stroke%22%3A%22%2369B1E4%22%7D%2C%22id%22%3A%22a44a66bd-230b-41d8-8852-aa8ef6cc3fbe%22%2C%22children%22%3A%5B%7B%22html%22%3A%22%E4%B8%A4%E4%B8%AA%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7%EF%BC%9Awidget%EF%BC%8C%E5%8D%B3%E4%B8%8E%E5%AE%83%E5%85%B3%E8%81%94%E7%9A%84StatefulWidget%E7%9A%84%E5%AE%9E%E4%BE%8B%EF%BC%8Ccontext%20%E5%8D%B3%20BuildContext%22%2C%22id%22%3A%222034682c-22d1-47bf-982d-9f2d98219188%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A13%7D%2C%7B%22html%22%3A%22State%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%22%2C%22id%22%3A%223cb4932b-5b3e-48be-b1fb-928ab0c72cb4%22%2C%22children%22%3A%5B%7B%22html%22%3A%22initState%22%2C%22id%22%3A%22abb41fae-38c0-415d-ad5e-6afee134ad99%22%2C%22children%22%3A%5B%7B%22html%22%3A%22%E3%80%90%E5%B8%B8%E7%94%A8%E3%80%91%E7%94%A8%E4%BA%8E%E7%8A%B6%E6%80%81%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%81%E8%AE%A2%E9%98%85%E4%BA%8B%E4%BB%B6%E9%80%9A%E7%9F%A5%22%2C%22id%22%3A%223b7abc62-e808-4e79-80f7-f16be3638408%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A2%7D%5D%2C%22zIndex%22%3A3%7D%2C%7B%22html%22%3A%22didUpdateWidget%22%2C%22id%22%3A%22d67d0dde-6cc5-4592-b752-bffbde23cbf2%22%2C%22children%22%3A%5B%7B%22html%22%3A%22%E9%87%8D%E6%96%B0%E6%9E%84%E5%BB%BA%E6%97%B6%EF%BC%8C%E4%BC%9A%E6%A3%80%E6%B5%8BWidget%E5%90%8C%E4%B8%80%E4%BD%8D%E7%BD%AE%E7%9A%84%E6%96%B0%E6%97%A7%E8%8A%82%E7%82%B9%EF%BC%8C%E9%9C%80%E8%A6%81%E6%9B%B4%E6%96%B0%E6%97%B6%E4%BC%9A%E8%B0%83%E7%94%A8%22%2C%22id%22%3A%22b1d343b5-a173-4255-aaa0-fed61877ae4a%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A6%7D%5D%2C%22zIndex%22%3A7%7D%2C%7B%22html%22%3A%22deactivate%22%2C%22id%22%3A%2240b86cc6-2922-4e64-afac-2b57a8bbdf05%22%2C%22children%22%3A%5B%7B%22html%22%3A%22%E5%AF%B9%E8%B1%A1%E8%A2%AB%E7%A7%BB%E9%99%A4%E6%97%B6%EF%BC%8C%E4%BC%9A%E8%B0%83%E7%94%A8%E5%9B%9E%E8%B0%83%EF%BC%8C%E4%B8%80%E4%BA%9B%E5%9C%BA%E6%99%AF%E4%B8%8B%E4%BC%9A%E9%87%8D%E6%96%B0%E6%8F%92%E5%88%B0%E6%A0%91%E4%B8%AD%EF%BC%8C%3Cdiv%3E%E6%B2%A1%E6%9C%89%E7%A7%BB%E9%99%A4%E6%B2%A1%E6%9C%89%E9%87%8D%E6%96%B0%E6%8F%92%E5%85%A5%EF%BC%8C%E5%88%99%E4%BC%9A%E7%B4%A7%E6%8E%A5%E7%9D%80%E8%B0%83%E7%94%A8dispose()%3C%2Fdiv%3E%22%2C%22id%22%3A%22ff84a3e6-20f9-4ef0-acda-b1c86159a3cd%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A10%7D%5D%2C%22zIndex%22%3A11%7D%2C%7B%22html%22%3A%22dispose%22%2C%22id%22%3A%2233c0f378-2568-412f-844d-307fb78de392%22%2C%22children%22%3A%5B%7B%22html%22%3A%22%E3%80%90%E5%B8%B8%E7%94%A8%E3%80%91State%E5%AF%B9%E8%B1%A1%E8%A2%AB%E6%B0%B8%E4%B9%85%E9%94%80%E6%AF%81%E6%97%B6%E6%89%A7%E8%A1%8C%E5%9B%9E%E8%B0%83%22%2C%22id%22%3A%2239653265-d769-4c81-ab12-1805a6fb4f12%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A8%7D%5D%2C%22zIndex%22%3A9%7D%2C%7B%22html%22%3A%22reassemble%22%2C%22id%22%3A%22e12cfa26-c061-48f9-8f94-eb795c2fcd0a%22%2C%22children%22%3A%5B%7B%22html%22%3A%22%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95%E4%B8%93%E7%94%A8%EF%BC%8Chot%20reload%20%E6%97%B6%E8%B0%83%E7%94%A8%EF%BC%8Crelease%E6%A8%A1%E5%BC%8F%E4%B8%8B%E4%B8%8D%E4%BC%9A%E8%A2%AB%E8%B0%83%E7%94%A8%22%2C%22id%22%3A%2256a8ac11-8091-4e46-b63a-28acf4187bea%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A4%7D%5D%2C%22zIndex%22%3A5%7D%2C%7B%22html%22%3A%22didChangeDependencies%22%2C%22id%22%3A%22dab807bc-f182-4b5b-9aa1-0598f1f0a381%22%2C%22children%22%3A%5B%7B%22html%22%3A%22State%E5%AF%B9%E8%B1%A1%E4%BE%9D%E8%B5%96%E5%8F%91%E7%94%9F%E5%8F%98%E5%8C%96%E6%97%B6%E8%B0%83%E7%94%A8%22%2C%22id%22%3A%22a67b6207-e49a-443d-be4c-0e8c53ef498c%22%2C%22children%22%3A%5B%5D%2C%22zIndex%22%3A0%7D%5D%2C%22zIndex%22%3A1%7D%5D%2C%22zIndex%22%3A12%7D%5D%2C%22zIndex%22%3A14%7D%5D%2C%22zIndex%22%3A20%2C%22x%22%3A-301%2C%22y%22%3A-9%7D%5D%7D%2C%22viewportOption%22%3A%22WYSIWYG%22%2C%22viewportSetting%22%3A%7B%22zoom%22%3A1%2C%22tlCanvasPoint%22%3A%5B361%2C-66.875%2C1%5D%2C%22width%22%3A764%2C%22height%22%3A431%7D%2C%22search%22%3A%22WidgetStatelessWidget%E7%94%A8%E4%BA%8E%E4%B8%8D%E9%9C%80%E8%A6%81%E7%BB%B4%E6%8A%A4%E7%8A%B6%E6%80%81%E7%9A%84%E5%9C%BA%E6%99%AFStatefullWidget%E4%B8%80%E4%B8%AAStatefulWidget%20%E7%B1%BB%E4%BC%9A%E5%AF%B9%E5%BA%94%E4%B8%80%E4%B8%AAState%20%E7%B1%BB%E5%BD%93State%E8%A2%AB%E6%94%B9%E5%8F%98%E6%97%B6%EF%BC%8C%E6%89%8B%E5%8A%A8%E8%B0%83%E7%94%A8setState()%20%E6%96%B9%E6%B3%95%E9%80%9A%E7%9F%A5Flutter%EF%BC%8CFlutter%E4%BC%9A%E9%87%8D%E6%96%B0%E8%B0%83%E7%94%A8buildState%E4%B8%A4%E4%B8%AA%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7%EF%BC%9Awidget%EF%BC%8C%E5%8D%B3%E4%B8%8E%E5%AE%83%E5%85%B3%E8%81%94%E7%9A%84StatefulWidget%E7%9A%84%E5%AE%9E%E4%BE%8B%EF%BC%8Ccontext%20%E5%8D%B3%20BuildContextState%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9FinitState%E3%80%90%E5%B8%B8%E7%94%A8%E3%80%91%E7%94%A8%E4%BA%8E%E7%8A%B6%E6%80%81%E5%88%9D%E5%A7%8B%E5%8C%96%E3%80%81%E8%AE%A2%E9%98%85%E4%BA%8B%E4%BB%B6%E9%80%9A%E7%9F%A5didUpdateWidget%E9%87%8D%E6%96%B0%E6%9E%84%E5%BB%BA%E6%97%B6%EF%BC%8C%E4%BC%9A%E6%A3%80%E6%B5%8BWidget%E5%90%8C%E4%B8%80%E4%BD%8D%E7%BD%AE%E7%9A%84%E6%96%B0%E6%97%A7%E8%8A%82%E7%82%B9%EF%BC%8C%E9%9C%80%E8%A6%81%E6%9B%B4%E6%96%B0%E6%97%B6%E4%BC%9A%E8%B0%83%E7%94%A8deactivate%E5%AF%B9%E8%B1%A1%E8%A2%AB%E7%A7%BB%E9%99%A4%E6%97%B6%EF%BC%8C%E4%BC%9A%E8%B0%83%E7%94%A8%E5%9B%9E%E8%B0%83%EF%BC%8C%E4%B8%80%E4%BA%9B%E5%9C%BA%E6%99%AF%E4%B8%8B%E4%BC%9A%E9%87%8D%E6%96%B0%E6%8F%92%E5%88%B0%E6%A0%91%E4%B8%AD%EF%BC%8C%E6%B2%A1%E6%9C%89%E7%A7%BB%E9%99%A4%E6%B2%A1%E6%9C%89%E9%87%8D%E6%96%B0%E6%8F%92%E5%85%A5%EF%BC%8C%E5%88%99%E4%BC%9A%E7%B4%A7%E6%8E%A5%E7%9D%80%E8%B0%83%E7%94%A8dispose()dispose%E3%80%90%E5%B8%B8%E7%94%A8%E3%80%91State%E5%AF%B9%E8%B1%A1%E8%A2%AB%E6%B0%B8%E4%B9%85%E9%94%80%E6%AF%81%E6%97%B6%E6%89%A7%E8%A1%8C%E5%9B%9E%E8%B0%83reassemble%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95%E4%B8%93%E7%94%A8%EF%BC%8Chot%20reload%20%E6%97%B6%E8%B0%83%E7%94%A8%EF%BC%8Crelease%E6%A8%A1%E5%BC%8F%E4%B8%8B%E4%B8%8D%E4%BC%9A%E8%A2%AB%E8%B0%83%E7%94%A8didChangeDependenciesState%E5%AF%B9%E8%B1%A1%E4%BE%9D%E8%B5%96%E5%8F%91%E7%94%9F%E5%8F%98%E5%8C%96%E6%97%B6%E8%B0%83%E7%94%A8%22%2C%22src%22%3A%22https%3A%2F%2Fintranetproxy.alipay.com%2Fskylark%2Flark%2F0%2F2020%2Fsvg%2F244212%2F1585218751366-48cca93c-5958-4c28-aeac-79f9ccd6640e.svg%22%2C%22__height%22%3A413%2C%22graphicsBBox%22%3A%7B%22x%22%3A-301%2C%22y%22%3A-148.375%2C%22width%22%3A1036%2C%22height%22%3A470%7D%2C%22id%22%3A%22fgRJ2%22%2C%22height%22%3A413%7D\"></card><p data-lake-id=\"070020a572077cee2693b205c0a2f486\" id=\"070020a572077cee2693b205c0a2f486\"><span data-lake-id=\"u0ab6cca1\" id=\"u0ab6cca1\">State 生命周期如下：</span></p><p data-lake-id=\"62ae66d26fdf624068dde60a7fe07791\" id=\"62ae66d26fdf624068dde60a7fe07791\"><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2020%2Fpng%2F246478%2F1585315909919-667063b1-e430-4c48-99d0-d0c094d2eb57.png%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A682%2C%22height%22%3A845%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A39605%2C%22originWidth%22%3A701%2C%22originHeight%22%3A869%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22search%22%3A%22%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22id%22%3A%22ZNdT0%22%7D\"></card></p><h4 data-lake-id=\"edJVp\" id=\"edJVp\"><span data-lake-id=\"ue51cacb7\" id=\"ue51cacb7\">2. Text、TextSpan、WidgetSpan</span></h4><ul list=\"ud8c5eba0\"><li fid=\"u38664078\" data-lake-id=\"8f4bb35e9560d6528489d1b7a4cff1f9\" id=\"8f4bb35e9560d6528489d1b7a4cff1f9\"><span data-lake-id=\"ud963c6ec\" id=\"ud963c6ec\">Text 显示文字</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22Text(%5Cn%5Ct%5C%22Hello%20World%5C%22%2C%5Cn%20%20textAlign%3A%20TextAlign.left%2C%5Cn%20%20maxLines%3A%201%2C%5Cn%20%20overflow%3A%20TextOverflow.ellipise%2C%5Cn%20%20style%3A%20TextStyle(%5Cn%20%20%5Ctcolor%3A%20Colors.blue%2C%5Cn%20%20%20%20fontSize%3A%2010%2C%5Cn%20%20%20%20...%5Cn%20%20)%5Cn)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22JIziT%22%7D\"></card><p data-lake-id=\"0589c3d41f5fe4fa86186c13c88f164a\" id=\"0589c3d41f5fe4fa86186c13c88f164a\"><br></p><ul list=\"u336ae7dc\"><li fid=\"ue582e598\" data-lake-id=\"0fdde3020af0782cc076f3de0af779b2\" id=\"0fdde3020af0782cc076f3de0af779b2\"><span data-lake-id=\"ue09a3538\" id=\"ue09a3538\">实际开发过程中，还会有一个Text不同部分安装不同样式显示，可以用TextSpan</span></li></ul><p data-lake-id=\"4132330592e4e1276a2fbab4c7ea9111\" id=\"4132330592e4e1276a2fbab4c7ea9111\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22Text.rich(%5Cn%20%20TextSpan(%5Cn%20%20%20%20children%3A%20%5B%5Cn%20%20%20%20%20%20TextSpan(%5Cn%20%20%20%20%20%20%20%20text%3A%20'Title'%2C%5Cn%20%20%20%20%20%20%20%20style%3A%20TextStyle(%5Cn%20%20%20%20%20%20%20%20%5Ctcolor%3A%20Color(0xff000000)%2C%5Cn%20%20%20%20%20%20%20%20%20%20fontWeight%3A%20bold%2C%5Cn%20%20%20%20%20%20%20%20)%5Cn%20%20%20%20%20%20)%2C%5Cn%20%20%20%20%20%20TextSpan(%5Cn%20%20%20%20%20%20%5Cttext%3A%20'description'%2C%5Cn%20%20%20%20%20%20%20%20style%3A%20TextStyle(%5Cn%20%20%20%20%20%20%20%20%20%20color%3A%20Colors.blue%2C%5Cn%20%20%20%20%20%20%20%20)%5Cn%20%20%20%20%20%20)%2C%5Cn%20%20%20%20%20%20%2F%2F%20WidgetSpan%20%E5%8F%AF%E4%BB%A5%E5%AE%9E%E7%8E%B0%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0%E7%9A%84%E6%95%88%E6%9E%9C%5Cn%20%20%20%20%20%20WidgetSpan(%5Cn%20%20%20%20%20%20%5Ctchild%3A%20Container(%5Cn%20%20%20%20%20%20%20%20%5Ct...%5Cn%20%20%20%20%20%20%20%20)%5Cn%20%20%20%20%20%20)%5Cn%20%20%20%20%5D%5Cn%5Ct)%5Cn)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22c1ndF%22%7D\"></card><p data-lake-id=\"7886cb9df76f103256c68b5189d2ae64\" id=\"7886cb9df76f103256c68b5189d2ae64\"><br></p><h4 data-lake-id=\"STTW5\" id=\"STTW5\"><span data-lake-id=\"u8e02ef18\" id=\"u8e02ef18\">3. Button、Image</span></h4><ul list=\"ud8cf6572\"><li fid=\"u18d09bc4\" data-lake-id=\"5fab3555e0ef9d22d7b704e5989d51cd\" id=\"5fab3555e0ef9d22d7b704e5989d51cd\"><span data-lake-id=\"u6ca341e8\" id=\"u6ca341e8\">Button </span></li></ul><p data-lake-id=\"89c2e5a671d97d3ff406a9081568feb5\" id=\"89c2e5a671d97d3ff406a9081568feb5\" style=\"text-indent: 2em\"><span data-lake-id=\"ub518e324\" id=\"ub518e324\">Flutter 提供了几种样式的Button，也支持自定义外观</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22RaisedButton(%5Cn%20%20child%3A%20Text(%5C%22normal%5C%22)%2C%5Cn%20%20onPressed%3A%20()%20%7B%7D%2C%5Cn)%3B%5Cn%2F%2F%20%E6%89%81%E5%B9%B3%E6%8C%89%E9%92%AE%5CnFlatButton(%5Cn%20%20child%3A%20Text(%5C%22normal%5C%22)%2C%5Cn%20%20onPressed%3A%20()%20%7B%7D%2C%5Cn)%5Cn%2F%2F%20%E9%BB%98%E8%AE%A4%E6%9C%89%E4%B8%80%E4%B8%AA%E8%BE%B9%E6%A1%86%5CnOutlineButton(%5Cn%20%20child%3A%20Text(%5C%22normal%5C%22)%2C%5Cn%20%20onPressed%3A%20()%20%7B%7D%2C%5Cn)%5Cn%2F%2F%20icon%20%E6%8C%89%E9%92%AE%5CnIconButton(%5Cn%20%20icon%3A%20Icon(Icons.thumb_up)%2C%5Cn%20%20onPressed%3A%20()%20%7B%7D%2C%5Cn)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22F0BOl%22%7D\"></card><p data-lake-id=\"6218ac6bb21d072cfe79339bbde96623\" id=\"6218ac6bb21d072cfe79339bbde96623\"><br></p><ul list=\"uc50cf057\"><li fid=\"u26d6d033\" data-lake-id=\"89aa61804ca4eee3f1589927e014c4e4\" id=\"89aa61804ca4eee3f1589927e014c4e4\"><span data-lake-id=\"u6fc34485\" id=\"u6fc34485\">Image</span></li></ul><p data-lake-id=\"2f631bf817158f69ac32769f0e0d6b09\" id=\"2f631bf817158f69ac32769f0e0d6b09\" style=\"text-indent: 2em\"><span data-lake-id=\"ua0aad5df\" id=\"ua0aad5df\">Image组件用来显示图片，数据源可以是 assets、文件、网络</span></p><p data-lake-id=\"e78191a2209348f99829d205c493ef03\" id=\"e78191a2209348f99829d205c493ef03\" style=\"text-indent: 2em\"><span data-lake-id=\"uef7295db\" id=\"uef7295db\">Image 对加载过的图片会有缓存（内存），默认缓存数量是1000，最大缓存空间是100M</span></p><p data-lake-id=\"134624b0cf2f7c3029400f175c6a68b7\" id=\"134624b0cf2f7c3029400f175c6a68b7\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22%2F%2F%20%E5%8A%A0%E8%BD%BD%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%5CnImage(%5Cn%5Ctimage%3A%20AssetImage('assets%2Fimages%2F3.0x%2Fkaola.png')%2C%5Cn%20%20width%3A%20100%2C%5Cn)%5Cn%2F%2F%20%E5%BF%AB%E6%8D%B7%5CnImage.assets(%5Cn%20%20'assets%2Fimages%2F3.0x%2Fkaola.png'%2C%5Cn%20%20width%3A%20100%2C%5Cn)%5Cn%5Cn%2F%2F%20%E5%8A%A0%E8%BD%BD%E7%BD%91%E7%BB%9C%E5%9B%BE%E7%89%87%5Cn%5CnImage(%5Cn%5Ctimage%3A%20NetworkImage('%24imageUrl')%2C%5Cn%20%20width%3A%20100.0%5Cn)%5Cn%2F%2F%20%E5%BF%AB%E6%8D%B7%5CnImage.network(%5Cn%5Ct'%24imageUrl'%2C%5Cn%20%20width%3A%20100.0%2C%5Cn)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22SjlEE%22%7D\"></card><p data-lake-id=\"b2172e2db01f93d6ca8ccf0f8068770e\" id=\"b2172e2db01f93d6ca8ccf0f8068770e\"><br></p><h4 data-lake-id=\"alrIu\" id=\"alrIu\"><span data-lake-id=\"u2e67b1b0\" id=\"u2e67b1b0\">3. 表单、输入框、单选、复选</span></h4><p data-lake-id=\"23eb41a88f34a46b1b028122dd81c0f1\" id=\"23eb41a88f34a46b1b028122dd81c0f1\"><br></p><h4 data-lake-id=\"OHqpN\" id=\"OHqpN\"><span data-lake-id=\"u4441af4d\" id=\"u4441af4d\">4. 布局组件</span></h4><ul list=\"ua123af99\"><li fid=\"u443683e1\" data-lake-id=\"75e4b5e8986f3a58ae77ab068c0d0af0\" id=\"75e4b5e8986f3a58ae77ab068c0d0af0\"><span data-lake-id=\"u80d9abda\" id=\"u80d9abda\">线性布局：Row、Column</span></li><li fid=\"u443683e1\" data-lake-id=\"3c7d60ea60aba7f18c67972595f2f17d\" id=\"3c7d60ea60aba7f18c67972595f2f17d\"><span data-lake-id=\"uf5e0b2ef\" id=\"uf5e0b2ef\">弹性布局：Flex、Expanded</span></li><li fid=\"u443683e1\" data-lake-id=\"6133439882425aee1740a591cd926a07\" id=\"6133439882425aee1740a591cd926a07\"><span data-lake-id=\"uc60225cf\" id=\"uc60225cf\">流式布局：Wrap、Flow</span></li><li fid=\"u443683e1\" data-lake-id=\"c99d6984b1bfbc789c9ed8604386c886\" id=\"c99d6984b1bfbc789c9ed8604386c886\"><span data-lake-id=\"ue675000c\" id=\"ue675000c\">层叠布局（绝对定位）：Stack、Position</span></li><li fid=\"u443683e1\" data-lake-id=\"ffbbdcec8a9ee44b34de9acf7438a7f7\" id=\"ffbbdcec8a9ee44b34de9acf7438a7f7\"><span data-lake-id=\"ufa942eca\" id=\"ufa942eca\">对齐：Align</span></li></ul><p data-lake-id=\"b84f1606564fbfaba8f4fba68badf441\" id=\"b84f1606564fbfaba8f4fba68badf441\"><br></p><h4 data-lake-id=\"exdHa\" id=\"exdHa\"><span data-lake-id=\"u186ebcc0\" id=\"u186ebcc0\">5. 容器类组件</span></h4><ul list=\"u70baa5a6\"><li fid=\"u397ef10e\" data-lake-id=\"555e1aee7a157a41af3fd0fc444f6dd4\" id=\"555e1aee7a157a41af3fd0fc444f6dd4\"><span data-lake-id=\"u32e3e094\" id=\"u32e3e094\">Container 类似 div</span></li></ul><p data-lake-id=\"c3ca689df3e8d4392d92cfd53004631f\" id=\"c3ca689df3e8d4392d92cfd53004631f\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22%2F%2F%20%E5%85%B6%E4%B8%AD%20decoration%20constraints%20transform%20padding%20%E9%83%BD%E6%9C%89%E5%AF%B9%E5%BA%94%E7%9A%84%E5%8D%95%E7%8B%AC%E7%9A%84Box%E7%B1%BB%5CnContainer(%5Cn%20%20width%3A%20100%2C%5Cn%20%20height%3A%20100%2C%5Cn%20%20color%3A%20Colors.white%2C%20%2F%2F%20%E8%83%8C%E6%99%AF%E8%89%B2%5Cn%20%20padding%3A%20EdgeInsets.fromLTRB(20%2C%2010%2C%2020%2C%2010)%2C%5Cn%20%20margin%3A%20EdgeInsets.fromLTRB(20%2C%2010%2C%2020%2C%2010)%2C%5Cn%20%20%2F%2F%20%E8%83%8C%E6%99%AF%E8%A3%85%E9%A5%B0%EF%BC%88%E5%9C%86%E8%A7%92%E3%80%81%E8%83%8C%E6%99%AF%E8%89%B2%E3%80%81boxShadow%E7%AD%89%EF%BC%89%5Cn%5Ctdecoration%3A%20BoxDecoration(%5Cn%20%20%20%20borderRadius%3A%20BorderRadius.all(Radius.circular(20))%2C%5Cn%20%20%20%20color%3A%20Color(0xffffe030)%2C%5Cn%20%20)%2C%5Cn%20%20%2F%2F%20%E5%A4%A7%E5%B0%8F%E9%99%90%E5%88%B6%5Cn%20%20constraints%3A%20BoxConstraints(%5Cn%20%20%20%20maxWidth%3A%2050%2C%5Cn%20%20%20%20minWidth%3A%2050%5Cn%20%20)%2C%5Cn%20%20%2F%2F%20%E5%8F%98%E6%8D%A2%5Cn%20%20transform%3A%20Matrix4.translationValues(20%2C%200%2C%200)%2C%5Cn%20%20child%3A%20Text(%5Cn%20%20%20%20'%24labelValue'%2C%5Cn%20%20%20%20style%3A%20TextStyle(%5Cn%20%20%20%20%20%20fontSize%3A%2013%2C%5Cn%20%20%20%20%20%20fontWeight%3A%20FontWeight.w500%2C%5Cn%20%20%20%20%20%20color%3A%20Colors.black%2C%5Cn%20%20%20%20)%2C%5Cn%20%20)%2C%5Cn)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22BvuPb%22%7D\"></card><p data-lake-id=\"910a146a5db09dcfe150989260695d77\" id=\"910a146a5db09dcfe150989260695d77\"><br></p><h4 data-lake-id=\"VZnjN\" id=\"VZnjN\"><span data-lake-id=\"u2f4ff40f\" id=\"u2f4ff40f\">6. 可滚动组件</span></h4><ul list=\"u824c14a1\"><li fid=\"ua40ce29d\" data-lake-id=\"fe4583b9ec2fd1d3db7a072e961d60b7\" id=\"fe4583b9ec2fd1d3db7a072e961d60b7\"><span data-lake-id=\"u5ce4a1df\" id=\"u5ce4a1df\">ListView</span></li><li fid=\"ua40ce29d\" data-lake-id=\"cc1219780decebaf0c29a5482d6e0c20\" id=\"cc1219780decebaf0c29a5482d6e0c20\"><span data-lake-id=\"u0f533c18\" id=\"u0f533c18\">GridView</span></li><li fid=\"ua40ce29d\" data-lake-id=\"2f6e24ba5270c6a4de6e16de7681f3c9\" id=\"2f6e24ba5270c6a4de6e16de7681f3c9\"><span data-lake-id=\"uc4a192b3\" id=\"uc4a192b3\">SingleChildScrollView</span></li><li fid=\"ua40ce29d\" data-lake-id=\"76f46904e3e2add0ad01ec49e04111aa\" id=\"76f46904e3e2add0ad01ec49e04111aa\"><span data-lake-id=\"u81204edc\" id=\"u81204edc\">CustomScrollView</span></li></ul><h2 data-lake-id=\"V1RFk\" id=\"V1RFk\"><span data-lake-id=\"u229a0e43\" id=\"u229a0e43\">四、路由</span></h2><h4 data-lake-id=\"bZYp7\" id=\"bZYp7\"><span data-lake-id=\"u0bb5bfdd\" id=\"u0bb5bfdd\">1. MaterialPageRoute</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22Navigator.push(%20context%2C%5Cn%20%20MaterialPageRoute(%5Cn%20%20%20%20builder%3A%20(context)%20%7B%5Cn%20%20%20%20%20%20return%20NewRoute()%3B%20%2F%2F%20page%5Cn%20%20%20%20%7D%2C%5Cn%20%20%20%20%2F%2F%20%E5%8C%85%E5%90%AB%E8%B7%AF%E7%94%B1%E4%BF%A1%E6%81%AF%EF%BC%8Cname%EF%BC%8Carguments%5Cn%20%20%20%20settings%3A%20RouteSettings(%5Cn%20%20%20%20%5Ctname%3A%20'xx'%2C%5Cn%20%20%20%20%20%20arguments%3A%20%7B'xx'%3A%20'xxx'%7D%5Cn%20%20%20%20)%2C%5Cn%20%20%20%20maintainState%3A%20true%2C%20%2F%2F%20%E9%BB%98%E8%AE%A4%E8%BF%9B%E5%85%A5%E4%B8%8B%E4%B8%AA%E8%B7%AF%E7%94%B1%E6%97%B6%EF%BC%8C%E5%8E%9F%E6%9D%A5%E8%B7%AF%E7%94%B1%E4%BB%8D%E7%84%B6%E4%BC%9A%E4%BF%9D%E5%AD%98%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%5Cn%20%20%20%20fullscreenDialog%3A%20false%2C%20%2F%2F%20%E6%98%AF%E5%90%A6%E6%98%AF%E5%85%A8%E5%B1%8F%E5%AF%B9%E8%AF%9D%E6%A1%86%5Cn%20%20)%5Cn)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22fl7NU%22%7D\"></card><p data-lake-id=\"814b2dff080c89c5c608eb8f762bed17\" id=\"814b2dff080c89c5c608eb8f762bed17\"><br></p><h4 data-lake-id=\"u39oY\" id=\"u39oY\"><span data-lake-id=\"u5a9357d0\" id=\"u5a9357d0\">2. Navigator</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22Navigator.push(BuildContext%20context%2C%20Route%20route)%3B%5CnNavigator.pop(BuildContext%20context%2C%20%5Bresult%5D)%3B%5Cn%5Cnvar%20result%20%3D%20await%20Navigator.push(context%2C%20xxx)%3B%5CnNavigator.pop(context%2C%20'%E8%BF%94%E5%9B%9E%E5%80%BCxxx')%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22RKf9N%22%7D\"></card><p data-lake-id=\"acb2e4ad13b72f4c85efaf5b1940ec32\" id=\"acb2e4ad13b72f4c85efaf5b1940ec32\"><br></p><h4 data-lake-id=\"DJZnx\" id=\"DJZnx\"><span data-lake-id=\"uc0392225\" id=\"uc0392225\">3. 命名路由</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22MaterialApp(%5Cn%20%20title%3A%20'Flutter%20Demo'%2C%5Cn%20%20theme%3A%20ThemeData(%5Cn%20%20%20%20primarySwatch%3A%20Colors.blue%2C%5Cn%20%20)%2C%5Cn%20%20%2F%2F%E6%B3%A8%E5%86%8C%E8%B7%AF%E7%94%B1%E8%A1%A8%5Cn%20%20routes%3A%7B%5Cn%20%20%20%5C%22new_page%5C%22%3A(context)%20%3D%3E%20NewRoute()%2C%5Cn%20%20%20%20...%20%2F%2F%20%E7%9C%81%E7%95%A5%E5%85%B6%E5%AE%83%E8%B7%AF%E7%94%B1%E6%B3%A8%E5%86%8C%E4%BF%A1%E6%81%AF%5Cn%20%20%7D%20%2C%5Cn%20%20home%3A%20MyHomePage(title%3A%20'Flutter%20Demo%20Home%20Page')%2C%5Cn)%3B%5Cn%5Cn%2F%2F%20%E6%89%93%E5%BC%80%E5%91%BD%E5%90%8D%E8%B7%AF%E7%94%B1%20%5CnNavigator.pushNamed(context%2C%20'new_page'%2C%20arguments%3A%20'xxxx')%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22KktDG%22%7D\"></card><p data-lake-id=\"9b748adfd93053d0dd517d7d608092c3\" id=\"9b748adfd93053d0dd517d7d608092c3\"><br></p><h4 data-lake-id=\"QvYRh\" id=\"QvYRh\"><span data-lake-id=\"uabd7d937\" id=\"uabd7d937\">4. 命名路由Hook</span></h4><blockquote data-lake-id=\"u8d02157d\" id=\"u8d02157d\"><p data-lake-id=\"06f5cf5a1b9e9a63c99b5556fb478bfc\" id=\"06f5cf5a1b9e9a63c99b5556fb478bfc\"><span data-lake-id=\"u2739df3a\" id=\"u2739df3a\">如果指定的路由名在路由表中已注册，则会调用路由表中的builder函数来生成路由组件；</span></p><p data-lake-id=\"59a28301a0f1d14585f4a524a76cff34\" id=\"59a28301a0f1d14585f4a524a76cff34\"><span data-lake-id=\"udebfc2b0\" id=\"udebfc2b0\">如果路由表中没有注册，才会调用onGenerateRoute来生成路</span></p><p data-lake-id=\"33e448f980b7932ea34a061f59cbb6b6\" id=\"33e448f980b7932ea34a061f59cbb6b6\"><br></p></blockquote><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22MaterialApp(%5Cn%20%20...%20%2F%2F%E7%9C%81%E7%95%A5%E6%97%A0%E5%85%B3%E4%BB%A3%E7%A0%81%5Cn%20%20onGenerateRoute%3A(RouteSettings%20settings)%7B%5Cn%20%20%20%20%20%20return%20MaterialPageRoute(builder%3A%20(context)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20String%20routeName%20%3D%20settings.name%3B%5Cn%20%20%20%20%20%20%20%2F%2F%20%E5%A6%82%E6%9E%9C%E8%AE%BF%E9%97%AE%E7%9A%84%E8%B7%AF%E7%94%B1%E9%A1%B5%E9%9C%80%E8%A6%81%E7%99%BB%E5%BD%95%EF%BC%8C%E4%BD%86%E5%BD%93%E5%89%8D%E6%9C%AA%E7%99%BB%E5%BD%95%EF%BC%8C%E5%88%99%E7%9B%B4%E6%8E%A5%E8%BF%94%E5%9B%9E%E7%99%BB%E5%BD%95%E9%A1%B5%E8%B7%AF%E7%94%B1%EF%BC%8C%5Cn%20%20%20%20%20%20%20%2F%2F%20%E5%BC%95%E5%AF%BC%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%EF%BC%9B%E5%85%B6%E5%AE%83%E6%83%85%E5%86%B5%E5%88%99%E6%AD%A3%E5%B8%B8%E6%89%93%E5%BC%80%E8%B7%AF%E7%94%B1%E3%80%82%5Cn%20%20%20%20%20%7D%5Cn%20%20%20)%3B%5Cn%20%20%7D%5Cn)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22su9ys%22%7D\"></card><p data-lake-id=\"e066f53dcc85db6ec020a3c576412379\" id=\"e066f53dcc85db6ec020a3c576412379\"><br></p><h2 data-lake-id=\"O0cHE\" id=\"O0cHE\"><span data-lake-id=\"u0629d031\" id=\"u0629d031\">五、网络请求</span></h2><h4 data-lake-id=\"2CCRW\" id=\"2CCRW\"><span data-lake-id=\"u125585bd\" id=\"u125585bd\">1. Dio库</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22plain%22%2C%22code%22%3A%22dependencies%3A%5Cn%20%20dio%3A%203.x%20%23latest%20version%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22cjFrV%22%7D\"></card><p data-lake-id=\"38d4ad6f3bf0d09084770bb780956d05\" id=\"38d4ad6f3bf0d09084770bb780956d05\"><br></p><ul list=\"u048eeda2\"><li fid=\"u0e7f8b76\" data-lake-id=\"9d35be33aa1591dc7b00952c0218658f\" id=\"9d35be33aa1591dc7b00952c0218658f\"><span data-lake-id=\"u56b914e0\" id=\"u56b914e0\">基础使用</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22%2F%2F%20get%20%E8%AF%B7%E6%B1%82%5CnResponse%20res%20%3D%20await%20Dio().get('https%3A%2F%2Fwww.kaola.com'%2C%20queryParameters%3A%20%7B%5Cn%5Ct%5C%22xx%5C%22%3A%20%5C%22xx%5C%22%5Cn%7D)%3B%5Cn%2F%2F%20post%20%E8%AF%B7%E6%B1%82%5CnResponse%20res%20%3D%20await%20Dio().post('https%3A%2F%2Fwwww.kaola.com%2Fapi'%2C%20data%3A%20%7B%5Cn%5Ct'xx'%3A%20'xx'%5Cn%7D)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22ODz6z%22%7D\"></card><p data-lake-id=\"b2aca5030321248bae26dcd825de1708\" id=\"b2aca5030321248bae26dcd825de1708\"><br></p><ul list=\"uadb8104f\"><li fid=\"u1b97bd82\" data-lake-id=\"bc9b84b7b2eb97257ebebfeffbfe94af\" id=\"bc9b84b7b2eb97257ebebfeffbfe94af\"><span data-lake-id=\"ua15b7a34\" id=\"ua15b7a34\">BaseOptions</span></li></ul><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22Dio%20dio%20%3D%20Dio(BaseOptions(%5Cn%20%20baseUrl%3A%20'https%3A%2F%2Fmocks.alibaba-inc.com%2Fmock%2Fkaola-like'%2C%5Cn%20%20%2F%2F%20....%5Cn))%3B%5Cnawait%20%20dio.get('%2Fxx')%3B%5Cn%5Cnawait%20dio.post('%2Fxx')%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22k81HK%22%7D\"></card><p data-lake-id=\"e52c260f1cd018f8129655f61be126c7\" id=\"e52c260f1cd018f8129655f61be126c7\"><br></p><h4 data-lake-id=\"27Q4r\" id=\"27Q4r\"><span data-lake-id=\"u7398c6e3\" id=\"u7398c6e3\">2. 处理cookie</span></h4><p data-lake-id=\"132fde0b0af6b2c4a3c8a00e48d11336\" id=\"132fde0b0af6b2c4a3c8a00e48d11336\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22yaml%22%2C%22code%22%3A%22%23%20%E4%BE%9D%E8%B5%96%5Cndio_cookie_manager%3A%20%5E1.0.0%5Cncookie_jar%3A%20%5E1.0.1%5Cn%23%20%E5%BC%95%E5%85%A5%E8%AF%A5%E4%BE%9D%E8%B5%96%E5%90%8E%EF%BC%8Cios%E6%A8%A1%E6%8B%9F%E5%99%A8%E9%9C%80%E8%A6%81%E9%87%8D%E6%96%B0%20build%EF%BC%8C%E5%8F%AF%E8%83%BD%E9%9C%80%E8%A6%81%E8%BF%9Bios%E7%9B%AE%E5%BD%95%E6%89%A7%E8%A1%8C%20pod%20install%5Cnpath_provider%3A%20%5E1.6.5%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22fmVzl%22%7D\"></card><p data-lake-id=\"64cc28c5970ee4647ffa86e629020245\" id=\"64cc28c5970ee4647ffa86e629020245\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22Dio%20dio%20%3D%20Dio(BaseOptions(%5Cn%20%20baseUrl%3A%20'https%3A%2F%2Fmocks.alibaba-inc.com%2Fmock%2Fkaola-like'%2C%5Cn%20%20%2F%2F%20....%5Cn))%3B%5CnDirectory%20appDocDir%20%3D%20await%20getApplicationDocumentsDirectory()%3B%5CnString%20appDocPath%20%3D%20appDocDir.path%3B%5Cnvar%20cookieJar%20%3D%20PersistCookieJar(dir%3A%20'%24appDocPath%2F.cookies%2F')%3B%5Cn%5Cndio.interceptors.add(CookieManager(cookieJar))%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22W4T7V%22%7D\"></card><p data-lake-id=\"ba5319269219ea407ac45529cce8bd0b\" id=\"ba5319269219ea407ac45529cce8bd0b\"><br></p><h4 data-lake-id=\"WtYha\" id=\"WtYha\"><span data-lake-id=\"ub8e4c9c3\" id=\"ub8e4c9c3\">3. json 转 model</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22class%20User%20%7B%5Cn%20%20final%20String%20name%3B%5Cn%20%20final%20String%20email%3B%5Cn%5Cn%20%20User(this.name%2C%20this.email)%3B%5Cn%5Cn%20%20User.fromJson(Map%3CString%2C%20dynamic%3E%20json)%5Cn%20%20%20%20%20%20%3A%20name%20%3D%20json%5B'name'%5D%2C%5Cn%20%20%20%20%20%20%20%20email%20%3D%20json%5B'email'%5D%3B%5Cn%5Cn%20%20Map%3CString%2C%20dynamic%3E%20toJson()%20%3D%3E%5Cn%20%20%20%20%3CString%2C%20dynamic%3E%7B%5Cn%20%20%20%20%20%20'name'%3A%20name%2C%5Cn%20%20%20%20%20%20'email'%3A%20email%2C%5Cn%20%20%20%20%7D%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%2293zGL%22%7D\"></card><p data-lake-id=\"e7db5d8a4c63e33008159228f82209c2\" id=\"e7db5d8a4c63e33008159228f82209c2\"><br></p><h2 data-lake-id=\"sIx5F\" id=\"sIx5F\"><span data-lake-id=\"uaee04495\" id=\"uaee04495\">六、持久化存储</span></h2><p data-lake-id=\"12a23ae632346b797cfcaae28fbb83e7\" id=\"12a23ae632346b797cfcaae28fbb83e7\"><br></p><h4 data-lake-id=\"kLVqm\" id=\"kLVqm\"><span data-lake-id=\"u6a9f2fac\" id=\"u6a9f2fac\">1. SharedPreferences</span></h4><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22yaml%22%2C%22code%22%3A%22%23%20%E5%BC%95%E5%85%A5%E8%AF%A5%E4%BE%9D%E8%B5%96%E5%90%8E%EF%BC%8Cios%E6%A8%A1%E6%8B%9F%E5%99%A8%E9%9C%80%E8%A6%81%E9%87%8D%E6%96%B0%20build%EF%BC%8C%E5%8F%AF%E8%83%BD%E9%9C%80%E8%A6%81%E8%BF%9Bios%E7%9B%AE%E5%BD%95%E6%89%A7%E8%A1%8C%20pod%20install%5Cnshared_preferences%3A%20%5E0.5.6%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22VexTA%22%7D\"></card><p data-lake-id=\"8e7dcee0e27a8c64fb81ba62c918ccb6\" id=\"8e7dcee0e27a8c64fb81ba62c918ccb6\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22%2F%2F%20key-value%20%E5%AD%98%E5%82%A8%5CnSharedPreferences%20_prefs%20%3D%20await%20SharedPreferences.getInstance()%3B%5Cn%2F%2F%20%E5%AD%98%20key%5Cnawiat%20_prefs.setString(key%2C%20value)%3B%5Cn%2F%2F%20%E8%AF%BB%20key%5CnString%20value%20%3D%20_prefs.getString(key)%3B%5Cn%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22P2a1q%22%7D\"></card><p data-lake-id=\"33e4d77e425e534c783575a670c954af\" id=\"33e4d77e425e534c783575a670c954af\"><br></p><h4 data-lake-id=\"AylVv\" id=\"AylVv\"><span data-lake-id=\"ubc353969\" id=\"ubc353969\">2. 文件操作</span></h4><p data-lake-id=\"03d37ff607f2bdb8736a4a7fd8dc837b\" id=\"03d37ff607f2bdb8736a4a7fd8dc837b\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22%2F%2F%20path_provider%5CnDirectory%20appDocDir%20%3D%20await%20getApplicationDocumentsDirectory()%3B%5Cn%20String%20appDocPath%20%3D%20appDocDir.path%3B%5CnFile%20file%20%3D%20new%20File('%24path%2Fcounter.txt')%3B%5Cn%5Cn%2F%2F%20%E8%AF%BB%5CnString%20contents%20%3D%20await%20file.readAsString()%3B%5Cn%2F%2F%20%E5%86%99%5Cnawait%20file.writeAsString()%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22kh3VD%22%7D\"></card><p data-lake-id=\"695bbb2d39775caf23d4ccbe9c093025\" id=\"695bbb2d39775caf23d4ccbe9c093025\"><br></p><h2 data-lake-id=\"1XIyD\" id=\"1XIyD\"><span data-lake-id=\"uf20af2a4\" id=\"uf20af2a4\">七、动画</span></h2><ul list=\"ue2cdf75a\"><li fid=\"ube18ec2d\" data-lake-id=\"c6f80cf75260bb2abf1291c155345434\" id=\"c6f80cf75260bb2abf1291c155345434\"><span data-lake-id=\"u179154cc\" id=\"u179154cc\">Animation: 主要用于保存动画插值和状态</span></li></ul><ul list=\"ue2cdf75a\" data-lake-indent=\"1\"><li fid=\"uc2c620e0\" data-lake-id=\"9b2ccb93bd40f736abb81746a0cb8c6c\" id=\"9b2ccb93bd40f736abb81746a0cb8c6c\"><span data-lake-id=\"ua3a28dd4\" id=\"ua3a28dd4\">addListener(): 帧监听器，每一帧都会被调用</span></li><li fid=\"uc2c620e0\" data-lake-id=\"35e04c24d08546c6e17ce5dc3d3956da\" id=\"35e04c24d08546c6e17ce5dc3d3956da\"><span data-lake-id=\"u8388b65e\" id=\"u8388b65e\">addStatusListener(): 状态改变监听器，动画开始、结束、正向或反向 时会调用状态改变监听器</span></li></ul><ul list=\"ue2cdf75a\" start=\"2\"><li fid=\"ube18ec2d\" data-lake-id=\"1a26c0bdb822da02b275e6b597c4c5fa\" id=\"1a26c0bdb822da02b275e6b597c4c5fa\"><span data-lake-id=\"ue9d9ab9a\" id=\"ue9d9ab9a\">Curve: 用来描述动画过程</span></li><li fid=\"ube18ec2d\" data-lake-id=\"47e5e5815552f4902ae005b7b70621e7\" id=\"47e5e5815552f4902ae005b7b70621e7\"><span data-lake-id=\"u67c7ed0f\" id=\"u67c7ed0f\">AnimationController: 用于控制动画，动画的启动 forward()、停止 stop()、反向播放reverse()</span></li></ul><p data-lake-id=\"cea2ca4136112596d2396650440cdb52\" id=\"cea2ca4136112596d2396650440cdb52\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22dart%22%2C%22code%22%3A%22final%20AnimationController%20controller%20%3D%20new%20AnimationController(%5Cn%20%20%20%20duration%3A%20const%20Duration(milliseconds%3A%202000)%2C%20%5Cn%20%20%5Ctvsync%3A%20this%5Cn)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Afalse%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22id%22%3A%22qnOs1%22%7D\"></card><p data-lake-id=\"c42d0adaa81f530b7fff023cc2ff29c7\" id=\"c42d0adaa81f530b7fff023cc2ff29c7\"><br></p><h2 data-lake-id=\"4QriH\" id=\"4QriH\"><span data-lake-id=\"ue78d8c2a\" id=\"ue78d8c2a\">参考</span></h2><ul list=\"uae8a3d07\"><li fid=\"ub0a9cacb\" data-lake-id=\"5221944480adb36feb8ff499adc298e2\" id=\"5221944480adb36feb8ff499adc298e2\"><a href=\"https://book.flutterchina.club/intro.html\" target=\"_blank\" data-lake-id=\"u324bcaab\" id=\"u324bcaab\"><span data-lake-id=\"u04c5bcb2\" id=\"u04c5bcb2\">Flutter 实战</span></a></li><li fid=\"ub0a9cacb\" data-lake-id=\"cab84f1d055f286af4f79497099fa881\" id=\"cab84f1d055f286af4f79497099fa881\"><a href=\"https://flutter.dev\" target=\"_blank\" data-lake-id=\"ub5514dc2\" id=\"ub5514dc2\"><span data-lake-id=\"ub0d80617\" id=\"ub0d80617\">Flutter 官网</span></a></li><li fid=\"ub0a9cacb\" data-lake-id=\"832da0cb90de715ebad391584a37a7a3\" id=\"832da0cb90de715ebad391584a37a7a3\"><a href=\"https://pub.dev/\" target=\"_blank\" data-lake-id=\"u48312c57\" id=\"u48312c57\"><span data-lake-id=\"ud29854f9\" id=\"ud29854f9\">Flutter 仓库</span></a></li></ul>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2022-09-13T09:22:08.000Z",
    "deleted_at": null,
    "created_at": "2022-09-09T17:38:42.000Z",
    "updated_at": "2022-09-13T09:22:09.000Z",
    "published_at": "2022-09-13T09:22:08.000Z",
    "first_published_at": "2022-09-09T17:39:08.847Z",
    "word_count": 1159,
    "cover": "https://intranetproxy.alipay.com/skylark/lark/0/2020/svg/244212/1585218751366-48cca93c-5958-4c28-aeac-79f9ccd6640e.svg",
    "description": "tags:flutterflutter 入门一、HelloWorld演示二、开发环境export PUB_HOSTED_URL=https://pub.flutter-io.cn export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-i...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  }
]